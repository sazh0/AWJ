{"version":3,"sources":["assets/AWJLOGO.svg","assets/BlueBox.svg","assets/RedBlueBox.svg","assets/SmallSqrs1.svg","assets/SmallSqrs2.svg","assets/LeftArrow.svg","assets/logo.png","assets/GoalDecomposeIcon.svg","assets/BMICON.svg","assets/DashBIcon.svg","assets/ProjIcon.svg","assets/CompanyFileIcon.svg","assets/BMIconD.svg","assets/GDIcon.svg","assets/AWJwithName.svg","assets/BMLOGO.svg","assets/GD_LOGO.svg","assets/SideSqrs.svg","assets/2030.svg","assets/Rectangle102.svg","assets/Rectangle103.svg","assets/Intersect.png","assets/MONSHAAT.png","assets/Aws.png","assets/sqrs.svg","Service1Page.js","Service2Page.js","firebase.js","CreateAccountPage.js","ProcessingStatus.js","NotificationIcon.js","Header.js","Dashboard.js","BusinessModelResult.js","NotificationSystem.js","NotificationContext.js","BusinessModelPage.js","CreateCompanyAccount.js","GoalDecompose.js","SignIn.js","Services.js","NavigationHeader.js","faq.jsx","HomePage.js","GoalDecomposingResult.js","App.js","index.js"],"names":["module","exports","Service1Page","navigate","useNavigate","useEffect","document","querySelectorAll","forEach","element","index","setTimeout","style","opacity","transform","React","createElement","className","alt","src","AWJLOGO","title","onClick","cursor","BlueBox","aria-hidden","RedBlueBox","GoalDecomposeIcon","aria-label","Service2Page","BMICON","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","getAuth","TermsModal","_ref","onClose","onAccept","e","stopPropagation","display","gap","justifyContent","ErrorMessage","_ref2","message","FaExclamationTriangle","PasswordInstructions","_ref3","password","strength","length","test","calculateStrength","isLengthValid","hasUpperCase","hasNumber","hasSpecial","alignItems","FaInfoCircle","marginLeft","color","FaCheck","FaTimes","validateField","field","value","undefined","trim","formData","email","Notification","_ref4","type","PasswordStrengthMeter","_ref5","width","FormField","_ref6","name","label","icon","onChange","onFocus","onBlur","placeholder","error","required","readOnly","showCheckmark","boxSizing","CreateAccountPage","setFormData","useState","firstName","lastName","confirmEmail","confirmPassword","phoneNumber","companyRegistered","termsAccepted","securityKey","errors","setErrors","showModal","setShowModal","showTermsModal","setShowTermsModal","loading","setLoading","activeField","setActiveField","notification","setNotification","formSubmitted","setFormSubmitted","showPasswordInstructions","setShowPasswordInstructions","firstErrorRef","useRef","validateForm","Object","keys","current","scrollIntoView","behavior","block","newErrors","validation","handleChange","checked","target","prevState","prevErrors","parentNode","classList","add","remove","handleFocus","fieldName","handleBlur","handleCompanyRegistered","status","minHeight","height","IoArrowBack","padding","FaUser","FaEnvelope","FaLock","FaPhone","FaBuilding","maxWidth","margin","position","animationFillMode","flex","minWidth","htmlFor","id","zIndex","href","preventDefault","bottom","textAlign","async","alert","usersSnapshot","getDocs","collection","existingNumbers","docs","map","doc","match","parseInt","filter","n","sort","a","b","nextNumber","i","nextId","String","padStart","localStorage","setItem","normalizedPhone","startsWith","slice","userType","companyRef","matchedDoc","find","data","SecurityKey","docRef","setDoc","FirstName","LastName","Email","Password","PhoneNumber","CompanyID","UserType","CreatedAt","Date","console","log","disabled","maxLength","autoFocus","handleSecurityKeySubmit","handleAcceptTerms","ProcessingStatus","PENDING","PROCESSING","COMPLETED","FAILED","createProcessingRecord","processingCollection","addDoc","createdAt","serverTimestamp","read","updateStatus","processingId","additionalData","arguments","processingRef","updateDoc","updatedAt","getPendingProcesses","q","query","where","userId","getAllProcesses","markAsRead","readAt","subscribeToProcessingUpdates","callback","onSnapshot","snapshot","processes","NotificationIcon","isOpen","setIsOpen","notifications","setNotifications","unreadCount","setUnreadCount","dropdownRef","getItem","fetchNotifications","notificationItems","process","_process$createdAt","_process$completedAt","route","routeParams","_process$result","projectName","project_id","result","_process$result2","model_id","toDate","completedAt","dateA","unread","unsubscribe","handleClickOutside","event","contains","addEventListener","removeEventListener","formatDate","date","now","diffInMinutes","Math","floor","ref","unreadNotifications","prev","key","max","state","handleNotificationClick","getStatusText","Header","showNotifications","showUserIcon","onUserIconClick","showMobileMenu","mobileMenuOpen","setMobileMenuOpen","showLanguageToggle","currentLanguage","onLanguageChange","handleLanguageSelect","lang","AWJwithName","handleLogoClick","toggleMobileMenu","size","FaBars","TbLanguage","translations","en","dashboard","projects","newProject","businessModel","companyProfile","comingSoon","existingProjects","totalProjects","ongoingProjects","completedProjects","filterByStatus","all","inProgress","completed","notStarted","delayed","noProjects","noFilteredProjects","createNewProject","duration","goals","undetermined","days","viewDetails","companyName","companyDescription","companyField","totalEmployees","registeredEmployees","securityCode","managerOnly","saveChanges","saving","saved","saveFailed","editData","cancel","manager","page","of","previous","next","noRegisteredMembers","statusValues","ar","DashboardPage","location","useLocation","selectedSection","setSelectedSection","isEditing","setIsEditing","userName","setUserName","userRole","setUserRole","setProjects","companyInfo","setCompanyInfo","CompanyName","members","description","companyRefState","setCompanyRefState","showSecurityCode","setShowSecurityCode","saveStatus","setSaveStatus","hasVisitedProfile","setHasVisitedProfile","projectMilestones","setProjectMilestones","isLoadingMilestones","setIsLoadingMilestones","language","setLanguage","t","currentPage","setCurrentPage","companyMembers","setCompanyMembers","isLoadingMembers","setIsLoadingMembers","activeFilter","setActiveFilter","sortBy","setSortBy","filteredProjects","setFilteredProjects","memberCurrentPage","setMemberCurrentPage","documentElement","dir","milestonesData","project","count","totalDays","milestones","timeoutPromise","Promise","resolve","fetchPromise","milestonesQuery","p","milestone","ProjectID","push","TimeEstimate","batches","projectIds","batch","batchQuery","race","warn","fetchMilestonesForProjects","initialRenderTime","results","lowercaseStatus","toLowerCase","sortProjects","projectsToSort","sortCriteria","localeCompare","handleFilterChange","window","history","replaceState","userRef","userSnap","getDoc","exists","userData","companyId","companySnap","_data$SecurityKeyCrea","_data$SecurityKeyCrea2","SecurityKeyCreatedAt","call","chars","newKey","charAt","random","refreshSecurityKeyIfExpired","CompanySize","CompDescription","Industry","membersQuery","membersSnap","sortedMembers","projectQuery","rawProjects","ProjectName","Status","GoalsCount","uniqueProjectsMap","Map","proj","has","set","values","fetchUserAndCompanyData","handlePageChange","pageNumber","querySelector","getStatusClass","normalizedStatus","indexOfLastProject","indexOfFirstProject","currentProjects","totalPages","ceil","handleInputChange","prevInfo","handleSectionChange","section","paginateMembers","indexOfLastMember","indexOfFirstMember","currentMembers","totalMemberPages","newLanguage","DashBIcon","ProjIcon","GDIcon","bmInputRef","querySnapshot","empty","modelField","ModelID","finalModelId","handleBusinessModelClick","BMIconD","CompanyFileIcon","replace","fallbackValue","getProjectDuration","getMilestoneCount","handleViewDetails","renderPagination","pageNumbers","number","direction","rows","FaBriefcase","FaUsers","min","FaUserFriends","FaSpinner","Fragment","member","marginRight","FaUserCircle","handleSendMessage","FaUserSlash","flexDirection","FaChevronLeft","FaChevronRight","FaShieldAlt","paddingLeft","paddingRight","code","repeat","toggleSecurityCode","left","right","FaEyeSlash","FaEye","Number","FaCheckCircle","FaTimesCircle","FaSave","FaEdit","pageTitle","lastUpdated","keyPartners","keyActivities","valueProposition","customerRelationships","customerSegments","keyResources","channels","costStructure","revenueStreams","editContent","exportPDF","success","errorFetchModel","errorFetchDoc","errorFetchDetails","errorSaving","errorFetchOriginal","copyright","partnersPlaceholder","activitiesPlaceholder","valuePlaceholder","relationshipsPlaceholder","segmentsPlaceholder","resourcesPlaceholder","channelsPlaceholder","costPlaceholder","revenuePlaceholder","BusinessModelResult","bmcData","setBmcData","Key_Partners","Key_Activities","Key_Resources","Value_Proposition","Customer_Relationships","Channels","Customer_Segments","Cost_Structure","Revenue_Streams","isSaving","setIsSaving","setError","setLastUpdated","translateText","text","targetLanguage","response","fetch","endpoint","method","headers","body","JSON","stringify","ok","json","fetchBMC","englishModelRef","englishModelDoc","englishData","Key_Participation","Cost_Type","Approximation_Cost","Revenue_Type","Approximation_Revenue","arabicModelRef","arabicModelDoc","arabicData","translationError","err","SmallSqrs1","SmallSqrs2","toLocaleDateString","year","month","day","hour","minute","split","dataToUpdate","successMsg","innerHTML","bmcCanvas","prepend","removeChild","handleCancel","handleExport","print","getFullYear","removeNotification","action","timer","clearTimeout","getIcon","dismissOnClick","NotificationSystem","NotificationContext","createContext","NotificationProvider","children","addNotification","useCallback","toString","showSuccess","options","showError","showWarning","showInfo","Provider","useNotification","context","useContext","Error","pageSubtitle","industryLabel","sizeLabel","revenueLabel","selectOption","employeeCount","back","analyze","loadingText","requiredField","industryError","sizeError","revenueError","successMessage","dashboardAction","industryOptions","CyberSecurity","Fintech","games","WebDevelopment","AI","Telecommunications","CloudComputing","DataAnalytics","MobileApps","Ecommerce","Blockchain","IoT","VR_AR","SoftwareDevelopment","Hardware","Biotech","Robotics","EdTech","HealthTech","sizeOptions","BusinessModelPage","currentQuestion","setCurrentQuestion","RevenueSources","isLoading","setIsLoading","fieldErrors","setFieldErrors","fadeIn","setFadeIn","question","BMLOGO","onSubmit","userDocRef","userSnapshot","bmSnapshot","existingBmNumbers","nextBmNumber","nextBmId","modelRef","inputSnapshot","existingInputNumbers","nextInputNumber","nextInputId","modelId","inputId","formDataToSend","URLSearchParams","append","fromEntries","data-step","aria-required","handleBack","handleNext","examples","option","jsx","CreateCompanyAccount","showExamples","setShowExamples","showSecurityInfo","setShowSecurityInfo","employeeCountLabel","descriptionLabel","commercialRegistration","setSecurityKey","uniqueKey","generateUniqueSecurityKey","fallbackKey","generateKey","showNotification","toggleSecurityInfo","FaFileAlt","FaList","FaLightbulb","fontSize","transition","animation","marginBottom","FaKeycdn","fontWeight","marginTop","lineHeight","listStyleType","top","companiesSnapshot","CommercialRecord","ManagerID","merge","translationsData","projectNameLabel","projectDescriptionLabel","projectNamePlaceholder","projectDescriptionPlaceholder","nextButton","backButton","submitButton","loadingProcessing","submissionSuccess","viewProjectsButton","submissionError","userIdNotFound","userDataNotFound","userNotLinkedToCompany","GoalDecompose","projName","projDescr","useLogo","GD_LOGO","userDocSnap","projectSnapshot","nextProjectId","originalProjName","ProjectDetails","Pprogress","signinTranslations","backToHome","signInTitle","sendOtp","sending","verificationCode","confirmLogin","verifying","loginSuccess","goToDashboard","didntReceiveCode","resend","noAccount","registerNow","languageEnglish","languageArabic","SignIn","setIsAuthenticated","setPhoneNumber","otp","setOtp","isOtpSent","setIsOtpSent","isVerified","setIsVerified","showSuccessMessage","setShowSuccessMessage","signInLanguage","setSignInLanguage","handleSignInLanguageChange","handleSendOtp","_response$data","localPhone","userDoc","axios","post","phone","_response$data2","_err$response","_err$response$data","_err$response2","_err$response2$data","SideSqrs","includes","FiCheckCircle","handleNavigationDash","_response$data3","_response$data4","token","FiLock","FiPhone","Services","hoveredOption","setHoveredOption","selectedOption","setSelectedOption","isAnimating","setIsAnimating","subtext","onMouseEnter","onMouseLeave","handleService1Click","RiBuilding4Line","IoCheckmarkCircle","handleService2Click","RiLightbulbLine","about","partners","faq","signOut","signIn","NavigationHeader","isAuthenticated","handleSignInClick","handleSignOutClick","scrollToSection","isMenuOpen","setIsMenuOpen","scrolled","setScrolled","activeLink","setActiveLink","handleScroll","offset","scrollY","sections","sectionId","getElementById","sectionTop","offsetTop","sectionBottom","offsetHeight","handleNavClick","closest","overflow","logo","LeftArrow","aria-expanded","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","FAQ","activeItem","setActiveItem","answerRefs","directionClass","item","_answerRefs$current$i","isActive","f_id","answerStyle","maxHeight","scrollHeight","toggleItem","f_question","points","el","f_answer","nav","hero","cta","features","flexibility","learnMore","modal","items","ease","improve","vision","monshaat","aws","button","footer","HomePage","activeFeature","setActiveFeature","featureModalOpen","setFeatureModalOpen","setCurrentLanguage","handleFeatureClick","feature","removeItem","handleServicesClick","intersect","x57","x59","MONSHAAT","AWS","x60","closeFeatureModal","d","cx","cy","r","x","y","rx","ry","unknownProject","noProjectId","errorFetchingProject","projectNotFound","totalMilestones","tasksLabel","timeEstimate","completionRate","projectStatusLabel","timelineTab","risksTab","loadingProjectData","backToProjects","progressLabel","daysLabel","kpiLabel","riskIndicatorLabel","riskFactorsLabel","notStartedStatus","inProgressStatus","completedStatus","riskHigh","riskMedium","riskLow","riskUnknown","statusNotStarted","statusInProgress","statusCompleted","tasksHeading","progress","LoadingSpinner","FontAwesomeIcon","faExclamationTriangle","GoalDecomposeResult","projectData","setProjectData","project_name","projectStatus","setProjectStatus","tasks","setTasks","activeTab","setActiveTab","updateTrigger","setUpdateTrigger","fetchProjectDetails","fetchProjectData","getMilestoneProgress","Milestone","getProjectProgress","updateProjectStatus","projectRef","projectSnap","projectInfo","rawMilestones","displayMilestones","KPI","RiskFactors","RiskIndicator","displayProjectName","fetchTasksForMilestones","allTasks","tasksQuery","milestoneTasks","milestoneId","task","Task","getRiskClass","riskIndicator","risk","roundedProgress","round","then","catch","milestoneRef","Mprogress","ProjectHeader","onBackClick","TimelineView","updateTaskStatus","refreshKey","localTasks","setLocalTasks","milestoneProgress","completedCount","inProgressCount","faCheck","faHourglassHalf","faClock","taskIndex","faTasks","taskId","newStatus","prevTasks","handleTaskStatusChange","backgroundColor","borderRadius","faCalendarAlt","faChartLine","lowerRisk","getTranslatedRisk","RisksView","riskIndex","reduce","total","taskRef","App","checkAuth","authStatus","handleStorageChange","Router","Routes","Route","path","handleSignInSuccess","Dashboard","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.26e5966f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AWJLOGO.09065a14.svg\";","module.exports = __webpack_public_path__ + \"static/media/BlueBox.850af386.svg\";","module.exports = __webpack_public_path__ + \"static/media/RedBlueBox.e12e74b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/SmallSqrs1.8868dfaf.svg\";","module.exports = __webpack_public_path__ + \"static/media/SmallSqrs2.b2be5bf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/LeftArrow.794db949.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.36e0c02d.png\";","module.exports = __webpack_public_path__ + \"static/media/GoalDecomposeIcon.baa55116.svg\";","module.exports = __webpack_public_path__ + \"static/media/BMICON.f32ddb95.svg\";","module.exports = __webpack_public_path__ + \"static/media/DashBIcon.62262712.svg\";","module.exports = __webpack_public_path__ + \"static/media/ProjIcon.ff90987c.svg\";","module.exports = __webpack_public_path__ + \"static/media/CompanyFileIcon.fdc57048.svg\";","module.exports = __webpack_public_path__ + \"static/media/BMIconD.50ce8426.svg\";","module.exports = __webpack_public_path__ + \"static/media/GDIcon.570d3bef.svg\";","module.exports = __webpack_public_path__ + \"static/media/AWJwithName.f2266e9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/BMLOGO.f96af89d.svg\";","module.exports = __webpack_public_path__ + \"static/media/GD_LOGO.77e4770f.svg\";","module.exports = __webpack_public_path__ + \"static/media/SideSqrs.9aba81e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/2030.a7bb93fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rectangle102.697050aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rectangle103.41b51e59.svg\";","module.exports = __webpack_public_path__ + \"static/media/Intersect.29eb7ade.png\";","module.exports = __webpack_public_path__ + \"static/media/MONSHAAT.acc3eea5.png\";","module.exports = __webpack_public_path__ + \"static/media/Aws.eac803d4.png\";","module.exports = __webpack_public_path__ + \"static/media/sqrs.de13f015.svg\";","import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./service1.css\";\nimport BlueBox from \"./assets/BlueBox.svg\";\nimport RedBlueBox from \"./assets/RedBlueBox.svg\";\nimport AWJLOGO from \"./assets/AWJLOGO.svg\";\nimport GoalDecomposeIcon from \"./assets/GoalDecomposeIcon.svg\";\nimport BMICON from \"./assets/BMICON.svg\";\n\nconst Service1Page = () => {\n    const navigate = useNavigate();\n\n    // Add entrance animations\n    useEffect(() => {\n        const elements = document.querySelectorAll('.fade-in');\n\n        elements.forEach((element, index) => {\n            setTimeout(() => {\n                element.style.opacity = '1';\n                element.style.transform = 'translateY(0)';\n            }, 100 * index);\n        });\n    }, []);\n\n    return (\n        <div className=\"service1-page\">\n            <img\n                className=\"Logo\"\n                alt=\"شعار أوج\"\n                src={AWJLOGO}\n                title=\"أوج\"\n                onClick={() => navigate('/')}\n                style={{ cursor: 'pointer' }}\n            />\n\n            {/* Decorative elements */}\n            <img className=\"BlueBox\" alt=\"\" src={BlueBox} aria-hidden=\"true\" />\n            <img className=\"RedBlueBox\" alt=\"\" src={RedBlueBox} aria-hidden=\"true\" />\n\n            <div className=\"text-wrapper-1 fade-in\">هذه هي الخدمة المثالية لمرحلتك الحالية</div>\n            <div className=\"services-available-note fade-in\">ستتمكن من الوصول إلى جميع خدماتنا بعد إنشاء حسابك</div>\n\n            <div className=\"service1-rectangle fade-in primary-service\">\n                <img\n                    src={GoalDecomposeIcon}\n                    alt=\"أيقونة تقسيم الأهداف\"\n                    className=\"service1-icon\"\n                />\n                <h1 className=\"service1-heading\">التخطيط الاستراتيجي</h1>\n                <p className=\"service1-description\">\n                    تقسيم أهدافك الاستراتيجية إلى أهداف قصيرة المدى حتى يسهل تنفيذها، مع جداول\n                    زمنية و توقع للمخاطر، أيضًا تعزيز التعاون مع أعضاء فريقك، وعرض تقدمك على\n                    لوحة تحكم مخصصة لمتابعة الأداء.\n                </p>\n                <button\n                    className=\"create-account-button1\"\n                    onClick={() => navigate(\"/create-account\")}\n                    aria-label=\"انشاء حساب\"\n                >\n                    انشاء حساب\n                </button>\n            </div>\n\n            <button\n                className=\"back-button fade-in\"\n                onClick={() => navigate(-1)}\n                aria-label=\"رجوع\"\n            >\n                رجوع\n            </button>\n        </div>\n    );\n};\n\nexport default Service1Page;","import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./service1.css\";\nimport BlueBox from \"./assets/BlueBox.svg\";\nimport RedBlueBox from \"./assets/RedBlueBox.svg\";\nimport AWJLOGO from \"./assets/AWJLOGO.svg\";\nimport BMICON from \"./assets/BMICON.svg\";\nimport GoalDecomposeIcon from \"./assets/GoalDecomposeIcon.svg\";\n\nconst Service2Page = () => {\n    const navigate = useNavigate();\n\n    // Add entrance animations\n    useEffect(() => {\n        const elements = document.querySelectorAll('.fade-in');\n\n        elements.forEach((element, index) => {\n            setTimeout(() => {\n                element.style.opacity = '1';\n                element.style.transform = 'translateY(0)';\n            }, 100 * index);\n        });\n    }, []);\n\n    return (\n        <div className=\"service1-page\">\n            <img\n                className=\"Logo\"\n                alt=\"شعار أوج\"\n                src={AWJLOGO}\n                title=\"أوج\"\n                onClick={() => navigate('/')}\n                style={{ cursor: 'pointer' }}\n            />\n\n            {/* Decorative elements */}\n            <img className=\"BlueBox\" alt=\"\" src={BlueBox} aria-hidden=\"true\" />\n            <img className=\"RedBlueBox\" alt=\"\" src={RedBlueBox} aria-hidden=\"true\" />\n\n            <div className=\"text-wrapper-1 fade-in\">هذه هي الخدمة المثالية لمرحلتك الحالية</div>\n            <div className=\"services-available-note fade-in\">ستتمكن من الوصول إلى جميع خدماتنا بعد إنشاء حسابك</div>\n\n            <div className=\"service2-rectangle fade-in primary-service\">\n                <img\n                    src={BMICON}\n                    alt=\"أيقونة نموذج العمل\"\n                    className=\"service2-icon\"\n                />\n                <h1 className=\"service2-heading\">بنــاء نــموذج عمــل</h1>\n                <p className=\"service2-description\">\n                    بناء نموذج عمل مخصص يتناسب مع شركتك وميزانيتك، مما يسهم في تأسيس بنية أعمال متكاملة وقابلة للتنفيذ. أيضًا التعاون مع أعضاء فريقك، وعرض تقدمك على لوحة تحكم مخصصة لمتابعة الأداء.\n                </p>\n                <button\n                    className=\"create-account-button2\"\n                    onClick={() => navigate(\"/create-account\")}\n                    aria-label=\"انشاء حساب\"\n                >\n                    انشاء حساب\n                </button>\n            </div>\n\n            <button\n                className=\"back-button fade-in\"\n                onClick={() => navigate(-1)}\n                aria-label=\"رجوع\"\n            >\n                رجوع\n            </button>\n        </div>\n    );\n};\n\nexport default Service2Page;","// src/firebase.js\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDuGXfBgtjgbhTDuhF24ZV5d_Ut9hkvUvI\",\r\n  authDomain: \"awjplatform-f9f40.firebaseapp.com\",\r\n  projectId: \"awjplatform-f9f40\",\r\n  storageBucket: \"awjplatform-f9f40.firebasestorage.app\",\r\n  messagingSenderId: \"839625332311\",\r\n  appId: \"1:839625332311:web:4527011ae2aa314c9bb512\",\r\n  measurementId: \"G-WDJVDSD1WL\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\n\r\nexport { db, auth };\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./CA.css\";\nimport BlueBox from \"./assets/BlueBox.svg\";\nimport RedBlueBox from \"./assets/RedBlueBox.svg\";\nimport AWJLOGO from \"./assets/AWJLOGO.svg\";\nimport { collection, getDocs, doc, setDoc } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport { IoArrowBack } from 'react-icons/io5';\nimport { FaUser, FaEnvelope, FaLock, FaPhone, FaBuilding, FaCheck, FaExclamationTriangle, FaInfoCircle, FaTimes } from 'react-icons/fa';\n\n// Terms And Conditions Modal Component\nconst TermsModal = ({ onClose, onAccept }) => {\n    return (\n        <div className=\"modal terms-modal\" onClick={onClose}>\n            <div className=\"modal-content-terms scale-in\" onClick={(e) => e.stopPropagation()}>\n                <h3>الشروط والأحكام</h3>\n                <div className=\"terms-content\">\n                    <h4>1. مقدمة</h4>\n                    <p>مرحبًا بك في منصة أوج. تحدد هذه الشروط والأحكام قواعد استخدام منصتنا.</p>\n\n                    <h4>2. التسجيل وأمان الحساب</h4>\n                    <p>عند إنشاء حساب، أنت مسؤول عن:</p>\n                    <ul>\n                        <li>تقديم معلومات دقيقة وكاملة</li>\n                        <li>الحفاظ على سرية معلومات حسابك</li>\n                        <li>إخطارنا بأي خرق أمني أو استخدام غير مصرح به لحسابك</li>\n                    </ul>\n\n                    <h4>3. خصوصية البيانات</h4>\n                    <p>نحن نحترم خصوصيتك ونلتزم بحماية بياناتك الشخصية وفقًا لقوانين حماية البيانات المعمول بها.</p>\n\n                    <h4>4. قيود الاستخدام</h4>\n                    <p>يحظر استخدام منصتنا في:</p>\n                    <ul>\n                        <li>أي نشاط غير قانوني</li>\n                        <li>الإضرار بتجربة المستخدمين الآخرين</li>\n                        <li>محاولة الوصول غير المصرح به إلى أنظمتنا</li>\n                    </ul>\n\n                    <h4>5. إنهاء الخدمة</h4>\n                    <p>نحتفظ بالحق في تعليق أو إنهاء وصولك إلى منصتنا في حالة انتهاك هذه الشروط.</p>\n\n                    <h4>6. التغييرات في الشروط</h4>\n                    <p>قد نقوم بتحديث هذه الشروط من وقت لآخر. ستكون مسؤولاً عن مراجعة أي تغييرات.</p>\n\n                    <h4>7. المسؤولية</h4>\n                    <p>لن نكون مسؤولين عن أي خسائر تنتج عن استخدامك لمنصتنا، ما لم تكن ناتجة عن إهمال من جانبنا.</p>\n                </div>\n                <div style={{ display: 'flex', gap: '10px', justifyContent: 'center' }}>\n                    <button onClick={onAccept} className=\"accept-terms-btn\">\n                        موافق على الشروط\n                    </button>\n                    <button onClick={onClose}>\n                        إغلاق\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n// Enhanced Error Message Component\nconst ErrorMessage = ({ message }) => {\n    return (\n        <div className=\"error-message-enhanced\">\n            <div className=\"error-icon\">\n                <FaExclamationTriangle />\n            </div>\n            <div className=\"error-text\">{message}</div>\n        </div>\n    );\n};\n\n// Password Instructions Component\nconst PasswordInstructions = ({ password }) => {\n    const calculateStrength = (password) => {\n        let strength = 0;\n        if (password.length >= 6) strength += 1;\n        if (password.length >= 10) strength += 1;\n        if (/[A-Z]/.test(password)) strength += 1;\n        if (/[0-9]/.test(password)) strength += 1;\n        if (/[^A-Za-z0-9]/.test(password)) strength += 1;\n        return strength;\n    };\n\n    const strength = calculateStrength(password);\n    const isLengthValid = password.length >= 6;\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasNumber = /[0-9]/.test(password);\n    const hasSpecial = /[^A-Za-z0-9]/.test(password);\n\n    return (\n        <div className=\"password-instructions\">\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <FaInfoCircle style={{ marginLeft: '5px', color: '#1d3557' }} />\n                <span>متطلبات كلمة المرور (يجب أن تكون متوسطة القوة على الأقل):</span>\n            </div>\n            <ul>\n                <li className={isLengthValid ? 'satisfied' : ''}>\n                    {isLengthValid ? <FaCheck style={{ marginLeft: '5px', color: '#4caf50' }} /> : <FaTimes style={{ marginLeft: '5px', color: '#e63a46' }} />}\n                    على الأقل 6 أحرف\n                </li>\n                <li className={hasUpperCase ? 'satisfied' : ''}>\n                    {hasUpperCase ? <FaCheck style={{ marginLeft: '5px', color: '#4caf50' }} /> : <FaTimes style={{ marginLeft: '5px', color: '#e63a46' }} />}\n                    حرف كبير واحد على الأقل\n                </li>\n                <li className={hasNumber ? 'satisfied' : ''}>\n                    {hasNumber ? <FaCheck style={{ marginLeft: '5px', color: '#4caf50' }} /> : <FaTimes style={{ marginLeft: '5px', color: '#e63a46' }} />}\n                    رقم واحد على الأقل\n                </li>\n                <li className={hasSpecial ? 'satisfied' : ''}>\n                    {hasSpecial ? <FaCheck style={{ marginLeft: '5px', color: '#4caf50' }} /> : <FaTimes style={{ marginLeft: '5px', color: '#e63a46' }} />}\n                    رمز خاص واحد على الأقل\n                </li>\n            </ul>\n        </div>\n    );\n};\n\n// Form validation helper\nconst validateField = (field, value) => {\n    // Skip validation for empty fields (except where explicitly required)\n    if (value === null || value === undefined || value.trim() === '') {\n        return null;\n    }\n\n    switch (field) {\n        case 'firstName':\n        case 'lastName':\n            return value.trim().length > 1 ? null : 'يجب أن يتكون الاسم من حرفين على الأقل';\n\n        case 'email':\n            return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value) ? null : 'البريد الإلكتروني غير صالح';\n\n        case 'confirmEmail':\n            return formData => formData.email === value ? null : 'البريد الإلكتروني غير متطابق';\n\n        case 'password':\n            // Calculate password strength\n            let strength = 0;\n            if (value.length >= 6) strength += 1;\n            if (value.length >= 10) strength += 1;\n            if (/[A-Z]/.test(value)) strength += 1;\n            if (/[0-9]/.test(value)) strength += 1;\n            if (/[^A-Za-z0-9]/.test(value)) strength += 1;\n\n            // Only accept medium strength or higher (strength >= 2)\n            return strength >= 2 ? null : 'يجب أن تكون كلمة المرور متوسطة القوة على الأقل';\n\n        case 'confirmPassword':\n            return formData => formData.password === value ? null : 'كلمة المرور غير متطابقة';\n\n        case 'phoneNumber':\n            // Saudi phone validation (either +966 format or 05xxxxxxxx format)\n            return /^(\\+966|05)\\d{8,9}$/.test(value) ? null : 'يرجى إدخال رقم هاتف سعودي صالح';\n\n        default:\n            return null;\n    }\n};\n\n// Notification Component\nconst Notification = ({ message, type, onClose }) => {\n    return (\n        <div className={`notification ${type} notification-animate`}>\n            <div className=\"notification-content\">\n                {type === 'error' && <FaExclamationTriangle />}\n                {type === 'success' && <FaCheck />}\n                {type === 'info' && <FaInfoCircle />}\n                <p>{message}</p>\n            </div>\n            <button onClick={onClose} className=\"close-notification\">×</button>\n        </div>\n    );\n};\n\n// Password Strength Component\nconst PasswordStrengthMeter = ({ password }) => {\n    const calculateStrength = (password) => {\n        let strength = 0;\n        if (password.length >= 6) strength += 1;\n        if (password.length >= 10) strength += 1;\n        if (/[A-Z]/.test(password)) strength += 1;\n        if (/[0-9]/.test(password)) strength += 1;\n        if (/[^A-Za-z0-9]/.test(password)) strength += 1;\n        return strength;\n    };\n\n    const strength = calculateStrength(password);\n\n    return (\n        <div className=\"password-strength\">\n            <div className=\"strength-meter\">\n                <div\n                    className={`strength-fill strength-${strength}`}\n                    style={{ width: `${(strength / 5) * 100}%` }}\n                ></div>\n            </div>\n            <div className=\"strength-label\">\n                {strength === 0 && password && 'ضعيف جداً'}\n                {strength === 1 && 'ضعيف'}\n                {strength === 2 && 'متوسط'}\n                {strength === 3 && 'جيد'}\n                {strength === 4 && 'قوي'}\n                {strength === 5 && 'ممتاز'}\n            </div>\n        </div>\n    );\n};\n\n// Input Field Component\nconst FormField = ({\n    name,\n    label,\n    type = 'text',\n    icon,\n    value,\n    onChange,\n    onFocus,\n    onBlur,\n    placeholder,\n    error,\n    required = false,\n    readOnly = false,\n    showCheckmark = false\n}) => {\n    return (\n        <div className={`form-group ${error ? 'has-error' : ''}`}>\n            <label>\n                {icon}\n                {label}\n                {required && <span className=\"required\">*</span>}\n            </label>\n            <div className=\"input-container\">\n                <input\n                    type={type}\n                    name={name}\n                    placeholder={placeholder || label}\n                    value={value}\n                    onChange={onChange}\n                    onFocus={onFocus}\n                    onBlur={onBlur}\n                    required={required}\n                    readOnly={readOnly}\n                    className={readOnly ? 'readonly' : ''}\n                    style={{ width: '100%', boxSizing: 'border-box' }}\n                />\n                {showCheckmark && !error && <FaCheck className=\"check-icon\" />}\n                {error && <ErrorMessage message={error} />}\n            </div>\n        </div>\n    );\n};\n\nconst CreateAccountPage = () => {\n    const [formData, setFormData] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        confirmEmail: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        phoneNumber: \"\",\n        companyRegistered: null,\n        termsAccepted: false,\n        securityKey: \"\",\n    });\n\n    const [errors, setErrors] = useState({});\n    const [showModal, setShowModal] = useState(false);\n    const [showTermsModal, setShowTermsModal] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [activeField, setActiveField] = useState(null);\n    const [notification, setNotification] = useState(null);\n    const [formSubmitted, setFormSubmitted] = useState(false);\n    const [showPasswordInstructions, setShowPasswordInstructions] = useState(false);\n    const firstErrorRef = useRef(null);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        document.title = \"أوج | إنشاء حساب\";\n\n        // Validate form on data change if user has attempted submission\n        if (formSubmitted) {\n            validateForm();\n        }\n    }, [formData, formSubmitted]);\n\n    // Scroll to first error after validation\n    useEffect(() => {\n        if (Object.keys(errors).length > 0 && firstErrorRef.current) {\n            firstErrorRef.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'center'\n            });\n        }\n    }, [errors]);\n\n    const validateForm = () => {\n        const newErrors = {};\n\n        // Validate each field\n        Object.keys(formData).forEach(field => {\n            const validation = validateField(field, formData[field]);\n\n            if (typeof validation === 'function') {\n                const error = validation(formData);\n                if (error) newErrors[field] = error;\n            } else if (validation) {\n                newErrors[field] = validation;\n            }\n        });\n\n        // Additional validations\n        if (formData.companyRegistered === null) {\n            newErrors.companyRegistered = 'يرجى تحديد ما إذا كانت شركتك مسجلة';\n        }\n\n        if (formData.companyRegistered === true && !formData.securityKey) {\n            newErrors.securityKey = 'يرجى إدخال رمز الأمان';\n        }\n\n        // Terms validation\n        if (!formData.termsAccepted) {\n            newErrors.termsAccepted = 'يجب الموافقة على الشروط والأحكام';\n        }\n\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleChange = (e) => {\n        const { name, value, type, checked } = e.target;\n        setFormData(prevState => ({\n            ...prevState,\n            [name]: type === \"checkbox\" ? checked : value,\n        }));\n\n        // Clear error when field is edited\n        if (errors[name]) {\n            setErrors(prevErrors => {\n                const newErrors = { ...prevErrors };\n                delete newErrors[name];\n                return newErrors;\n            });\n        }\n\n        // Visual feedback for input\n        if (e.target && e.target.parentNode) {\n            e.target.parentNode.classList.add('input-active');\n            setTimeout(() => {\n                e.target.parentNode.classList.remove('input-active');\n            }, 300);\n        }\n    };\n\n    const handleFocus = (fieldName) => {\n        setActiveField(fieldName);\n\n        // Show password instructions when password field is focused\n        if (fieldName === 'password') {\n            setShowPasswordInstructions(true);\n        }\n    };\n\n    const handleBlur = (e) => {\n        const { name, value } = e.target;\n        setActiveField(null);\n\n        // Always hide password instructions when the password field loses focus\n        if (name === 'password') {\n            setShowPasswordInstructions(false);\n        }\n\n        // Validate field on blur\n        const validation = validateField(name, value);\n        if (typeof validation === 'function') {\n            const error = validation(formData);\n            if (error) setErrors(prevErrors => ({ ...prevErrors, [name]: error }));\n        } else if (validation) {\n            setErrors(prevErrors => ({ ...prevErrors, [name]: validation }));\n        }\n    };\n\n    const handleCompanyRegistered = (status) => {\n        setFormData(prevState => ({\n            ...prevState,\n            companyRegistered: status\n        }));\n\n        if (status === true) {\n            setShowModal(true);\n        } else {\n            setShowModal(false);\n        }\n\n        // Clear company registration error\n        if (errors.companyRegistered) {\n            setErrors(prevErrors => {\n                const newErrors = { ...prevErrors };\n                delete newErrors.companyRegistered;\n                return newErrors;\n            });\n        }\n    };\n\n    const showNotification = (message, type) => {\n        setNotification({ message, type });\n\n        // Auto-dismiss after 5 seconds\n        setTimeout(() => {\n            setNotification(null);\n        }, 5000);\n    };\n\n    const handleTermsClick = (e) => {\n        e.preventDefault();\n        setShowTermsModal(true);\n    };\n\n    const handleAcceptTerms = () => {\n        // Use functional state update to ensure we're working with the latest state\n        setFormData(prevState => ({\n            ...prevState,\n            termsAccepted: true\n        }));\n\n        // Clear terms error if it exists\n        if (errors.termsAccepted) {\n            setErrors(prevErrors => {\n                const newErrors = { ...prevErrors };\n                delete newErrors.termsAccepted;\n                return newErrors;\n            });\n        }\n\n        setShowTermsModal(false);\n    };\n\n    // In CreateAccountPage.js, update the handleSubmit function\n    const handleSubmit = async () => {\n        if (formData.termsAccepted) {\n            // Check for missing required fields\n            if (\n                !formData.firstName ||\n                !formData.lastName ||\n                !formData.email ||\n                !formData.confirmEmail ||\n                !formData.password ||\n                !formData.confirmPassword ||\n                !formData.phoneNumber ||\n                formData.companyRegistered === null\n            ) {\n                alert(\"يرجى ملء جميع الحقول المطلوبة\");\n            } else {\n                // Check if passwords and emails match\n                if (formData.password !== formData.confirmPassword) {\n                    alert(\"كلمات السر غير متطابقة\");\n                } else if (formData.email !== formData.confirmEmail) {\n                    alert(\"البريد الإلكتروني غير متطابق\");\n                } else {\n                    try {\n                        // Get all existing user IDs\n                        const usersSnapshot = await getDocs(collection(db, \"User\"));\n                        const ids = usersSnapshot.docs.map(doc => doc.id);\n\n                        const existingNumbers = ids\n                            .map(id => {\n                                const match = id.match(/^u(\\d{3})$/);\n                                return match ? parseInt(match[1]) : null;\n                            })\n                            .filter(n => n !== null)\n                            .sort((a, b) => a - b);\n\n                        let nextNumber = 1;\n                        for (let i = 0; i < existingNumbers.length; i++) {\n                            if (existingNumbers[i] !== nextNumber) break;\n                            nextNumber++;\n                        }\n\n                        const nextId = `u${String(nextNumber).padStart(3, \"0\")}`;\n                        localStorage.setItem(\"userId\", nextId);\n\n                        // If the user stores his phone number in +966 format it will be stored in 0.. format in the database (needed for sign in)\n                        const normalizedPhone = formData.phoneNumber.startsWith(\"+966\")\n                            ? \"0\" + formData.phoneNumber.slice(4)\n                            : formData.phoneNumber;\n\n                        const userType = formData.companyRegistered ? \"User\" : \"Manager\";\n\n                        // find the company document based on the entered SecurityKey\n                        let companyRef = null;\n\n                        if (formData.companyRegistered && formData.securityKey) {\n                            const companiesSnapshot = await getDocs(collection(db, \"Company\"));\n                            const matchedDoc = companiesSnapshot.docs.find(doc =>\n                                doc.data().SecurityKey === formData.securityKey\n                            );\n\n                            if (matchedDoc) {\n                                companyRef = doc(db, \"Company\", matchedDoc.id); // reference to the company doc\n                            } else {\n                                alert(\"رمز الأمان غير صحيح\");\n                                return;\n                            }\n                        }\n\n                        // Save user in Firestore\n                        const docRef = doc(db, \"User\", nextId);\n                        await setDoc(docRef, {\n                            FirstName: formData.firstName,\n                            LastName: formData.lastName,\n                            Email: formData.email,\n                            Password: formData.password,\n                            PhoneNumber: normalizedPhone,\n                            CompanyID: companyRef,\n                            UserType: userType,\n                            CreatedAt: new Date(), // Add creation timestamp\n                        });\n\n                        console.log(\"User saved successfully\");\n\n                        // Redirect based on company registration status\n                        if (formData.companyRegistered === true) {\n                            console.log(\"Navigating to dashboard\");\n                            navigate(\"/dashboard\");\n                        } else {\n                            console.log(\"Navigating to create-company-account\");\n                            navigate(\"/create-company-account\");\n                        }\n                    } catch (error) {\n                        console.error(\"Error saving user:\", error);\n                        alert(\"حدث خطأ أثناء حفظ الحساب. حاول مرة أخرى.\");\n                    }\n                }\n            }\n        } else {\n            alert(\"يجب الموافقة على الشروط والأحكام\");\n        }\n    };\n\n    const handleSecurityKeySubmit = () => {\n        if (formData.securityKey.length === 5) {\n            setShowModal(false);\n        } else {\n            showNotification(\"يرجى إدخال مفتاح مكون من 5 أرقام\", \"error\");\n        }\n    };\n\n    return (\n        <div className=\"create-account-page\" style={{ minHeight: '105vh', height: 'auto' }}>\n            <IoArrowBack\n                className=\"back-arrow\"\n                onClick={() => navigate('/services')}\n                aria-label=\"العودة إلى الخدمات\"\n            />\n\n            {/* Logo positioned at top right corner */}\n            <div className=\"logo-container\">\n                <img\n                    className=\"Logo\"\n                    alt=\"Logo\"\n                    src={AWJLOGO}\n                />\n            </div>\n\n            {/* Title positioned above the form */}\n            <div className=\"text-wrapper slide-down\">\n                إنشـاء حساب\n            </div>\n\n            <img\n                className=\"BlueBox slide-in-left\"\n                alt=\"شكل هندسي أزرق\"\n                src={BlueBox}\n            />\n\n            <img\n                className=\"RedBlueBox slide-in-right\"\n                alt=\"شكل هندسي أحمر وأزرق\"\n                src={RedBlueBox}\n            />\n\n            {/* Form Container - With improved layout and widths */}\n            <form className=\"create-account-form slide-up\" style={{ padding: '30px' }}>\n                {/* Personal information section */}\n                <FormField\n                    name=\"firstName\"\n                    label=\"الاسم الأول\"\n                    icon={<FaUser style={{ marginLeft: '5px' }} />}\n                    value={formData.firstName}\n                    onChange={handleChange}\n                    onFocus={() => handleFocus('firstName')}\n                    onBlur={handleBlur}\n                    error={errors.firstName}\n                    required={true}\n                />\n\n                <FormField\n                    name=\"lastName\"\n                    label=\"الاسم الأخير\"\n                    icon={<FaUser style={{ marginLeft: '5px' }} />}\n                    value={formData.lastName}\n                    onChange={handleChange}\n                    onFocus={() => handleFocus('lastName')}\n                    onBlur={handleBlur}\n                    error={errors.lastName}\n                    required={true}\n                />\n\n                <FormField\n                    name=\"email\"\n                    label=\"البريد الإلكتروني\"\n                    type=\"email\"\n                    icon={<FaEnvelope style={{ marginLeft: '5px' }} />}\n                    value={formData.email}\n                    onChange={handleChange}\n                    onFocus={() => handleFocus('email')}\n                    onBlur={handleBlur}\n                    error={errors.email}\n                    required={true}\n                />\n\n                <FormField\n                    name=\"confirmEmail\"\n                    label=\"تأكيد البريد الإلكتروني\"\n                    type=\"email\"\n                    icon={<FaEnvelope style={{ marginLeft: '5px' }} />}\n                    value={formData.confirmEmail}\n                    onChange={handleChange}\n                    onFocus={() => handleFocus('confirmEmail')}\n                    onBlur={handleBlur}\n                    error={errors.confirmEmail}\n                    required={true}\n                    showCheckmark={formData.email && formData.confirmEmail && formData.email === formData.confirmEmail}\n                />\n\n                {/* Password section with improved visibility of instructions */}\n                <div className={`form-group ${errors.password ? 'has-error' : ''}`}>\n                    <label>\n                        <FaLock style={{ marginLeft: '5px' }} />\n                        الرقم السري\n                        <span className=\"required\">*</span>\n                    </label>\n                    <div className=\"input-container\" style={{ width: '100%' }}>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"الرقم السري\"\n                            value={formData.password}\n                            onChange={handleChange}\n                            onFocus={() => handleFocus('password')}\n                            onBlur={handleBlur}\n                            required\n                            style={{ width: '100%', boxSizing: 'border-box' }}\n                        />\n                        {errors.password && <ErrorMessage message={errors.password} />}\n                    </div>\n                    {formData.password && <PasswordStrengthMeter password={formData.password} />}\n                    {/* Always show password instructions when there's content */}\n                    {showPasswordInstructions && <PasswordInstructions password={formData.password} />}\n                </div>\n\n                <FormField\n                    name=\"confirmPassword\"\n                    label=\"تأكيد الرقم السري\"\n                    type=\"password\"\n                    icon={<FaLock style={{ marginLeft: '5px' }} />}\n                    value={formData.confirmPassword}\n                    onChange={handleChange}\n                    onFocus={() => handleFocus('confirmPassword')}\n                    onBlur={handleBlur}\n                    error={errors.confirmPassword}\n                    required={true}\n                    showCheckmark={formData.password && formData.confirmPassword && formData.password === formData.confirmPassword}\n                />\n\n                {/* Phone number field - positioned next to company question */}\n                <FormField\n                    name=\"phoneNumber\"\n                    label=\"رقم الجوال\"\n                    icon={<FaPhone style={{ marginLeft: '5px' }} />}\n                    value={formData.phoneNumber}\n                    onChange={handleChange}\n                    onFocus={() => handleFocus('phoneNumber')}\n\n                    onBlur={handleBlur}\n                    error={errors.phoneNumber}\n                    required={true}\n                    placeholder=\"+966XXXXXXXX أو 05XXXXXXXX\"\n                />\n                {/* Rearranged section - company and phone fields side by side */}\n                <div>\n                    {/* Company question */}\n                    <div className={`company-question ${errors.companyRegistered ? 'has-error' : ''}`}>\n                        <label>\n                            <FaBuilding style={{ marginLeft: '5px' }} />\n                            هل شركتك مسجلة فالمنصة؟\n                            <span className=\"required\">*</span>\n                        </label>\n                        <div className=\"company-buttons\">\n                            <button\n                                type=\"button\"\n                                className={formData.companyRegistered === true ? \"selected\" : \"\"}\n                                onClick={() => handleCompanyRegistered(true)}\n                            >\n                                نعم\n                            </button>\n                            <button\n                                type=\"button\"\n                                className={formData.companyRegistered === false ? \"selected\" : \"\"}\n                                onClick={() => handleCompanyRegistered(false)}\n                            >\n                                لا\n                            </button>\n                        </div>\n                        {errors.companyRegistered && <ErrorMessage message={errors.companyRegistered} />}\n                    </div>\n\n                </div>\n            </form>\n\n            {/* Terms and Login in the same row */}\n            <div style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                width: '90%',\n                maxWidth: '834px',\n                margin: '20px auto 30px',\n                position: 'relative'\n            }}>\n                {/* Terms Checkbox - Left side */}\n                <div className={`terms ${errors.termsAccepted ? 'has-error' : ''}`}\n                    style={{\n                        animationFillMode: 'forwards',\n                        margin: '0',\n                        position: 'relative',\n                        flex: '1',\n                        minWidth: '300px'\n                    }}\n                >\n                    <label htmlFor=\"terms-checkbox\" style={{ cursor: 'pointer', display: 'flex', alignItems: 'center' }}>\n                        <input\n                            type=\"checkbox\"\n                            name=\"termsAccepted\"\n                            id=\"terms-checkbox\"\n                            checked={formData.termsAccepted}\n                            onChange={handleChange}\n                            required\n                            style={{ marginLeft: '10px', cursor: 'pointer', zIndex: 5 }}\n                        />\n                        <div className=\"terms-container\">\n                            <p>أوافق على </p>\n                            <a\n                                href=\"#\"\n                                className=\"terms-link\"\n                                onClick={handleTermsClick}\n                            >\n                                الشروط والأحكام\n                            </a>\n                            <span className=\"required\">*</span>\n                        </div>\n                    </label>\n                    {errors.termsAccepted && <ErrorMessage message={errors.termsAccepted} />}\n                </div>\n\n                {/* Login link - Right side */}\n                <div className=\"login-link2\" style={{\n                    animationFillMode: 'forwards',\n                    margin: '0',\n                    position: 'relative',\n                    bottom: 'auto',\n                    textAlign: 'left',\n                    minWidth: '200px'\n                }}>\n                    <a href=\"/signin\">سجل دخولك</a>   لديك حساب؟\n                </div>\n            </div>\n\n            {/* Enhanced Next button with better sizing */}\n            <button\n                type=\"button\"\n                className=\"submit-btn slide-up\"\n                onClick={handleSubmit}\n                disabled={loading}\n                style={{ width: 'auto', minWidth: '100px', padding: '15px 30px' }}\n            >\n                {loading ? (\n                    <span className=\"loading-spinner\">جاري المعالجة...</span>\n                ) : (\n                    <span>التالي</span>\n                )}\n            </button>\n\n            {/* Modal for security key */}\n            {\n                showModal && (\n                    <div className=\"modal fade-in\" onClick={() => setShowModal(false)} style={{ animationFillMode: 'forwards' }}>\n                        <div className=\"modal-content scale-in\" onClick={(e) => e.stopPropagation()} style={{ animationFillMode: 'forwards' }}>\n                            <h3>الانضمام لحساب الشركة</h3>\n                            <p>أدخل رمز الأمان المكون من 5 أحرف المقدم من مدير الشركة</p>\n                            <input\n                                type=\"text\"\n                                name=\"securityKey\"\n                                maxLength=\"5\"\n                                placeholder=\"أدخل رمز الأمان\"\n                                value={formData.securityKey}\n                                onChange={handleChange}\n                                className={errors.securityKey ? 'input-error' : ''}\n                                autoFocus\n                                style={{ width: '100%', boxSizing: 'border-box' }}\n                            />\n                            {errors.securityKey && <ErrorMessage message={errors.securityKey} />}\n                            <button onClick={handleSecurityKeySubmit}>\n                                تأكيد\n                            </button>\n                        </div>\n                    </div>\n                )\n            }\n\n            {/* Terms and Conditions Modal */}\n            {\n                showTermsModal && (\n                    <TermsModal\n                        onClose={() => setShowTermsModal(false)}\n                        onAccept={handleAcceptTerms}\n                    />\n                )\n            }\n\n            {/* Notification system */}\n            {\n                notification && (\n                    <Notification\n                        message={notification.message}\n                        type={notification.type}\n                        onClose={() => setNotification(null)}\n                    />\n                )\n            }\n        </div >\n    );\n};\n\nexport default CreateAccountPage;","import { db } from './firebase';\nimport {\n  collection, addDoc, updateDoc, doc,\n  query, where, getDocs, onSnapshot, serverTimestamp\n} from 'firebase/firestore';\n\n/**\n * Utils for tracking asynchronous processing status\n */\nexport const ProcessingStatus = {\n  // Status constants\n  PENDING: 'pending',\n  PROCESSING: 'processing',\n  COMPLETED: 'completed',\n  FAILED: 'failed',\n\n  /**\n   * Create a new processing record\n   * @param {Object} data - Processing data including type, userId, etc.\n   * @returns {Promise<string>} - Returns the processing ID\n   */\n  createProcessingRecord: async (data) => {\n    try {\n      const processingCollection = collection(db, 'Processing');\n      const docRef = await addDoc(processingCollection, {\n        status: ProcessingStatus.PENDING,\n        createdAt: serverTimestamp(),\n        read: false, // Add read status\n        ...data\n      });\n      return docRef.id;\n    } catch (error) {\n      console.error('Error creating processing record:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Update the status of a processing record\n   * @param {string} processingId - The ID of the processing record\n   * @param {string} status - The new status\n   * @param {Object} additionalData - Any additional data to update\n   */\n  updateStatus: async (processingId, status, additionalData = {}) => {\n    try {\n      const processingRef = doc(db, 'Processing', processingId);\n      await updateDoc(processingRef, {\n        status,\n        updatedAt: serverTimestamp(),\n        ...additionalData\n      });\n    } catch (error) {\n      console.error('Error updating processing status:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get all pending processing records for a user\n   * @param {string} userId - The user ID\n   * @returns {Promise<Array>} - Array of processing records\n   */\n  getPendingProcesses: async (userId) => {\n    try {\n      const processingCollection = collection(db, 'Processing');\n      const q = query(\n        processingCollection,\n        where('userId', '==', userId),\n        where('status', 'in', [ProcessingStatus.PENDING, ProcessingStatus.PROCESSING])\n      );\n\n      const querySnapshot = await getDocs(q);\n      return querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n    } catch (error) {\n      console.error('Error getting pending processes:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get all processing records for a user (both pending and completed)\n   * @param {string} userId - The user ID\n   * @returns {Promise<Array>} - Array of all processing records\n   */\n  getAllProcesses: async (userId) => {\n    try {\n      const processingCollection = collection(db, 'Processing');\n      const q = query(\n        processingCollection,\n        where('userId', '==', userId)\n      );\n\n      const querySnapshot = await getDocs(q);\n      return querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n    } catch (error) {\n      console.error('Error getting all processes:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Mark a notification as read\n   * @param {string} processingId - The ID of the processing record\n   * @returns {Promise<void>}\n   */\n  markAsRead: async (processingId) => {\n    try {\n      const processingRef = doc(db, 'Processing', processingId);\n      await updateDoc(processingRef, {\n        read: true,\n        readAt: serverTimestamp()\n      });\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Subscribe to processing updates for a user\n   * @param {string} userId - The user ID\n   * @param {function} callback - Callback function for updates\n   * @returns {function} - Unsubscribe function\n   */\n  subscribeToProcessingUpdates: (userId, callback) => {\n    const processingCollection = collection(db, 'Processing');\n    const q = query(\n      processingCollection,\n      where('userId', '==', userId)\n    );\n\n    return onSnapshot(q, (snapshot) => {\n      const processes = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      callback(processes);\n    });\n  }\n};\n\nexport default ProcessingStatus;","import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ProcessingStatus } from './ProcessingStatus';\nimport './NotificationIcon.css';\n\n/**\n * NotificationIcon Component - Bell icon with dropdown for notifications\n */\nconst NotificationIcon = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const dropdownRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Fetch notifications on component mount\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    if (!userId) return;\n\n    // Function to fetch all notifications (both pending and completed)\n    const fetchNotifications = async () => {\n      try {\n        const processes = await ProcessingStatus.getAllProcesses(userId);\n\n        // Transform processes into notification objects\n        const notificationItems = processes.map(process => {\n          let title, route, routeParams;\n\n          if (process.type === 'goal-decomposition') {\n            title = process.projectName || 'مشروع جديد';\n            route = '/goal-decomposing-result';\n            routeParams = { project_id: process.result?.project_id };\n          } else if (process.type === 'business-model') {\n            title = 'نموذج العمل التجاري';\n            route = '/business-model-result';\n            routeParams = { model_id: process.result?.model_id };\n          }\n\n          return {\n            id: process.id,\n            title,\n            status: process.status,\n            createdAt: process.createdAt?.toDate ? process.createdAt.toDate() : new Date(process.createdAt),\n            completedAt: process.completedAt?.toDate ? process.completedAt.toDate() :\n              process.completedAt ? new Date(process.completedAt) : null,\n            read: process.read || false,\n            route,\n            routeParams,\n            error: process.error\n          };\n        });\n\n        // Sort by date (newest first)\n        notificationItems.sort((a, b) => {\n          const dateA = a.completedAt || a.createdAt;\n          const dateB = b.completedAt || b.createdAt;\n          return dateB - dateA;\n        });\n\n        setNotifications(notificationItems);\n\n        // Count unread notifications\n        const unread = notificationItems.filter(n => !n.read).length;\n        setUnreadCount(unread);\n      } catch (error) {\n        console.error(\"Error fetching notifications:\", error);\n      }\n    };\n\n    // Initial fetch\n    fetchNotifications();\n\n    // Set up subscription for real-time updates\n    const unsubscribe = ProcessingStatus.subscribeToProcessingUpdates(userId, () => {\n      fetchNotifications();\n    });\n\n    // Clean up subscription\n    return () => {\n      if (unsubscribe) unsubscribe();\n    };\n  }, []);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Handle notification click\n  const handleNotificationClick = async (notification) => {\n    if (!notification.read) {\n      // Mark as read\n      await ProcessingStatus.markAsRead(notification.id);\n\n      // Update local state\n      setNotifications(prev =>\n        prev.map(n => n.id === notification.id ? { ...n, read: true } : n)\n      );\n      setUnreadCount(prev => Math.max(0, prev - 1));\n    }\n\n    // Navigate to the appropriate page if completed\n    if (notification.status === 'completed' && notification.route) {\n      navigate(notification.route, { state: notification.routeParams });\n      setIsOpen(false);\n    }\n  };\n\n  // Format date for display\n  const formatDate = (date) => {\n    if (!date) return '';\n\n    const now = new Date();\n    const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n\n    if (diffInMinutes < 1) {\n      return 'الآن';\n    } else if (diffInMinutes < 60) {\n      return `منذ ${diffInMinutes} دقيقة`;\n    } else if (diffInMinutes < 1440) {\n      const hours = Math.floor(diffInMinutes / 60);\n      return `منذ ${hours} ساعة`;\n    } else {\n      const days = Math.floor(diffInMinutes / 1440);\n      return `منذ ${days} يوم`;\n    }\n  };\n\n  // Get status text in Arabic\n  const getStatusText = (status) => {\n    switch (status) {\n      case 'pending':\n        return 'قيد الانتظار';\n      case 'processing':\n        return 'جاري المعالجة';\n      case 'completed':\n        return 'مكتمل';\n      case 'failed':\n        return 'فشلت العملية';\n      default:\n        return status;\n    }\n  };\n\n  // Mark all notifications as read\n  const markAllAsRead = async () => {\n    const unreadNotifications = notifications.filter(n => !n.read);\n    if (unreadNotifications.length === 0) return;\n\n    try {\n      for (const notification of unreadNotifications) {\n        await ProcessingStatus.markAsRead(notification.id);\n      }\n\n      // Update local state\n      setNotifications(prev =>\n        prev.map(n => ({ ...n, read: true }))\n      );\n      setUnreadCount(0);\n    } catch (error) {\n      console.error(\"Error marking notifications as read:\", error);\n    }\n  };\n\n  return (\n    <div className=\"notification-icon-container\" ref={dropdownRef}>\n      <button\n        className=\"btn-secondary notification-bell-btn\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label=\"الإشعارات\"\n      >\n        <i className=\"fas fa-bell\"></i>\n        {unreadCount > 0 && (\n          <span className=\"notification-badge\">{unreadCount}</span>\n        )}\n      </button>\n\n      {isOpen && (\n        <div className=\"notification-dropdown\">\n          <div className=\"notification-dropdown-header\">\n            <h3>الإشعارات</h3>\n            {unreadCount > 0 && (\n              <button\n                className=\"mark-all-read-btn\"\n                onClick={markAllAsRead}\n              >\n                تعيين الكل كمقروء\n              </button>\n            )}\n          </div>\n\n          <div className=\"notification-dropdown-body\">\n            {notifications.length > 0 ? (\n              notifications.map((notification) => (\n                <div\n                  key={notification.id}\n                  className={`notification-item ${!notification.read ? 'unread' : ''} ${notification.status}`}\n                  onClick={() => handleNotificationClick(notification)}\n                >\n                  <div className=\"notification-icon\">\n                    {notification.status === 'completed' ? (\n                      <i className=\"fas fa-check-circle\"></i>\n                    ) : notification.status === 'processing' ? (\n                      <i className=\"fas fa-spinner fa-spin\"></i>\n                    ) : notification.status === 'failed' ? (\n                      <i className=\"fas fa-exclamation-circle\"></i>\n                    ) : (\n                      <i className=\"fas fa-clock\"></i>\n                    )}\n                  </div>\n                  <div className=\"notification-content\">\n                    <div className=\"notification-title\">{notification.title}</div>\n                    <div className=\"notification-message\">\n                      {notification.status === 'completed' ? (\n                        'تم الانتهاء من المعالجة بنجاح'\n                      ) : notification.status === 'failed' ? (\n                        `فشلت المعالجة: ${notification.error || 'خطأ في المعالجة'}`\n                      ) : (\n                        `حالة العملية: ${getStatusText(notification.status)}`\n                      )}\n                    </div>\n                    <div className=\"notification-time\">\n                      {notification.status === 'completed' ? (\n                        formatDate(notification.completedAt)\n                      ) : (\n                        formatDate(notification.createdAt)\n                      )}\n                    </div>\n                  </div>\n                  {!notification.read && (\n                    <div className=\"notification-unread-indicator\"></div>\n                  )}\n                </div>\n              ))\n            ) : (\n              <div className=\"no-notifications\">\n                لا توجد إشعارات\n              </div>\n            )}\n          </div>\n\n          {notifications.length > 5 && (\n            <div className=\"notification-dropdown-footer\">\n              <button className=\"view-all-btn\">عرض جميع الإشعارات</button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NotificationIcon;","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaBars, FaTimes } from \"react-icons/fa\";\nimport { TbLanguage } from \"react-icons/tb\";\n\nimport \"./Header.css\";\nimport AWJwithName from \"./assets/AWJwithName.svg\";\nimport NotificationIcon from \"./NotificationIcon\";\n\n/**\n * Reusable Header Component\n * @param {Object} props\n * @param {boolean} props.showNotifications - Whether to show the notification icon\n * @param {boolean} props.showUserIcon - Whether to show the user icon\n * @param {Function} props.onUserIconClick - Function to call when user icon is clicked\n * @param {boolean} props.showMobileMenu - Whether to show the mobile menu toggle (for Dashboard)\n * @param {boolean} props.mobileMenuOpen - Mobile menu state (for Dashboard)\n * @param {Function} props.setMobileMenuOpen - Function to update mobile menu state (for Dashboard)\n * @param {boolean} props.showLanguageToggle - Whether to show the language toggle button\n * @param {string} props.currentLanguage - Current language (en or ar)\n * @param {Function} props.onLanguageChange - Function to call when language is changed\n */\nconst Header = ({\n  showNotifications = true,\n  showUserIcon = true,\n  onUserIconClick,\n  showMobileMenu = false,\n  mobileMenuOpen,\n  setMobileMenuOpen,\n  showLanguageToggle = true,\n  currentLanguage = \"ar\",\n  onLanguageChange\n}) => {\n  const navigate = useNavigate();\n\n  // Toggle mobile menu function\n  const toggleMobileMenu = () => {\n    if (setMobileMenuOpen) {\n      setMobileMenuOpen(!mobileMenuOpen);\n    }\n  };\n\n  // Handle logo click to navigate to homepage\n  const handleLogoClick = () => {\n    navigate(\"/\");\n  };\n\n  // Handle language selection\n  const handleLanguageSelect = (lang) => {\n    if (onLanguageChange && lang !== currentLanguage) {\n      onLanguageChange(lang);\n    }\n  };\n\n  return (\n    <header className=\"app-header\">\n      {/* Logo - now clickable and navigates to homepage */}\n      <img\n        className=\"logo-with-name\"\n        src={AWJwithName}\n        alt=\"AWJ\"\n        onClick={handleLogoClick}\n        style={{ cursor: 'pointer' }} // Add pointer cursor to indicate it's clickable\n      />\n\n      {/* Action buttons */}\n      <div className=\"header-actions\">\n        {/* Mobile menu toggle button - only shown if showMobileMenu is true */}\n        {showMobileMenu && (\n          <div\n            className=\"mobile-menu-toggle\"\n            onClick={toggleMobileMenu}\n          >\n            {mobileMenuOpen ? <FaTimes size={24} /> : <FaBars size={24} />}\n          </div>\n        )}\n\n        {/* Language toggle button with hover dropdown */}\n        {showLanguageToggle && (\n          <button\n            className=\"btn-secondary app-language-toggle\"\n            aria-label=\"Language selector\"\n          >\n            <TbLanguage className=\"app-language-icon\" />\n            <div className=\"app-language-selector\">\n              <div\n                className={`app-language-option ${currentLanguage === \"en\" ? \"active\" : \"\"}`}\n                onClick={() => handleLanguageSelect(\"en\")}\n              >\n                English\n              </div>\n              <div\n                className={`app-language-option ${currentLanguage === \"ar\" ? \"active\" : \"\"}`}\n                onClick={() => handleLanguageSelect(\"ar\")}\n              >\n                العربية\n              </div>\n            </div>\n          </button>\n        )}\n\n        {showNotifications && <NotificationIcon />}\n\n        {showUserIcon && (\n          <button\n            className=\"btn-secondary\"\n            onClick={onUserIconClick || (() => navigate(\"/dashboard\"))}\n          >\n            <i className=\"fas fa-user-circle\"></i>\n          </button>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;","import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport {\n    FaUserCircle,\n    FaEye,\n    FaEyeSlash,\n    FaBars,\n    FaTimes,\n    FaLock,\n    FaBuilding,\n    FaInfoCircle,\n    FaBriefcase,\n    FaUsers,\n    FaUserFriends,\n    FaSpinner,\n    FaCheckCircle,\n    FaTimesCircle,\n    FaSave,\n    FaEdit,\n    FaChevronRight,\n    FaChevronLeft,\n    FaEnvelope,\n    FaUserSlash,\n    FaShieldAlt\n} from \"react-icons/fa\";\nimport \"./DashboardPage.css\";\nimport DashBIcon from \"./assets/DashBIcon.svg\";\nimport ProjIcon from \"./assets/ProjIcon.svg\";\nimport CompanyFileIcon from \"./assets/CompanyFileIcon.svg\";\nimport BMIconD from \"./assets/BMIconD.svg\";\nimport GDIcon from \"./assets/GDIcon.svg\";\nimport { db } from \"./firebase\";\nimport {\n    collection,\n    getDocs,\n    doc,\n    getDoc,\n    updateDoc,\n    query,\n    where,\n} from \"firebase/firestore\";\nimport Header from \"./Header\";\n\n// Translations for all UI text\nconst translations = {\n    en: {\n        dashboard: \"Dashboard\",\n        projects: \"Projects\",\n        newProject: \"New Project\",\n        businessModel: \"Business Model\",\n        companyProfile: \"Company Profile\",\n        comingSoon: \"Coming Soon\",\n        existingProjects: \"Existing Projects\",\n        totalProjects: \"Projects\",\n        ongoingProjects: \"Ongoing Projects\",\n        completedProjects: \"Completed Projects\",\n        filterByStatus: \"Filter by Status:\",\n        all: \"All\",\n        inProgress: \"In Progress\",\n        completed: \"Completed\",\n        notStarted: \"Not Started\",\n        delayed: \"Delayed\",\n        noProjects: \"No projects available at the moment\",\n        noFilteredProjects: \"No projects with the status\",\n        createNewProject: \"Create New Project\",\n        duration: \"Duration:\",\n        goals: \"Goals:\",\n        status: \"Status:\",\n        loading: \"Loading...\",\n        undetermined: \"Undetermined\",\n        days: \"days\",\n        viewDetails: \"View Details\",\n        companyName: \"Company Name\",\n        companyDescription: \"Company Description\",\n        companyField: \"Company Field\",\n        totalEmployees: \"Total Company Employees\",\n        registeredEmployees: \"Registered Employees\",\n        securityCode: \"Security Code\",\n        managerOnly: \"Only managers can edit data\",\n        saveChanges: \"Save Changes\",\n        saving: \"Saving...\",\n        saved: \"Saved\",\n        saveFailed: \"Save Failed\",\n        editData: \"Edit Data\",\n        cancel: \"Cancel\",\n        manager: \"Manager\",\n        page: \"Page\",\n        of: \"of\",\n        previous: \"Previous\",\n        next: \"Next\",\n        noRegisteredMembers: \"No registered members found\",\n        statusValues: {\n            \"In Progress\": \"In Progress\",\n            \"Completed\": \"Completed\",\n            \"Not Started\": \"Not Started\",\n            \"قيد التنفيذ\": \"In Progress\",\n            \"مكتمل\": \"Completed\",\n            \"لم يبدأ\": \"Not Started\",\n        }\n    },\n    ar: {\n        dashboard: \"لوحة التحكم\",\n        projects: \"المشاريع القائمة\",\n        newProject: \"مشروع جديد\",\n        businessModel: \"نموذج العمل\",\n        companyProfile: \"ملف الشركة\",\n        comingSoon: \"قريبًا\",\n        existingProjects: \"المشاريع القائمة\",\n        totalProjects: \"المشاريع\",\n        ongoingProjects: \"المشاريع الجارية\",\n        completedProjects: \"المشاريع المكتملة\",\n        filterByStatus: \"تصفية حسب الحالة:\",\n        all: \"الكل\",\n        inProgress: \"قيد التنفيذ\",\n        completed: \"مكتمل\",\n        notStarted: \"لم يبدأ\",\n        delayed: \"متأخر\",\n        noProjects: \"لا توجد مشاريع متاحة حاليًا\",\n        noFilteredProjects: \"لا توجد مشاريع بحالة\",\n        createNewProject: \"إنشاء مشروع جديد\",\n        duration: \"المدة:\",\n        goals: \"عدد الأهداف:\",\n        status: \"الحالة:\",\n        loading: \"جاري التحميل...\",\n        undetermined: \"غير محدد\",\n        days: \"يوم\",\n        viewDetails: \"مشاهدة التفاصيل\",\n        companyName: \"اسم الشركة\",\n        companyDescription: \"وصف الشركة\",\n        companyField: \"مجال الشركة\",\n        totalEmployees: \"إجمالي عدد موظفي الشركة\",\n        registeredEmployees: \"الموظفين المسجلين\",\n        securityCode: \"رمز الأمان\",\n        managerOnly: \"لا يمكن تعديل البيانات إلا من قبل المدير\",\n        saveChanges: \"حفظ التغييرات\",\n        saving: \"جاري الحفظ...\",\n        saved: \"تم الحفظ\",\n        saveFailed: \"فشل الحفظ\",\n        editData: \"تعديل البيانات\",\n        cancel: \"إلغاء\",\n        manager: \"مدير\",\n        page: \"الصفحة\",\n        of: \"من\",\n        previous: \"السابق\",\n        next: \"التالي\",\n        noRegisteredMembers: \"لم يتم العثور على أعضاء مسجلين\",\n        statusValues: {\n            \"In Progress\": \"قيد التنفيذ\",\n            \"Completed\": \"مكتمل\",\n            \"Not Started\": \"لم يبدأ\",\n            \"قيد التنفيذ\": \"قيد التنفيذ\",\n            \"مكتمل\": \"مكتمل\",\n            \"لم يبدأ\": \"لم يبدأ\",\n        }\n    }\n};\n\nconst refreshSecurityKeyIfExpired = async (companyId) => {\n    const companyRef = doc(db, \"Company\", companyId);\n    const companySnap = await getDoc(companyRef);\n    if (companySnap.exists()) {\n        const data = companySnap.data();\n        const createdAt = data.SecurityKeyCreatedAt?.toDate?.();\n        if (createdAt) {\n            const now = new Date();\n            const diffInDays = (now - createdAt) / (1000 * 60 * 60 * 24);\n            if (diffInDays >= 14) {\n                const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n                let newKey = \"\";\n                for (let i = 0; i < 5; i++) {\n                    newKey += chars.charAt(Math.floor(Math.random() * chars.length));\n                }\n                await updateDoc(companyRef, {\n                    SecurityKey: newKey,\n                    SecurityKeyCreatedAt: now,\n                });\n                console.log(\"Security key refreshed.\");\n            }\n        }\n    }\n};\n\nconst DashboardPage = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const [selectedSection, setSelectedSection] = useState(\"dashboard\");\n    const [isEditing, setIsEditing] = useState(false);\n    const [userName, setUserName] = useState(\"\");\n    const [userRole, setUserRole] = useState(\"User\"); // Default to regular user\n    const [projects, setProjects] = useState([]);\n    const [companyInfo, setCompanyInfo] = useState({\n        CompanyName: \"جاري التحميل...\",\n        members: \"جاري التحميل...\",\n        securityCode: \"جاري التحميل...\",\n        description: \"جاري التحميل...\",\n        field: \"جاري التحميل...\",\n    });\n    const [companyRefState, setCompanyRefState] = useState(null);\n    const [showSecurityCode, setShowSecurityCode] = useState(false);\n    const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n    const [saveStatus, setSaveStatus] = useState(null);\n    const [hasVisitedProfile, setHasVisitedProfile] = useState(false);\n    const [projectMilestones, setProjectMilestones] = useState({});\n    const [isLoadingMilestones, setIsLoadingMilestones] = useState(false);\n\n    // Add language state\n    const [language, setLanguage] = useState(() => {\n        return localStorage.getItem('app-language') || 'en'; // Default to English\n    });\n\n    // Get translations for current language\n    const t = translations[language];\n\n    // Add state for pagination\n    const [currentPage, setCurrentPage] = useState(1);\n    const projectsPerPage = 6;\n\n    // Add state for company members\n    const [companyMembers, setCompanyMembers] = useState([]);\n    const [isLoadingMembers, setIsLoadingMembers] = useState(false);\n\n    // Add these state variables to the existing state declarations\n    const [activeFilter, setActiveFilter] = useState(\"all\");\n    const [sortBy, setSortBy] = useState(\"name\");\n    const [filteredProjects, setFilteredProjects] = useState([]);\n\n    // Add this new state for member pagination\n    const [memberCurrentPage, setMemberCurrentPage] = useState(1);\n    const membersPerPage = 5;\n\n    // Update document direction when language changes\n    useEffect(() => {\n        document.documentElement.dir = language === 'ar' ? 'rtl' : 'ltr';\n        localStorage.setItem('app-language', language);\n    }, [language]);\n\n    // Optimized useEffect to fetch milestone data once for all projects\n    useEffect(() => {\n        const fetchMilestonesForProjects = async () => {\n            if (projects.length === 0) return;\n\n            setIsLoadingMilestones(true);\n            const milestonesData = {};\n\n            // Initialize with empty data to avoid undefined errors\n            projects.forEach(project => {\n                milestonesData[project.id] = {\n                    count: project.goals || 0, // Use existing data as initial value\n                    totalDays: parseInt(project.duration) || 0, // Try to parse duration if available\n                    milestones: []\n                };\n            });\n\n            try {\n                // Create a timeout to avoid showing loading forever\n                const timeoutPromise = new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve(\"timeout\");\n                    }, 5000); // 5 second timeout\n                });\n\n                // Fetch all milestones with one query that matches any of our project IDs\n                const fetchPromise = async () => {\n                    if (projects.length <= 10) {\n                        // For a small number of projects, we can use a simple \"in\" query\n                        const milestonesQuery = query(\n                            collection(db, \"Milestones\"),\n                            where(\"ProjectID\", \"in\", projects.map(p => p.id).slice(0, 10)) // Firestore limits \"in\" to 10 values\n                        );\n\n                        const milestonesSnapshot = await getDocs(milestonesQuery);\n\n                        // Group milestones by project ID\n                        milestonesSnapshot.docs.forEach(doc => {\n                            const milestone = { ...doc.data(), id: doc.id };\n                            const projectId = milestone.ProjectID;\n\n                            if (!milestonesData[projectId]) {\n                                milestonesData[projectId] = { count: 0, totalDays: 0, milestones: [] };\n                            }\n\n                            milestonesData[projectId].milestones.push(milestone);\n                            milestonesData[projectId].count = (milestonesData[projectId].milestones || []).length;\n                            milestonesData[projectId].totalDays += parseInt(milestone.TimeEstimate) || 0;\n                        });\n                    } else {\n                        // For many projects, we need to do multiple queries in batches\n                        const batches = [];\n                        const projectIds = projects.map(p => p.id);\n\n                        // Split into batches of 10 (Firestore \"in\" operator limit)\n                        for (let i = 0; i < projectIds.length; i += 10) {\n                            const batch = projectIds.slice(i, i + 10);\n                            batches.push(batch);\n                        }\n\n                        // Execute each batch query\n                        for (const batch of batches) {\n                            const batchQuery = query(\n                                collection(db, \"Milestones\"),\n                                where(\"ProjectID\", \"in\", batch)\n                            );\n\n                            const batchSnapshot = await getDocs(batchQuery);\n\n                            batchSnapshot.docs.forEach(doc => {\n                                const milestone = { ...doc.data(), id: doc.id };\n                                const projectId = milestone.ProjectID;\n\n                                if (!milestonesData[projectId]) {\n                                    milestonesData[projectId] = { count: 0, totalDays: 0, milestones: [] };\n                                }\n\n                                milestonesData[projectId].milestones.push(milestone);\n                                milestonesData[projectId].count = (milestonesData[projectId].milestones || []).length;\n                                milestonesData[projectId].totalDays += parseInt(milestone.TimeEstimate) || 0;\n                            });\n                        }\n                    }\n\n                    return \"completed\";\n                };\n\n                // Race between timeout and fetch\n                const result = await Promise.race([fetchPromise(), timeoutPromise]);\n\n                if (result === \"timeout\") {\n                    console.warn(\"Milestone fetching timed out, using fallback values\");\n                }\n\n                setProjectMilestones(milestonesData);\n            } catch (error) {\n                console.error(\"Error fetching milestones:\", error);\n            } finally {\n                setIsLoadingMilestones(false);\n            }\n        };\n\n        fetchMilestonesForProjects();\n    }, [projects]);\n\n    // Helper functions remain the same but with quick fallback\n    const getMilestoneCount = (projectId, fallbackValue = 0) => {\n        // Return fallback immediately if still loading after 500ms\n        if (isLoadingMilestones && Date.now() - initialRenderTime > 500) {\n            return fallbackValue;\n        }\n\n        if (projectMilestones[projectId]) {\n            return projectMilestones[projectId].count;\n        }\n        return fallbackValue;\n    };\n\n    const getProjectDuration = (projectId, fallbackValue = t.undetermined) => {\n        // Return fallback immediately if still loading after 500ms\n        if (isLoadingMilestones && Date.now() - initialRenderTime > 500) {\n            return fallbackValue;\n        }\n\n        if (projectMilestones[projectId] && projectMilestones[projectId].totalDays > 0) {\n            return `${projectMilestones[projectId].totalDays} ${t.days}`;\n        }\n        return fallbackValue;\n    };\n\n    // Add this at the top of your component to track render time\n    const initialRenderTime = React.useRef(Date.now()).current;\n\n    // Handle language change\n    const handleLanguageChange = (newLanguage) => {\n        setLanguage(newLanguage);\n    };\n\n    useEffect(() => {\n        // First filter projects based on activeFilter\n        let results = [...projects];\n\n        if (activeFilter !== \"all\") {\n            results = projects.filter(project => {\n                // Handle both English and Arabic status values\n                const status = project.status || \"\";\n                const lowercaseStatus = status.toLowerCase().trim();\n\n                if (activeFilter === \"In Progress\") {\n                    return lowercaseStatus === \"in progress\" || lowercaseStatus === \"قيد التنفيذ\";\n                } else if (activeFilter === \"Completed\") {\n                    return lowercaseStatus === \"completed\" || lowercaseStatus === \"مكتمل\";\n                } else if (activeFilter === \"Not Started\") {\n                    return lowercaseStatus === \"not started\" || lowercaseStatus === \"لم يبدأ\";\n                } else {\n                    return status === activeFilter;\n                }\n            });\n        }\n\n        // Then sort the filtered results\n        results = sortProjects(results, sortBy);\n\n        // Update filteredProjects state\n        setFilteredProjects(results);\n\n        // Reset to first page when filter/sort changes\n        setCurrentPage(1);\n    }, [projects, activeFilter, sortBy]);\n\n    // Add this function to handle sorting\n    const sortProjects = (projectsToSort, sortCriteria) => {\n        return [...projectsToSort].sort((a, b) => {\n            switch (sortCriteria) {\n                case \"name\":\n                    return a.name.localeCompare(b.name);\n                case \"status\":\n                    return a.status.localeCompare(b.status);\n                case \"goals\":\n                    return (b.goals || 0) - (a.goals || 0);\n                default:\n                    return 0;\n            }\n        });\n    };\n\n    // Add this function to handle filter button clicks\n    const handleFilterChange = (filter) => {\n        setActiveFilter(filter);\n    };\n\n    // Add this function to handle sort selection changes\n    const handleSortChange = (e) => {\n        setSortBy(e.target.value);\n    };\n\n\n    useEffect(() => {\n        // Check if we have a state with selectedSection from navigation\n        if (location.state && location.state.selectedSection) {\n            setSelectedSection(location.state.selectedSection);\n            // Clear the state to prevent it from being reused on refresh\n            window.history.replaceState({}, document.title);\n        }\n        const fetchUserAndCompanyData = async () => {\n            const userId = localStorage.getItem(\"userId\");\n            if (!userId) return;\n\n            const userRef = doc(db, \"User\", userId);\n            const userSnap = await getDoc(userRef);\n            if (userSnap.exists()) {\n                const userData = userSnap.data();\n                setUserName(userData.FirstName);\n                setUserRole(userData.UserType || \"User\"); // Set the user role\n\n                const companyRef = userData.CompanyID;\n                if (companyRef?.id) {\n                    setCompanyRefState(companyRef); // store the company reference for later use\n                    await refreshSecurityKeyIfExpired(companyRef.id);\n\n                    const companySnap = await getDoc(doc(db, \"Company\", companyRef.id));\n                    if (companySnap.exists()) {\n                        const data = companySnap.data();\n                        setCompanyInfo({\n                            CompanyName: data.CompanyName || \"\",\n                            members: data.CompanySize || \"\",\n                            securityCode: data.SecurityKey || \"\",\n                            description: data.CompDescription || \"\",\n                            field: data.Industry || \"\",\n                        });\n\n                        // Fetch company members\n                        setIsLoadingMembers(true);\n                        try {\n                            const membersQuery = query(\n                                collection(db, \"User\"),\n                                where(\"CompanyID\", \"==\", companyRef)\n                            );\n                            const membersSnap = await getDocs(membersQuery);\n                            const membersData = membersSnap.docs.map(doc => ({\n                                id: doc.id,\n                                ...doc.data()\n                            }));\n\n                            // Sort members with managers at the top\n                            const sortedMembers = membersData.sort((a, b) => {\n                                if (a.UserType === \"Manager\" && b.UserType !== \"Manager\") return -1;\n                                if (a.UserType !== \"Manager\" && b.UserType === \"Manager\") return 1;\n                                return 0;\n                            });\n\n                            setCompanyMembers(sortedMembers);\n                        } catch (error) {\n                            console.error(\"Error fetching company members:\", error);\n                        } finally {\n                            setIsLoadingMembers(false);\n                        }\n                    }\n\n                    // Fetch projects for the company\n                    const projectQuery = query(\n                        collection(db, \"Project\"),\n                        where(\"CompanyID\", \"==\", companyRef)\n                    );\n                    const projectSnap = await getDocs(projectQuery);\n                    const rawProjects = projectSnap.docs.map((doc) => ({\n                        id: doc.id,\n                        name: doc.data().ProjectName || \"\",\n                        duration: doc.data().TimeEstimate || \"\",\n                        status: doc.data().Status || \"\",\n                        goals: doc.data().GoalsCount || 0,\n                    }));\n                    const uniqueProjectsMap = new Map();\n                    rawProjects.forEach((proj) => {\n                        if (!uniqueProjectsMap.has(proj.id)) {\n                            uniqueProjectsMap.set(proj.id, proj);\n                        }\n                    });\n                    setProjects([...uniqueProjectsMap.values()]);\n                }\n            }\n        };\n\n        fetchUserAndCompanyData();\n    }, [location]);\n\n\n    // Function to handle page change\n    const handlePageChange = (pageNumber) => {\n        setCurrentPage(pageNumber);\n        // Scroll to top of projects list\n        document.querySelector('.projects-list').scrollIntoView({ behavior: 'smooth' });\n    };\n\n    const getStatusClass = (status) => {\n        // Normalize the status by trimming and converting to lowercase for comparison\n        const normalizedStatus = (status || \"\").trim().toLowerCase();\n\n        if (normalizedStatus === \"completed\" || normalizedStatus === \"مكتمل\") {\n            return \"status-completed\";\n        } else if (normalizedStatus === \"in progress\" || normalizedStatus === \"قيد التنفيذ\") {\n            return \"status-inprogress\";\n        } else if (normalizedStatus === \"not started\" || normalizedStatus === \"لم يبدأ\") {\n            return \"status-notstarted\";\n        }\n\n        // Fallback to default styling\n        return \"\";\n    };\n\n    // Calculate pagination values\n    const indexOfLastProject = currentPage * projectsPerPage;\n    const indexOfFirstProject = indexOfLastProject - projectsPerPage;\n    const currentProjects = filteredProjects.slice(indexOfFirstProject, indexOfLastProject);\n    const totalPages = Math.ceil(filteredProjects.length / projectsPerPage);\n\n    // Render pagination components\n    const renderPagination = () => {\n        const pageNumbers = [];\n\n        for (let i = 1; i <= totalPages; i++) {\n            pageNumbers.push(i);\n        }\n\n        return (\n            <div className=\"pagination\">\n                {currentPage > 1 && (\n                    <button\n                        className=\"page-button\"\n                        onClick={() => handlePageChange(currentPage - 1)}\n                    >\n                        {t.previous}\n                    </button>\n                )}\n\n                {pageNumbers.map(number => (\n                    <button\n                        key={number}\n                        className={`page-button ${currentPage === number ? 'active' : ''}`}\n                        onClick={() => handlePageChange(number)}\n                    >\n                        {number}\n                    </button>\n                ))}\n\n                {currentPage < totalPages && (\n                    <button\n                        className=\"page-button\"\n                        onClick={() => handlePageChange(currentPage + 1)}\n                    >\n                        {t.next}\n                    </button>\n                )}\n            </div>\n        );\n    };\n\n    const handleBusinessModelClick = async () => {\n        if (!companyRefState) {\n            navigate(\"/business-model\");\n            return;\n        }\n        try {\n            const bmInputRef = collection(db, \"BusinessModel_UserInput\");\n            const q = query(bmInputRef, where(\"CompanyID\", \"==\", companyRefState));\n            const querySnapshot = await getDocs(q);\n            if (!querySnapshot.empty) {\n                // Assume the first matching document represents the company's BM_UserInput.\n                const bmDoc = querySnapshot.docs[0];\n                const modelField = bmDoc.data().ModelID;\n                if (modelField) {\n                    // If ModelID is a DocumentReference, get its id; if it's a string, use it directly.\n                    const finalModelId = modelField.id ? modelField.id : modelField;\n                    navigate(\"/business-model-result\", { state: { model_id: finalModelId } });\n                } else {\n                    navigate(\"/business-model\");\n                }\n            } else {\n                navigate(\"/business-model\");\n            }\n        } catch (error) {\n            console.error(\"Error checking business model:\", error);\n            navigate(\"/business-model\"); // fallback navigation\n        }\n    };\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        // Don't allow changing securityCode\n        if (name === \"securityCode\") return;\n\n        setCompanyInfo((prevInfo) => ({\n            ...prevInfo,\n            [name]: value,\n        }));\n    };\n\n    // Update the setSelectedSection function to reset security code visibility\n    const handleSectionChange = (section) => {\n        setSelectedSection(section);\n        setMobileMenuOpen(false);\n\n        // If leaving company profile, hide security code\n        if (selectedSection === \"company-profile\" && section !== \"company-profile\") {\n            setShowSecurityCode(false);\n        }\n\n        // If visiting company profile, mark as visited\n        if (section === \"company-profile\") {\n            setHasVisitedProfile(true);\n        }\n    };\n\n    const handleEditClick = async () => {\n        // Only allow Managers to edit\n        if (userRole !== \"Manager\") {\n            return;\n        }\n\n        if (isEditing) {\n            try {\n                setSaveStatus(\"saving\");\n                const userId = localStorage.getItem(\"userId\");\n                const userRef = doc(db, \"User\", userId);\n                const userSnap = await getDoc(userRef);\n                if (userSnap.exists()) {\n                    const companyRef = userSnap.data().CompanyID;\n                    if (companyRef?.id) {\n                        await updateDoc(doc(db, \"Company\", companyRef.id), {\n                            CompanySize: Number(companyInfo.members),\n                            // Don't update SecurityKey\n                            CompDescription: companyInfo.description,\n                            Industry: companyInfo.field,\n                            CompanyName: companyInfo.CompanyName,\n                        });\n                        setSaveStatus(\"success\");\n                        setTimeout(() => setSaveStatus(null), 3000);\n                    }\n                }\n            } catch (error) {\n                console.error(\"Error updating company information:\", error);\n                setSaveStatus(\"error\");\n                setTimeout(() => setSaveStatus(null), 3000);\n            }\n        }\n        setIsEditing(!isEditing);\n    };\n\n    const handleViewDetails = (project_id) => {\n        navigate(\"/goal-decomposing-result\", { state: { project_id } });\n    };\n\n    // Update the toggle security code function\n    const toggleSecurityCode = () => {\n        // Only allow Managers to toggle security code visibility\n        if (userRole === \"Manager\") {\n            setShowSecurityCode(!showSecurityCode);\n        }\n    };\n\n    // Update CSS for the toggle visibility button\n    const toggleVisibilityStyles = {\n        position: 'absolute',\n        left: '10px', // Change from right to left\n        top: '50%',\n        transform: 'translateY(-50%)',\n    };\n\n    const toggleMobileMenu = () => {\n        setMobileMenuOpen(!mobileMenuOpen);\n    };\n\n    const statusColors = {\n        \"قيد التنفيذ\": \"#FF9249\",\n        \"متأخر\": \"#E63A46\",\n        \"اختبار التشغيل\": \"#0F9DDB\",\n        \"مكتمل\": \"#10C154\",\n    };\n\n    const formatSecurityCode = (code) => {\n        return showSecurityCode ? code : \"•\".repeat(code.length);\n    };\n\n    // Function to handle member pagination\n    const paginateMembers = (pageNumber) => {\n        setMemberCurrentPage(pageNumber);\n    };\n\n    // Function to handle sending messages to members\n    const handleSendMessage = (email) => {\n        // Implementation could be:\n        // 1. Open a modal with a message form\n        // 2. Navigate to a messaging page\n        // 3. Open the default email client\n        window.location.href = `mailto:${email}`;\n\n        // Alternatively, you could show a modal:\n        // setMessageModal({ open: true, recipient: email });\n    };\n\n    // Calculate pagination values for members\n    const indexOfLastMember = memberCurrentPage * membersPerPage;\n    const indexOfFirstMember = indexOfLastMember - membersPerPage;\n    const currentMembers = companyMembers.slice(indexOfFirstMember, indexOfLastMember);\n    const totalMemberPages = Math.ceil(companyMembers.length / membersPerPage);\n\n    // function to translate status values\n    const translateStatus = (status) => {\n        if (!status) return t.undetermined;\n\n        // Check if we have a translation for this status\n        if (t.statusValues && t.statusValues[status]) {\n            return t.statusValues[status];\n        }\n\n        // If no translation found, return the original status\n        return status;\n    };\n    return (\n        <div className=\"dashboard-container\">\n            {/*Header component with language toggle */}\n            <Header\n                showNotifications={true}\n                showUserIcon={true}\n                showMobileMenu={true} // Enable mobile menu toggle for Dashboard\n                mobileMenuOpen={mobileMenuOpen}\n                setMobileMenuOpen={setMobileMenuOpen}\n                showLanguageToggle={true}\n                currentLanguage={language}\n                onLanguageChange={handleLanguageChange}\n            />\n\n            <div className=\"content-wrapper\">\n                <div className={`sidebar ${mobileMenuOpen ? 'mobile-open' : ''}`}>\n                    <ul>\n                        <li\n                            className={`sidebar-item ${selectedSection === \"dashboard\" ? \"active\" : \"\"}`}\n                            onClick={() => {\n                                handleSectionChange(\"dashboard\");\n                            }}\n                        >\n                            {t.dashboard}{\" \"}\n                            <img className=\"sidebar-icon\" alt=\"Dashboard Icon\" src={DashBIcon} />\n                        </li>\n                        <li\n                            className={`sidebar-item ${selectedSection === \"projects\" ? \"active\" : \"\"} mobile-projects`}\n                            onClick={() => {\n                                handleSectionChange(\"projects\");\n                            }}\n                        >\n                            {t.projects}{\" \"}\n                            <img className=\"sidebar-icon\" alt=\"Project Icon\" src={ProjIcon} />\n                        </li>\n                        <li\n                            className=\"sidebar-item\"\n                            onClick={() => {\n                                navigate(\"/goal-decomposing\");\n                                setMobileMenuOpen(false);\n                            }}\n                        >\n                            {t.newProject} <img className=\"sidebar-icon\" alt=\"GD Icon\" src={GDIcon} />\n                        </li>\n                        <li\n                            className=\"sidebar-item\"\n                            onClick={() => {\n                                handleBusinessModelClick();\n                                setMobileMenuOpen(false);\n                            }}\n                        >\n                            {t.businessModel} <img className=\"sidebar-icon\" alt=\"BM Icon\" src={BMIconD} />\n                        </li>\n                        <li\n                            className={`sidebar-item ${selectedSection === \"company-profile\" ? \"active\" : \"\"}`}\n                            onClick={() => {\n                                handleSectionChange(\"company-profile\");\n                            }}\n                        >\n                            {t.companyProfile}{\" \"}\n                            <img\n                                className=\"sidebar-icon\"\n                                alt=\"File Icon\"\n                                src={CompanyFileIcon}\n                            />\n                        </li>\n                    </ul>\n                </div>\n\n                <div className=\"main-content\">\n                    {selectedSection === \"dashboard\" && (\n                        <div className=\"empty-dashboard\">\n                            <h1>{t.dashboard}</h1>\n                            <div className=\"dashboard-placeholder\">\n                                <p>{t.comingSoon}</p>\n                            </div>\n                        </div>\n                    )}\n\n                    {selectedSection === \"projects\" && (\n                        <div className=\"projects-container\">\n                            <h1 className=\"section-title\">{t.existingProjects}</h1>\n\n                            {/* Projects Stats Overview */}\n                            {projects.length > 0 && (\n                                <div className=\"project-overview-card\">\n                                    <div className=\"card-content\">\n                                        <div className=\"stat-box\">\n                                            <h3>{t.totalProjects}</h3>\n                                            <p className=\"stat-value\">{projects.length}</p>\n                                        </div>\n                                        <div className=\"stat-box\">\n                                            <h3>{t.ongoingProjects}</h3>\n                                            <p className=\"stat-value\">\n                                                {projects.filter(p => p.status === \"In Progress\" || p.status === \"قيد التنفيذ\").length}\n                                            </p>\n                                        </div>\n                                        <div className=\"stat-box\">\n                                            <h3>{t.completedProjects}</h3>\n                                            <p className=\"stat-value\">\n                                                {projects.filter(p => p.status === \"Completed\" || p.status === \"مكتمل\").length}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n\n                            {/* Projects Filter Controls */}\n                            {projects.length > 0 && (\n                                <div className=\"projects-filter\">\n                                    <div className=\"filter-group\">\n                                        <label>{t.filterByStatus}</label>\n                                        <div className=\"filter-options\">\n                                            <button\n                                                className={`filter-btn ${activeFilter === \"all\" ? \"active\" : \"\"}`}\n                                                onClick={() => handleFilterChange(\"all\")}\n                                            >\n                                                {t.all}\n                                            </button>\n                                            <button\n                                                className={`filter-btn ${activeFilter === \"In Progress\" || activeFilter === \"قيد التنفيذ\" ? \"active\" : \"\"}`}\n                                                onClick={() => handleFilterChange(\"In Progress\")}\n                                            >\n                                                {t.inProgress}\n                                            </button>\n                                            <button\n                                                className={`filter-btn ${activeFilter === \"Completed\" || activeFilter === \"مكتمل\" ? \"active\" : \"\"}`}\n                                                onClick={() => handleFilterChange(\"Completed\")}\n                                            >\n                                                {t.completed}\n                                            </button>\n                                            <button\n                                                className={`filter-btn ${activeFilter === \"Not Started\" || activeFilter === \"لم يبدأ\" ? \"active\" : \"\"}`}\n                                                onClick={() => handleFilterChange(\"Not Started\")}\n                                            >\n                                                {t.notStarted}\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n\n\n                            <div className=\"projects-list\">\n                                {filteredProjects.length > 0 ? (\n                                    currentProjects.map((project) => (\n                                        <div className=\"project-card\" key={project.id}>\n                                            <div className=\"project-header\">\n                                                <div className=\"project-title-area\">\n                                                    <h3>{project.name}</h3>\n                                                    <span\n                                                        className={`status-indicator ${project.status ? project.status.replace(/\\s+/g, '-').toLowerCase() : ''}`}\n                                                    ></span>\n                                                </div>\n                                            </div>\n                                            <div className=\"project-details\">\n                                                <div className=\"project-info-group\">\n                                                    <div className=\"project-info-item\">\n                                                        <i className=\"fas fa-calendar-alt info-icon\"></i>\n                                                        <div className=\"info-content\">\n                                                            <span className=\"info-label\">{t.duration}</span>\n                                                            <span className=\"info-value\">\n                                                                {isLoadingMilestones && Date.now() - initialRenderTime <= 500 ? (\n                                                                    <span className=\"loading-indicator small\">{t.loading}</span>\n                                                                ) : (\n                                                                    getProjectDuration(project.id, project.duration || t.undetermined)\n                                                                )}\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"project-info-item\">\n                                                        <i className=\"fas fa-tasks info-icon\"></i>\n                                                        <div className=\"info-content\">\n                                                            <span className=\"info-label\">{t.goals}</span>\n                                                            <span className=\"info-value\">\n                                                                {isLoadingMilestones && Date.now() - initialRenderTime <= 500 ? (\n                                                                    <span className=\"loading-indicator small\">{t.loading}</span>\n                                                                ) : (\n                                                                    getMilestoneCount(project.id, project.goals || 0)\n                                                                )}\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"project-info-item\">\n                                                        <i className=\"fas fa-chart-line info-icon\"></i>\n                                                        <div className=\"info-content\">\n                                                            <span className=\"info-label\">{t.status}</span>\n                                                            <span className={`status-badge ${getStatusClass(project.status)}`}>\n                                                                {translateStatus(project.status) || t.undetermined}\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"project-actions\">\n                                                    <button\n                                                        className=\"details-button\"\n                                                        onClick={() => handleViewDetails(project.id)}\n                                                    >\n                                                        <i className=\"fas fa-eye button-icon\"></i>\n                                                        {t.viewDetails}\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))\n                                ) : (\n                                    <div className=\"no-projects\">\n                                        <i className=\"fas fa-folder-open empty-icon\"></i>\n                                        <p>{activeFilter !== \"all\" ? `${t.noFilteredProjects} \"${activeFilter}\"` : t.noProjects}</p>\n                                        <button\n                                            className=\"create-project-btn\"\n                                            onClick={() => navigate(\"/goal-decomposing\")}\n                                        >\n                                            {t.createNewProject}\n                                        </button>\n                                    </div>\n                                )}\n                            </div>\n                            {filteredProjects.length > projectsPerPage && renderPagination()}\n                        </div>\n                    )}\n\n                    {selectedSection === \"company-profile\" && (\n                        <div className={`company-profile ${language === 'en' ? 'ltr-content' : ''}`}>\n                            <h2 className=\"section-title\">{t.companyProfile}</h2>\n                            <div className=\"enhanced-profile-form\">\n                                {/* Company name (at the top) */}\n                                <div className=\"profile-box company-name-box\">\n                                    <label>\n                                        <FaBuilding className=\"label-icon\" /> {t.companyName}\n                                    </label>\n                                    <div className=\"input-container\">\n                                        {isEditing ? (\n                                            <input\n                                                type=\"text\"\n                                                name=\"CompanyName\"\n                                                value={companyInfo.CompanyName}\n                                                onChange={handleInputChange}\n                                                className=\"input-field\"\n                                                style={{ direction: language === 'en' ? 'ltr' : 'rtl' }}\n                                            />\n                                        ) : (\n                                            <p className=\"info-display company-name\" style={{ direction: language === 'en' ? 'ltr' : 'rtl' }}>\n                                                {companyInfo.CompanyName}\n                                            </p>\n                                        )}\n                                    </div>\n                                </div>\n\n                                {/* Company description */}\n                                <div className=\"profile-box\">\n                                    <label>\n                                        <FaInfoCircle className=\"label-icon\" /> {t.companyDescription}\n                                    </label>\n                                    <div className=\"input-container\">\n                                        {isEditing ? (\n                                            <textarea\n                                                name=\"description\"\n                                                value={companyInfo.description}\n                                                onChange={handleInputChange}\n                                                className=\"input-field textarea\"\n                                                rows=\"4\"\n                                                style={{ direction: language === 'en' ? 'ltr' : 'rtl' }}\n                                            ></textarea>\n                                        ) : (\n                                            <p className=\"info-display description\" style={{ direction: language === 'en' ? 'ltr' : 'rtl' }}>\n                                                {companyInfo.description}\n                                            </p>\n                                        )}\n                                    </div>\n                                </div>\n\n                                {/* Company field (moved up) */}\n                                <div className=\"profile-box\">\n                                    <label>\n                                        <FaBriefcase className=\"label-icon\" /> {t.companyField}\n                                    </label>\n                                    <div className=\"input-container\">\n                                        {isEditing ? (\n                                            <input\n                                                type=\"text\"\n                                                name=\"field\"\n                                                value={companyInfo.field}\n                                                onChange={handleInputChange}\n                                                className=\"input-field\"\n                                                style={{ direction: language === 'en' ? 'ltr' : 'rtl' }}\n                                            />\n                                        ) : (\n                                            <p className=\"info-display\" style={{ direction: language === 'en' ? 'ltr' : 'rtl' }}>\n                                                {companyInfo.field}\n                                            </p>\n                                        )}\n                                    </div>\n                                </div>\n\n                                {/* Total members count */}\n                                <div className=\"profile-box members-count-box\">\n                                    <label>\n                                        <FaUsers className=\"label-icon\" /> {t.totalEmployees}\n                                    </label>\n                                    <div className=\"input-container\">\n                                        {isEditing ? (\n                                            <input\n                                                type=\"number\"\n                                                name=\"members\"\n                                                value={companyInfo.members}\n                                                onChange={handleInputChange}\n                                                className=\"input-field\"\n                                                min=\"1\"\n                                                style={{ direction: language === 'en' ? 'ltr' : 'rtl' }}\n                                            />\n                                        ) : (\n                                            <p className=\"info-display\" style={{ direction: language === 'en' ? 'ltr' : 'rtl' }}>\n                                                {companyInfo.members}\n                                            </p>\n                                        )}\n                                    </div>\n                                </div>\n\n                                {/* Registered members with pagination */}\n                                <div className=\"profile-box members-box\">\n                                    <label>\n                                        <FaUserFriends className=\"label-icon\" /> {t.registeredEmployees} ({companyMembers.length})\n                                    </label>\n                                    <div className=\"input-container\">\n                                        <div className=\"members-count-container\">\n                                            {isLoadingMembers ? (\n                                                <div className=\"members-loading\"><FaSpinner className=\"fa-spin\" /> {t.loading}</div>\n                                            ) : (\n                                                <>\n                                                    <div className=\"members-list\">\n                                                        {currentMembers.length > 0 ? (\n                                                            currentMembers.map((member) => (\n                                                                <div key={member.id} className={`member-card ${member.UserType === \"Manager\" ? \"manager-card\" : \"\"}`}>\n                                                                    <div className=\"member-avatar\" style={{ marginRight: '15px', marginLeft: '0' }}>\n                                                                        <FaUserCircle size={40} />\n                                                                        {member.UserType === \"Manager\" && (\n                                                                            <span className=\"manager-badge\">{t.manager}</span>\n                                                                        )}\n                                                                    </div>\n                                                                    <div className=\"member-info\" style={{ textAlign: language === 'en' ? 'left' : 'right' }}>\n                                                                        <h4>{member.FirstName} {member.LastName}</h4>\n                                                                        <p className=\"member-email\">{member.Email}</p>\n                                                                    </div>\n                                                                    <div className=\"member-actions\">\n                                                                        <button\n                                                                            className=\"send-message-btn\"\n                                                                            onClick={() => handleSendMessage(member.Email)}\n                                                                            aria-label=\"Send Message\"\n                                                                        >\n                                                                            <FaEnvelope />\n                                                                        </button>\n                                                                    </div>\n                                                                </div>\n                                                            ))\n                                                        ) : (\n                                                            <p className=\"no-members\">\n                                                                <FaUserSlash /> {t.noRegisteredMembers}\n                                                            </p>\n                                                        )}\n                                                    </div>\n\n                                                    {/* Pagination */}\n                                                    {companyMembers.length > membersPerPage && (\n                                                        <div className=\"pagination-container\" style={{ flexDirection: language === 'en' ? 'row' : 'row-reverse' }}>\n                                                            <button\n                                                                onClick={() => paginateMembers(memberCurrentPage - 1)}\n                                                                disabled={memberCurrentPage === 1}\n                                                                className=\"pagination-btn\"\n                                                            >\n                                                                {language === 'en' ? <FaChevronLeft /> : <FaChevronRight />}\n                                                            </button>\n\n                                                            <span className=\"page-info\">\n                                                                {t.page} {memberCurrentPage} {t.of} {totalMemberPages}\n                                                            </span>\n\n                                                            <button\n                                                                onClick={() => paginateMembers(memberCurrentPage + 1)}\n                                                                disabled={memberCurrentPage === totalMemberPages}\n                                                                className=\"pagination-btn\"\n                                                            >\n                                                                {language === 'en' ? <FaChevronRight /> : <FaChevronLeft />}\n                                                            </button>\n                                                        </div>\n                                                    )}\n                                                </>\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                {/* Security code */}\n                                <div className=\"profile-box security-box\">\n                                    <label>\n                                        <FaShieldAlt className=\"label-icon\" /> {t.securityCode}\n                                    </label>\n                                    <div className=\"input-container security-code-container\">\n                                        <p className=\"info-display security-code\" style={{\n                                            paddingLeft: language === 'en' ? '40px' : '15px',\n                                            paddingRight: language === 'en' ? '15px' : '40px',\n                                            direction: language === 'en' ? 'ltr' : 'rtl'\n                                        }}>\n                                            {formatSecurityCode(companyInfo.securityCode)}\n                                        </p>\n                                        {userRole === \"Manager\" && (\n                                            <button\n                                                className=\"toggle-visibility\"\n                                                type=\"button\"\n                                                onClick={toggleSecurityCode}\n                                                style={{\n                                                    left: language === 'en' ? '10px' : 'auto',\n                                                    right: language === 'en' ? 'auto' : '10px'\n                                                }}\n                                                aria-label={showSecurityCode ? \"Hide Code\" : \"Show Code\"}\n                                            >\n                                                {showSecurityCode ? <FaEyeSlash /> : <FaEye />}\n                                            </button>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n\n                            {userRole !== \"Manager\" && (\n                                <div className=\"role-notice\">\n                                    <FaLock className=\"lock-icon\" />\n                                    <p>{t.managerOnly}</p>\n                                </div>\n                            )}\n\n                            {/* Moved button container outside and to the bottom */}\n                            <div className=\"profile-actions-container\">\n                                {userRole === \"Manager\" && (\n                                    <button\n                                        className={`update-button ${isEditing ? 'save' : 'edit'} ${saveStatus ? saveStatus : ''}`}\n                                        onClick={handleEditClick}\n                                    >\n                                        {saveStatus === \"saving\" ? (\n                                            <><FaSpinner className=\"fa-spin\" style={{ marginRight: '8px' }} /> {t.saving}</>\n                                        ) : saveStatus === \"success\" ? (\n                                            <><FaCheckCircle style={{ marginRight: '8px' }} /> {t.saved}</>\n                                        ) : saveStatus === \"error\" ? (\n                                            <><FaTimesCircle style={{ marginRight: '8px' }} /> {t.saveFailed}</>\n                                        ) : isEditing ? (\n                                            <><FaSave style={{ marginRight: '8px' }} /> {t.saveChanges}</>\n                                        ) : (\n                                            <><FaEdit style={{ marginRight: '8px' }} /> {t.editData}</>\n                                        )}\n                                    </button>\n                                )}\n\n                                {isEditing && (\n                                    <button\n                                        className=\"cancel-button\"\n                                        onClick={() => setIsEditing(false)}\n                                    >\n                                        <FaTimes style={{ marginRight: '8px' }} /> {t.cancel}\n                                    </button>\n                                )}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DashboardPage;","// BusinessModelResult.js\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { doc, getDoc, updateDoc, setDoc, collection } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport \"./BusinessModelResult.css\";\nimport SmallSqrs1 from \"./assets/SmallSqrs1.svg\";\nimport SmallSqrs2 from \"./assets/SmallSqrs2.svg\";\nimport Header from \"./Header\";\n\n// Translations for fixed UI elements\nconst translations = {\n  en: {\n    pageTitle: \"Business Model Canvas\",\n    loading: \"Loading...\",\n    lastUpdated: \"Last updated:\",\n    keyPartners: \"Key Partners\",\n    keyActivities: \"Key Activities\",\n    valueProposition: \"Value Proposition\",\n    customerRelationships: \"Customer Relationships\",\n    customerSegments: \"Customer Segments\",\n    keyResources: \"Key Resources\",\n    channels: \"Channels\",\n    costStructure: \"Cost Structure\",\n    revenueStreams: \"Revenue Streams\",\n    editContent: \"Edit Content\",\n    exportPDF: \"Export PDF\",\n    saveChanges: \"Save Changes\",\n    saving: \"Saving...\",\n    cancel: \"Cancel\",\n    success: \"Changes saved successfully\",\n    errorFetchModel: \"Business model ID not found.\",\n    errorFetchDoc: \"Business model document not found.\",\n    errorFetchDetails: \"Error fetching business model details.\",\n    errorSaving: \"Error saving modifications.\",\n    errorFetchOriginal: \"Error fetching original data.\",\n    copyright: \"All Rights Reserved ©\",\n    // Placeholders for textarea\n    partnersPlaceholder: \"Who are your key partners?\",\n    activitiesPlaceholder: \"What key activities does your business require?\",\n    valuePlaceholder: \"What value do you provide to your customers?\",\n    relationshipsPlaceholder: \"How do you interact with your customers?\",\n    segmentsPlaceholder: \"Who are your main customers?\",\n    resourcesPlaceholder: \"What key resources does your business need?\",\n    channelsPlaceholder: \"How do you reach your customers?\",\n    costPlaceholder: \"What are the main costs in your business model?\",\n    revenuePlaceholder: \"How do customers pay? What are the revenue sources?\"\n  },\n  ar: {\n    pageTitle: \"نموذج العمل التجاري\",\n    loading: \"جارٍ التحميل\",\n    lastUpdated: \"آخر تحديث:\",\n    keyPartners: \"الشراكات الرئيسية\",\n    keyActivities: \"الأنشطة الرئيسية\",\n    valueProposition: \"القيمة المقترحة\",\n    customerRelationships: \"علاقات العملاء\",\n    customerSegments: \"شرائح العملاء\",\n    keyResources: \"الموارد الرئيسية\",\n    channels: \"قنوات التوزيع\",\n    costStructure: \"هيكل التكاليف\",\n    revenueStreams: \"مصادر الإيرادات\",\n    editContent: \"تعديل المحتوى\",\n    exportPDF: \"تصدير PDF\",\n    saveChanges: \"حفظ التعديلات\",\n    saving: \"جاري الحفظ...\",\n    cancel: \"إلغاء\",\n    success: \"تم حفظ التغييرات بنجاح\",\n    errorFetchModel: \"لم يتم العثور على معرف النموذج.\",\n    errorFetchDoc: \"لم يتم العثور على وثيقة نموذج العمل.\",\n    errorFetchDetails: \"حدث خطأ أثناء جلب تفاصيل نموذج العمل.\",\n    errorSaving: \"حدث خطأ أثناء حفظ التعديلات.\",\n    errorFetchOriginal: \"حدث خطأ أثناء جلب البيانات الأصلية.\",\n    copyright: \"جميع الحقوق محفوظة ©\",\n    // Placeholders for textarea\n    partnersPlaceholder: \"من هم شركاؤك الرئيسيون؟\",\n    activitiesPlaceholder: \"ما هي الأنشطة الرئيسية التي يتطلبها عملك؟\",\n    valuePlaceholder: \"ما هي القيمة التي تقدمها لعملائك؟\",\n    relationshipsPlaceholder: \"كيف تتفاعل مع عملائك؟\",\n    segmentsPlaceholder: \"من هم عملاؤك الرئيسيون؟\",\n    resourcesPlaceholder: \"ما هي الموارد الرئيسية التي يحتاجها عملك؟\",\n    channelsPlaceholder: \"كيف تصل إلى عملائك؟\",\n    costPlaceholder: \"ما هي التكاليف الرئيسية في نموذج عملك؟\",\n    revenuePlaceholder: \"كيف يدفع عملاؤك؟ ما هي مصادر الإيرادات؟\"\n  }\n};\n\nconst BusinessModelResult = () => {\n  const location = useLocation();\n  const { model_id } = location.state || {};\n  const navigate = useNavigate();\n\n  const [language, setLanguage] = useState(() => {\n    return localStorage.getItem('app-language') || 'en'; // Default to English\n  });\n\n  const [bmcData, setBmcData] = useState({\n    Key_Partners: \"\",\n    Key_Activities: \"\",\n    Key_Resources: \"\",\n    Value_Proposition: \"\",\n    Customer_Relationships: \"\",\n    Channels: \"\",\n    Customer_Segments: \"\",\n    Cost_Structure: \"\",\n    Revenue_Streams: \"\",\n  });\n  const [loading, setLoading] = useState(true);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n\n  // Translations object for current language\n  const t = translations[language];\n\n  // Microsoft Translator API implementation\n  const subscriptionKey = \"6sI4sDyz7hl0lTJ8LKFISSftatGeBshi2FKqiRKWua0YMft2B4ZKJQQJ99BDACFcvJRXJ3w3AAAbACOGlUjA\";\n  const endpoint = \"https://api.cognitive.microsofttranslator.com/translate?api-version=3.0\";\n  const region = \"qatarcentral\";\n\n  const translateText = async (text, targetLanguage) => {\n    if (!text) return targetLanguage === 'ar' ? \"لا يوجد\" : \"N/A\";\n\n    try {\n      const response = await fetch(endpoint + `&to=${targetLanguage}`, {\n        method: \"POST\",\n        headers: {\n          \"Ocp-Apim-Subscription-Key\": subscriptionKey,\n          \"Ocp-Apim-Subscription-Region\": region,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify([{ text }]),\n      });\n\n      if (!response.ok) {\n        console.error(`Translation API error: ${response.status} - ${await response.text()}`);\n        return targetLanguage === 'ar' ? \"لا يوجد\" : \"N/A\";\n      }\n\n      const data = await response.json();\n      return data[0].translations[0].text || (targetLanguage === 'ar' ? \"لا يوجد\" : \"N/A\");\n    } catch (error) {\n      console.error(\"Error during translation:\", error);\n      return targetLanguage === 'ar' ? \"لا يوجد\" : \"N/A\";\n    }\n  };\n\n  // Apply these styles in your component\n  useEffect(() => {\n    document.documentElement.dir = language === 'ar' ? 'rtl' : 'ltr';\n    localStorage.setItem('app-language', language);\n\n    // Force the direction on individual blocks for extra certainty\n    const blocks = document.querySelectorAll('.bmc-block');\n    blocks.forEach(block => {\n      block.style.direction = language === 'en' ? 'ltr' : 'rtl';\n      block.style.textAlign = language === 'en' ? 'left' : 'right';\n    });\n\n    // Refetch data when language changes\n    if (model_id) {\n      fetchBMC();\n    }\n  }, [language]);\n\n  // Function to fetch business model data based on current language\n  const fetchBMC = async () => {\n    if (!model_id) {\n      setError({ message: t.errorFetchModel });\n      setLoading(false);\n      return;\n    }\n\n    setLoading(true);\n    setError(null); // Clear any previous errors\n\n    try {\n      // First check if the document exists in the primary \"BusinessModel\" collection\n      const englishModelRef = doc(db, \"BusinessModel\", model_id);\n      const englishModelDoc = await getDoc(englishModelRef);\n\n      if (!englishModelDoc.exists()) {\n        setError({ message: t.errorFetchDoc });\n        setLoading(false);\n        return;\n      }\n\n      const englishData = englishModelDoc.data();\n\n      if (language === 'en') {\n        // User wants English content - load from main BusinessModel collection\n        setBmcData({\n          Key_Partners: englishData.Key_Participation || \"\",\n          Key_Activities: englishData.Key_Activities || \"\",\n          Key_Resources: englishData.Key_Resources || \"\",\n          Value_Proposition: englishData.Value_Proposition || \"\",\n          Customer_Relationships: englishData.Customer_Relationships || \"\",\n          Channels: englishData.Channels || \"\",\n          Customer_Segments: englishData.Customer_Segments || \"\",\n          Cost_Structure: (englishData.Cost_Type || \"\") + \" \" + (englishData.Approximation_Cost || \"\"),\n          Revenue_Streams: (englishData.Revenue_Type || \"\") + \" \" + (englishData.Approximation_Revenue || \"\"),\n        });\n\n        if (englishData.lastUpdated) {\n          setLastUpdated(new Date(englishData.lastUpdated.toDate()));\n        }\n      } else {\n        // User wants Arabic content - check if Arabic translation exists\n        const arabicModelRef = doc(db, \"BusinessModel_arabic\", model_id);\n        const arabicModelDoc = await getDoc(arabicModelRef);\n\n        if (arabicModelDoc.exists()) {\n          // Arabic translation exists, use it\n          const arabicData = arabicModelDoc.data();\n          setBmcData({\n            Key_Partners: arabicData.Key_Partners || \"\",\n            Key_Activities: arabicData.Key_Activities || \"\",\n            Key_Resources: arabicData.Key_Resources || \"\",\n            Value_Proposition: arabicData.Value_Proposition || \"\",\n            Customer_Relationships: arabicData.Customer_Relationships || \"\",\n            Channels: arabicData.Channels || \"\",\n            Customer_Segments: arabicData.Customer_Segments || \"\",\n            Cost_Structure: arabicData.Cost_Structure || \"\",\n            Revenue_Streams: arabicData.Revenue_Streams || \"\",\n          });\n\n          if (arabicData.lastUpdated) {\n            setLastUpdated(new Date(arabicData.lastUpdated.toDate()));\n          }\n        } else {\n          // Arabic translation doesn't exist yet, create it from English data\n          console.log(\"Creating Arabic translation from English data...\");\n\n          try {\n            // Translate each field from English to Arabic\n            const arabicData = {\n              Key_Partners: await translateText(englishData.Key_Participation || \"\", \"ar\"),\n              Key_Activities: await translateText(englishData.Key_Activities || \"\", \"ar\"),\n              Key_Resources: await translateText(englishData.Key_Resources || \"\", \"ar\"),\n              Value_Proposition: await translateText(englishData.Value_Proposition || \"\", \"ar\"),\n              Customer_Relationships: await translateText(englishData.Customer_Relationships || \"\", \"ar\"),\n              Channels: await translateText(englishData.Channels || \"\", \"ar\"),\n              Customer_Segments: await translateText(englishData.Customer_Segments || \"\", \"ar\"),\n              Cost_Structure: await translateText((englishData.Cost_Type || \"\") + \" \" + (englishData.Approximation_Cost || \"\"), \"ar\"),\n              Revenue_Streams: await translateText((englishData.Revenue_Type || \"\") + \" \" + (englishData.Approximation_Revenue || \"\"), \"ar\"),\n              lastUpdated: englishData.lastUpdated || new Date()\n            };\n\n            // Set the data in state\n            setBmcData(arabicData);\n\n            if (englishData.lastUpdated) {\n              setLastUpdated(new Date(englishData.lastUpdated.toDate()));\n            }\n\n            // Create the Arabic document with the same ID\n            await setDoc(arabicModelRef, arabicData);\n            console.log(\"Arabic translation created successfully\");\n          } catch (translationError) {\n            console.error(\"Error during translation process:\", translationError);\n            setError({ message: \"Error creating Arabic translation: \" + translationError.message });\n          }\n        }\n      }\n    } catch (err) {\n      console.error(\"Error fetching BMC details:\", err);\n      setError({ message: t.errorFetchDetails + \" \" + err.message });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initial data load\n  useEffect(() => {\n    if (model_id) {\n      fetchBMC();\n    }\n  }, [model_id]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setBmcData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSave = async () => {\n    if (!model_id) return;\n    setIsSaving(true);\n    setError(null);\n\n    try {\n      const now = new Date();\n\n      if (language === 'ar') {\n        // Save the Arabic data\n        const arabicModelRef = doc(db, \"BusinessModel_arabic\", model_id);\n\n        // Update Arabic document\n        await updateDoc(arabicModelRef, {\n          Key_Partners: bmcData.Key_Partners,\n          Key_Activities: bmcData.Key_Activities,\n          Key_Resources: bmcData.Key_Resources,\n          Value_Proposition: bmcData.Value_Proposition,\n          Customer_Relationships: bmcData.Customer_Relationships,\n          Channels: bmcData.Channels,\n          Customer_Segments: bmcData.Customer_Segments,\n          Cost_Structure: bmcData.Cost_Structure,\n          Revenue_Streams: bmcData.Revenue_Streams,\n          lastUpdated: now\n        });\n\n        // Translate back to English and update the main collection\n        const englishModelRef = doc(db, \"BusinessModel\", model_id);\n\n        // Translate Arabic content to English\n        const englishData = {\n          Key_Participation: await translateText(bmcData.Key_Partners, \"en\"),\n          Key_Activities: await translateText(bmcData.Key_Activities, \"en\"),\n          Key_Resources: await translateText(bmcData.Key_Resources, \"en\"),\n          Value_Proposition: await translateText(bmcData.Value_Proposition, \"en\"),\n          Customer_Relationships: await translateText(bmcData.Customer_Relationships, \"en\"),\n          Channels: await translateText(bmcData.Channels, \"en\"),\n          Customer_Segments: await translateText(bmcData.Customer_Segments, \"en\"),\n          // For cost and revenue, we need to handle the splitting\n          Cost_Type: (await translateText(bmcData.Cost_Structure, \"en\")).split(\" \")[0] || \"\",\n          Approximation_Cost: (await translateText(bmcData.Cost_Structure, \"en\")).split(\" \")[1] || \"\",\n          Revenue_Type: (await translateText(bmcData.Revenue_Streams, \"en\")).split(\" \")[0] || \"\",\n          Approximation_Revenue: (await translateText(bmcData.Revenue_Streams, \"en\")).split(\" \")[1] || \"\",\n          lastUpdated: now\n        };\n\n        await updateDoc(englishModelRef, englishData);\n      } else {\n        // We're in English mode\n        const englishModelRef = doc(db, \"BusinessModel\", model_id);\n\n        // Update English document\n        const dataToUpdate = {\n          Key_Participation: bmcData.Key_Partners,\n          Key_Activities: bmcData.Key_Activities,\n          Key_Resources: bmcData.Key_Resources,\n          Value_Proposition: bmcData.Value_Proposition,\n          Customer_Relationships: bmcData.Customer_Relationships,\n          Channels: bmcData.Channels,\n          Customer_Segments: bmcData.Customer_Segments,\n          Cost_Type: bmcData.Cost_Structure.split(\" \")[0] || \"\",\n          Approximation_Cost: bmcData.Cost_Structure.split(\" \")[1] || \"\",\n          Revenue_Type: bmcData.Revenue_Streams.split(\" \")[0] || \"\",\n          Approximation_Revenue: bmcData.Revenue_Streams.split(\" \")[1] || \"\",\n          lastUpdated: now\n        };\n\n        await updateDoc(englishModelRef, dataToUpdate);\n\n        // Update or create the Arabic translation\n        const arabicModelRef = doc(db, \"BusinessModel_arabic\", model_id);\n\n        // Translate English content to Arabic\n        const arabicData = {\n          Key_Partners: await translateText(bmcData.Key_Partners, \"ar\"),\n          Key_Activities: await translateText(bmcData.Key_Activities, \"ar\"),\n          Key_Resources: await translateText(bmcData.Key_Resources, \"ar\"),\n          Value_Proposition: await translateText(bmcData.Value_Proposition, \"ar\"),\n          Customer_Relationships: await translateText(bmcData.Customer_Relationships, \"ar\"),\n          Channels: await translateText(bmcData.Channels, \"ar\"),\n          Customer_Segments: await translateText(bmcData.Customer_Segments, \"ar\"),\n          Cost_Structure: await translateText(bmcData.Cost_Structure, \"ar\"),\n          Revenue_Streams: await translateText(bmcData.Revenue_Streams, \"ar\"),\n          lastUpdated: now\n        };\n\n        // Try to get the Arabic document first\n        const arabicDoc = await getDoc(arabicModelRef);\n\n        if (arabicDoc.exists()) {\n          // Update existing Arabic document\n          await updateDoc(arabicModelRef, arabicData);\n        } else {\n          // Create new Arabic document\n          await setDoc(arabicModelRef, arabicData);\n        }\n      }\n\n      setLastUpdated(now);\n      setIsEditing(false);\n\n      // Show success message\n      const successMsg = document.createElement('div');\n      successMsg.className = 'success-msg';\n      successMsg.innerHTML = t.success;\n      const bmcCanvas = document.querySelector('.bmc-canvas');\n      if (bmcCanvas) {\n        bmcCanvas.prepend(successMsg);\n        setTimeout(() => {\n          if (successMsg.parentNode) {\n            successMsg.parentNode.removeChild(successMsg);\n          }\n        }, 3000);\n      }\n    } catch (err) {\n      console.error(\"Error saving adjustments:\", err);\n      setError({ message: t.errorSaving + \" \" + err.message });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const handleCancel = () => {\n    fetchBMC(); // This will reload the data from the correct language collection\n    setIsEditing(false);\n  };\n\n  const formatDate = (date) => {\n    if (!date) return \"\";\n    return date.toLocaleDateString(language === 'ar' ? 'ar-SA' : 'en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const handleExport = () => {\n    window.print();\n  };\n\n  const handleLanguageChange = (newLanguage) => {\n    setLanguage(newLanguage);\n  };\n\n  return (\n    <div className=\"bm-result-page\">\n      <Header\n        showNotifications={true}\n        showUserIcon={true}\n        showMobileMenu={false}\n        showLanguageToggle={true}\n        currentLanguage={language}\n        onLanguageChange={handleLanguageChange}\n      />\n\n      <img className=\"SmallSqrs1\" alt={language === 'ar' ? \"زخرفة\" : \"Decoration\"} src={SmallSqrs1} />\n      <img className=\"SmallSqrs2\" alt={language === 'ar' ? \"زخرفة\" : \"Decoration\"} src={SmallSqrs2} />\n\n      <h1>{t.pageTitle}</h1>\n\n      {loading ? (\n        <div className=\"loading\">{t.loading}</div>\n      ) : (\n        <div className=\"bmc-canvas\" dir={language === 'en' ? 'ltr' : 'rtl'} style={{ direction: language === 'en' ? 'ltr' : 'rtl' }}>\n          {error && <div className=\"error-msg\">{error.message}</div>}\n          {lastUpdated && !isEditing && (\n            <div className=\"last-updated\">\n              {t.lastUpdated} {formatDate(lastUpdated)}\n            </div>\n          )}\n\n          {/* Top Section */}\n          <div className=\"bmc-top\" dir={language === 'en' ? 'ltr' : 'rtl'} style={{ direction: language === 'en' ? 'ltr' : 'rtl', textAlign: language === 'en' ? 'left' : 'right' }}>\n            <div className=\"bmc-block key-partnerships\" style={{ direction: language === 'en' ? 'ltr' : 'rtl', textAlign: language === 'en' ? 'left' : 'right' }}>\n              <h3 style={{ textAlign: 'center' }}>{t.keyPartners}</h3>\n              {isEditing ? (\n                <textarea\n                  name=\"Key_Partners\"\n                  value={bmcData.Key_Partners}\n                  onChange={handleChange}\n                  placeholder={t.partnersPlaceholder}\n                />\n              ) : (\n                <p>{bmcData.Key_Partners}</p>\n              )}\n            </div>\n\n            <div className=\"bmc-block key-activities\" style={{ direction: language === 'en' ? 'ltr' : 'rtl', textAlign: language === 'en' ? 'left' : 'right' }}>\n              <h3 style={{ textAlign: 'center' }}>{t.keyActivities}</h3>\n              {isEditing ? (\n                <textarea\n                  name=\"Key_Activities\"\n                  value={bmcData.Key_Activities}\n                  onChange={handleChange}\n                  placeholder={t.activitiesPlaceholder}\n                />\n              ) : (\n                <p>{bmcData.Key_Activities}</p>\n              )}\n            </div>\n\n            <div className=\"bmc-block value-propositions\" style={{ direction: language === 'en' ? 'ltr' : 'rtl', textAlign: language === 'en' ? 'left' : 'right' }}>\n              <h3 style={{ textAlign: 'center' }}>{t.valueProposition}</h3>\n              {isEditing ? (\n                <textarea\n                  name=\"Value_Proposition\"\n                  value={bmcData.Value_Proposition}\n                  onChange={handleChange}\n                  placeholder={t.valuePlaceholder}\n                />\n              ) : (\n                <p>{bmcData.Value_Proposition}</p>\n              )}\n            </div>\n\n            <div className=\"bmc-block customer-relationships\" style={{ direction: language === 'en' ? 'ltr' : 'rtl', textAlign: language === 'en' ? 'left' : 'right' }}>\n              <h3 style={{ textAlign: 'center' }}>{t.customerRelationships}</h3>\n              {isEditing ? (\n                <textarea\n                  name=\"Customer_Relationships\"\n                  value={bmcData.Customer_Relationships}\n                  onChange={handleChange}\n                  placeholder={t.relationshipsPlaceholder}\n                />\n              ) : (\n                <p>{bmcData.Customer_Relationships}</p>\n              )}\n            </div>\n\n            <div className=\"bmc-block customer-segments\" style={{ direction: language === 'en' ? 'ltr' : 'rtl', textAlign: language === 'en' ? 'left' : 'right' }}>\n              <h3 style={{ textAlign: 'center' }}>{t.customerSegments}</h3>\n              {isEditing ? (\n                <textarea\n                  name=\"Customer_Segments\"\n                  value={bmcData.Customer_Segments}\n                  onChange={handleChange}\n                  placeholder={t.segmentsPlaceholder}\n                />\n              ) : (\n                <p>{bmcData.Customer_Segments}</p>\n              )}\n            </div>\n\n            <div className=\"bmc-block key-resources\" style={{ direction: language === 'en' ? 'ltr' : 'rtl', textAlign: language === 'en' ? 'left' : 'right' }}>\n              <h3 style={{ textAlign: 'center' }}>{t.keyResources}</h3>\n              {isEditing ? (\n                <textarea\n                  name=\"Key_Resources\"\n                  value={bmcData.Key_Resources}\n                  onChange={handleChange}\n                  placeholder={t.resourcesPlaceholder}\n                />\n              ) : (\n                <p>{bmcData.Key_Resources}</p>\n              )}\n            </div>\n\n            <div className=\"bmc-block channels\" style={{ direction: language === 'en' ? 'ltr' : 'rtl', textAlign: language === 'en' ? 'left' : 'right' }}>\n              <h3 style={{ textAlign: 'center' }}>{t.channels}</h3>\n              {isEditing ? (\n                <textarea\n                  name=\"Channels\"\n                  value={bmcData.Channels}\n                  onChange={handleChange}\n                  placeholder={t.channelsPlaceholder}\n                />\n              ) : (\n                <p>{bmcData.Channels}</p>\n              )}\n            </div>\n          </div>\n\n          {/* Bottom Section */}\n          <div className=\"bmc-bottom\" dir={language === 'en' ? 'ltr' : 'rtl'} style={{ direction: language === 'en' ? 'ltr' : 'rtl', textAlign: language === 'en' ? 'left' : 'right' }}>\n            <div className=\"bmc-block cost-structure\" style={{ direction: language === 'en' ? 'ltr' : 'rtl', textAlign: language === 'en' ? 'left' : 'right' }}>\n              <h3 style={{ textAlign: 'center' }}>{t.costStructure}</h3>\n              {isEditing ? (\n                <textarea\n                  name=\"Cost_Structure\"\n                  value={bmcData.Cost_Structure}\n                  onChange={handleChange}\n                  placeholder={t.costPlaceholder}\n                />\n              ) : (\n                <p>{bmcData.Cost_Structure}</p>\n              )}\n            </div>\n\n            <div className=\"bmc-block revenue-streams\" style={{ direction: language === 'en' ? 'ltr' : 'rtl', textAlign: language === 'en' ? 'left' : 'right' }}>\n              <h3 style={{ textAlign: 'center' }}>{t.revenueStreams}</h3>\n              {isEditing ? (\n                <textarea\n                  name=\"Revenue_Streams\"\n                  value={bmcData.Revenue_Streams}\n                  onChange={handleChange}\n                  placeholder={t.revenuePlaceholder}\n                />\n              ) : (\n                <p>{bmcData.Revenue_Streams}</p>\n              )}\n            </div>\n          </div>\n\n          {/* Edit Mode Controls */}\n          <div className=\"edit-btn-container\" dir={language === 'en' ? 'ltr' : 'rtl'}>\n            {isEditing ? (\n              <>\n                <button\n                  className=\"edit-btn save-btn\"\n                  onClick={handleSave}\n                  disabled={isSaving}\n                >\n                  {isSaving ? (\n                    <>\n                      <span className=\"saving-indicator\"></span>\n                      {t.saving}\n                    </>\n                  ) : (\n                    t.saveChanges\n                  )}\n                </button>\n                <button\n                  className=\"edit-btn cancel-btn\"\n                  onClick={handleCancel}\n                  disabled={isSaving}\n                >\n                  {t.cancel}\n                </button>\n              </>\n            ) : (\n              <>\n                <button className=\"edit-btn\" onClick={() => setIsEditing(true)}>\n                  {t.editContent}\n                </button>\n                <button className=\"edit-btn export-btn\" onClick={handleExport}>\n                  {t.exportPDF}\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n\n      <footer className=\"bmc-footer\">\n        <div className=\"footer-text\">\n          {t.copyright} {new Date().getFullYear()}\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default BusinessModelResult;","import React, { useEffect } from 'react';\nimport './NotificationSystem.css';\n\n/**\n * NotificationSystem Component\n * \n * A reusable notification component that displays various types of notifications\n * with automatic dismissal and optional actions.\n * \n * @param {Object} props\n * @param {Array} props.notifications - Array of notification objects\n * @param {Function} props.removeNotification - Function to remove a notification\n */\nconst NotificationSystem = ({ notifications = [], removeNotification }) => {\n  return (\n    <div className=\"notification-container\">\n      {notifications.map((notification) => (\n        <Notification\n          key={notification.id}\n          notification={notification}\n          removeNotification={removeNotification}\n        />\n      ))}\n    </div>\n  );\n};\n\n/**\n * Individual Notification Component\n */\nconst Notification = ({ notification, removeNotification }) => {\n  const { id, type, message, duration = 5000, action } = notification;\n\n  // Auto-dismiss notification after duration\n  useEffect(() => {\n    if (duration) {\n      const timer = setTimeout(() => {\n        removeNotification(id);\n      }, duration);\n\n      return () => clearTimeout(timer);\n    }\n  }, [id, duration, removeNotification]);\n\n  // Get appropriate icon based on notification type\n  const getIcon = () => {\n    switch (type) {\n      case 'success':\n        return <i className=\"fas fa-check-circle\"></i>;\n      case 'error':\n        return <i className=\"fas fa-exclamation-circle\"></i>;\n      case 'warning':\n        return <i className=\"fas fa-exclamation-triangle\"></i>;\n      case 'info':\n      default:\n        return <i className=\"fas fa-info-circle\"></i>;\n    }\n  };\n\n  return (\n    <div className={`notification notification-${type}`}>\n      <div className=\"notification-icon\">\n        {getIcon()}\n      </div>\n      <div className=\"notification-content\">\n        <p>{message}</p>\n        {action && (\n          <button\n            className=\"notification-action\"\n            onClick={() => {\n              action.onClick();\n              if (action.dismissOnClick) {\n                removeNotification(id);\n              }\n            }}\n          >\n            {action.label}\n          </button>\n        )}\n      </div>\n      <button\n        className=\"notification-close\"\n        onClick={() => removeNotification(id)}\n        aria-label=\"Close notification\"\n      >\n        <i className=\"fas fa-times\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default NotificationSystem;","import React, { createContext, useContext, useState, useCallback } from 'react';\nimport NotificationSystem from './NotificationSystem';\n\n// Create the notification context\nconst NotificationContext = createContext();\n\n/**\n * NotificationProvider component\n * Provides notification functionality to the entire app\n */\nexport const NotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  // Add a new notification\n  const addNotification = useCallback((notification) => {\n    const id = Date.now().toString();\n    setNotifications(prev => [...prev, { id, ...notification }]);\n    return id;\n  }, []);\n\n  // Remove a notification by id\n  const removeNotification = useCallback((id) => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  }, []);\n\n  // Helper methods for different notification types\n  const showSuccess = useCallback((message, options = {}) => {\n    return addNotification({ type: 'success', message, ...options });\n  }, [addNotification]);\n\n  const showError = useCallback((message, options = {}) => {\n    return addNotification({ type: 'error', message, ...options });\n  }, [addNotification]);\n\n  const showWarning = useCallback((message, options = {}) => {\n    return addNotification({ type: 'warning', message, ...options });\n  }, [addNotification]);\n\n  const showInfo = useCallback((message, options = {}) => {\n    return addNotification({ type: 'info', message, ...options });\n  }, [addNotification]);\n\n  // Create value object with all notification methods\n  const value = {\n    notifications,\n    addNotification,\n    removeNotification,\n    showSuccess,\n    showError,\n    showWarning,\n    showInfo\n  };\n\n  return (\n    <NotificationContext.Provider value={value}>\n      {children}\n      <NotificationSystem \n        notifications={notifications} \n        removeNotification={removeNotification} \n      />\n    </NotificationContext.Provider>\n  );\n};\n\n// Custom hook to use the notification context\nexport const useNotification = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};\n\nexport default NotificationContext;","// BusinessModelPage.js\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./BusinessModelPage.css\";\nimport SmallSqrs1 from \"./assets/SmallSqrs1.svg\";\nimport SmallSqrs2 from \"./assets/SmallSqrs2.svg\";\nimport BMLOGO from \"./assets/BMLOGO.svg\";\nimport { collection, getDocs, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport { useNotification } from \"./NotificationContext\";\nimport { ProcessingStatus } from \"./ProcessingStatus\";\nimport Header from \"./Header\";\n\n// Translations for UI elements\nconst translations = {\n  en: {\n    pageTitle: \"Building a Business Model\",\n    pageSubtitle: \"Help us understand more details by filling out the following:\",\n    industryLabel: \"Company Technical Field:\",\n    sizeLabel: \"Number of Company Employees:\",\n    revenueLabel: \"Revenue Sources:\",\n    selectOption: \"Choose an option\",\n    employeeCount: \"Choose employee count\",\n    revenuePlaceholder: \"Enter revenue sources\",\n    back: \"Back\",\n    next: \"Next\",\n    analyze: \"Analyze Model\",\n    loadingText: \"Processing data...\",\n    requiredField: \"*\",\n    industryError: \"Please select the company field\",\n    sizeError: \"Please select the number of employees\",\n    revenueError: \"Please enter revenue sources\",\n    successMessage: \"Business model request submitted successfully. You will be notified when the model is complete.\",\n    dashboardAction: \"Go to Dashboard\",\n    // Industry options\n    industryOptions: {\n      CyberSecurity: \"Cyber Security\",\n      Fintech: \"Fintech\",\n      games: \"Games\",\n      WebDevelopment: \"Web Development\",\n      AI: \"Artificial Intelligence\",\n      Telecommunications: \"Telecommunications\",\n      CloudComputing: \"Cloud Computing\",\n      DataAnalytics: \"Data Analytics\",\n      MobileApps: \"Mobile Apps\",\n      Ecommerce: \"E-commerce\",\n      Blockchain: \"Blockchain\",\n      IoT: \"Internet of Things\",\n      VR_AR: \"Virtual & Augmented Reality\",\n      SoftwareDevelopment: \"Software Development\",\n      Hardware: \"Hardware\",\n      Biotech: \"Biotechnology\",\n      Robotics: \"Robotics\",\n      EdTech: \"Educational Technology\",\n      HealthTech: \"Health Technology\"\n    },\n    // Company size options\n    sizeOptions: {\n      \"1-10\": \"1-10\",\n      \"11-20\": \"11-20\",\n      \"21-30\": \"21-30\",\n      \"30+\": \"30+\"\n    }\n  },\n  ar: {\n    pageTitle: \"بنــاء نــموذج عمــل\",\n    pageSubtitle: \"ساعدنا لمعرفة تفاصيل أكثر، بتعبئة التالي:\",\n    industryLabel: \"مجال الشركة التقني:\",\n    sizeLabel: \"أعداد موظفين الشركة:\",\n    revenueLabel: \"مصادر الإيرادات:\",\n    selectOption: \"اختر المجال\",\n    employeeCount: \"اختر عدد الموظفين\",\n    revenuePlaceholder: \"أدخل مصادر الإيرادات\",\n    back: \"العودة\",\n    next: \"التالي\",\n    analyze: \"تحليل النموذج\",\n    loadingText: \"جاري معالجة البيانات...\",\n    requiredField: \"*\",\n    industryError: \"يرجى اختيار مجال الشركة\",\n    sizeError: \"يرجى اختيار عدد الموظفين\",\n    revenueError: \"يرجى إدخال مصادر الإيرادات\",\n    successMessage: \"تم تقديم طلب نموذج العمل بنجاح. سيتم إعلامك عند اكتمال النموذج.\",\n    dashboardAction: \"الذهاب للوحة القيادة\",\n    // Industry options - Arabic translations\n    industryOptions: {\n      CyberSecurity: \"أمن سبراني\",\n      Fintech: \"فنتك\",\n      games: \"الألعاب\",\n      WebDevelopment: \"تطوير الويب\",\n      AI: \"الذكاء الاصطناعي\",\n      Telecommunications: \"الاتصالات\",\n      CloudComputing: \"الحوسبة السحابية\",\n      DataAnalytics: \"تحليلات البيانات\",\n      MobileApps: \"تطبيقات الجوال\",\n      Ecommerce: \"التجارة الإلكترونية\",\n      Blockchain: \"بلوك تشين\",\n      IoT: \"إنترنت الأشياء\",\n      VR_AR: \"الواقع الافتراضي والمعزز\",\n      SoftwareDevelopment: \"تطوير البرمجيات\",\n      Hardware: \"الأجهزة\",\n      Biotech: \"التكنولوجيا الحيوية\",\n      Robotics: \"الروبوتات\",\n      EdTech: \"تكنولوجيا التعليم\",\n      HealthTech: \"تكنولوجيا الصحة\"\n    },\n    // Company size options - same in both languages\n    sizeOptions: {\n      \"1-10\": \"1-10\",\n      \"11-20\": \"11-20\",\n      \"21-30\": \"21-30\",\n      \"30+\": \"30+\"\n    }\n  }\n};\n\nconst BusinessModelPage = () => {\n  const [currentQuestion, setCurrentQuestion] = useState(1);\n  const [formData, setFormData] = useState({\n    Industry: \"\",\n    CompanySize: \"\",\n    RevenueSources: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [fieldErrors, setFieldErrors] = useState({});\n  const [fadeIn, setFadeIn] = useState(true);\n  const navigate = useNavigate();\n  const { showSuccess, showError, showInfo } = useNotification();\n\n  // Add language state\n  const [language, setLanguage] = useState(() => {\n    return localStorage.getItem('app-language') || 'en'; // Default to English\n  });\n\n  // Get translations for current language\n  const t = translations[language];\n\n  // Update document direction when language changes\n  useEffect(() => {\n    document.documentElement.dir = language === 'ar' ? 'rtl' : 'ltr';\n    localStorage.setItem('app-language', language);\n  }, [language]);\n\n  // Microsoft Translator API \n  const subscriptionKey = \"A4niYWmg25SB8gDP5PoBLrzuYe78HRLvSLynhkbzd1A5MbBBDRYZJQQJ99BDACFcvJRXJ3w3AAAbACOGvjNV\";\n  const endpoint = \"https://api.cognitive.microsofttranslator.com/translate?api-version=3.0\";\n  const region = \"qatarcentral\";\n\n  const translateText = async (text, targetLanguage) => {\n    try {\n      const response = await fetch(endpoint + `&to=${targetLanguage}`, {\n        method: \"POST\",\n        headers: {\n          \"Ocp-Apim-Subscription-Key\": subscriptionKey,\n          \"Ocp-Apim-Subscription-Region\": region,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify([{ text }]),\n      });\n\n      if (!response.ok) {\n        console.error(`Translation API error: ${response.status} - ${await response.text()}`);\n        return text;\n      }\n\n      const data = await response.json();\n      return data[0].translations[0].text;\n    } catch (error) {\n      console.error(\"Error during translation:\", error);\n      return text;\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n\n    if (fieldErrors[name]) {\n      setFieldErrors(prev => ({\n        ...prev,\n        [name]: \"\"\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const errors = {};\n\n    if (currentQuestion === 1 && !formData.Industry) {\n      errors.Industry = t.industryError;\n    }\n\n    if (currentQuestion === 2 && !formData.CompanySize) {\n      errors.CompanySize = t.sizeError;\n    }\n\n    if (currentQuestion === 3 && !formData.RevenueSources.trim()) {\n      errors.RevenueSources = t.revenueError;\n    }\n\n    setFieldErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleNext = () => {\n    if (!validateForm()) return;\n\n    setFadeIn(false);\n    setTimeout(() => {\n      setCurrentQuestion(currentQuestion + 1);\n      setFadeIn(true);\n    }, 300);\n  };\n\n  const handleBack = () => {\n    setFadeIn(false);\n    setTimeout(() => {\n      setCurrentQuestion(currentQuestion - 1);\n      setFadeIn(true);\n    }, 300);\n  };\n\n  const handleSubmit = async (e) => {\n    if (e) e.preventDefault();\n\n    if (!validateForm()) return;\n\n    setIsLoading(true);\n\n    try {\n      const userId = localStorage.getItem(\"userId\");\n      if (!userId) {\n        throw new Error(language === 'ar' ? \"لم يتم العثور على بيانات المستخدم.\" : \"User data not found.\");\n      }\n\n      const userDocRef = doc(db, \"User\", userId);\n      const userSnapshot = await getDoc(userDocRef);\n      if (!userSnapshot.exists()) {\n        throw new Error(language === 'ar' ? \"لم يتم العثور على المستخدم.\" : \"User not found.\");\n      }\n      const userData = userSnapshot.data();\n      const companyRef = userData.CompanyID;\n      if (!companyRef) {\n        throw new Error(language === 'ar' ? \"لم يتم ربط المستخدم بأي شركة.\" : \"User is not linked to any company.\");\n      }\n\n      const bmSnapshot = await getDocs(collection(db, \"BusinessModel\"));\n      const bmIds = bmSnapshot.docs.map((doc) => doc.id);\n      const existingBmNumbers = bmIds\n        .map((id) => {\n          const match = id.match(/^bm(\\d{3})$/);\n          return match ? parseInt(match[1]) : null;\n        })\n        .filter((n) => n !== null)\n        .sort((a, b) => a - b);\n      let nextBmNumber = 1;\n      for (let i = 0; i < existingBmNumbers.length; i++) {\n        if (existingBmNumbers[i] !== nextBmNumber) break;\n        nextBmNumber++;\n      }\n      const nextBmId = `bm${String(nextBmNumber).padStart(3, \"0\")}`;\n\n      const modelRef = doc(db, \"BusinessModel\", nextBmId);\n      await setDoc(modelRef, {\n        CompanyID: companyRef,\n        Status: \"pending\",\n        CreatedAt: new Date()\n      });\n\n      const inputSnapshot = await getDocs(collection(db, \"BusinessModel_UserInput\"));\n      const ids = inputSnapshot.docs.map((doc) => doc.id);\n      const existingInputNumbers = ids\n        .map((id) => {\n          const match = id.match(/^Input(\\d{3})$/);\n          return match ? parseInt(match[1]) : null;\n        })\n        .filter((n) => n !== null)\n        .sort((a, b) => a - b);\n      let nextInputNumber = 1;\n      for (let i = 0; i < existingInputNumbers.length; i++) {\n        if (existingInputNumbers[i] !== nextInputNumber) break;\n        nextInputNumber++;\n      }\n      const nextInputId = `Input${String(nextInputNumber).padStart(3, \"0\")}`;\n\n      // Handle translations based on interface language\n      let englishData = {};\n\n      if (language === 'ar') {\n        // User is inputting in Arabic, need to translate to English for both server and Firebase\n        englishData = {\n          Industry: await translateText(formData.Industry, \"en\"),\n          CompanySize: await translateText(formData.CompanySize, \"en\"),\n          RevenueSources: await translateText(formData.RevenueSources, \"en\")\n        };\n\n        // Store the translated English data in BusinessModel_UserInput\n        await setDoc(doc(db, \"BusinessModel_UserInput\", nextInputId), {\n          Industry: englishData.Industry, // Translated to English for storage\n          CompanySize: englishData.CompanySize, // Translated to English for storage\n          RevenueSources: englishData.RevenueSources, // Translated to English for storage\n          CompanyID: companyRef,\n          ModelID: modelRef,\n          createdAt: new Date(),\n        });\n      } else {\n        // User is inputting in English - no translation needed\n        englishData = {\n          Industry: formData.Industry,\n          CompanySize: formData.CompanySize,\n          RevenueSources: formData.RevenueSources\n        };\n\n        // Store the English input directly in BusinessModel_UserInput\n        await setDoc(doc(db, \"BusinessModel_UserInput\", nextInputId), {\n          Industry: formData.Industry, // Original English input\n          CompanySize: formData.CompanySize, // Original English input\n          RevenueSources: formData.RevenueSources, // Original English input\n          CompanyID: companyRef,\n          ModelID: modelRef,\n          createdAt: new Date(),\n        });\n      }\n\n      const processingId = await ProcessingStatus.createProcessingRecord({\n        type: 'business-model',\n        userId: userId,\n        modelId: nextBmId,\n        inputId: nextInputId,\n        companyId: typeof companyRef === \"string\" ? companyRef : companyRef.id\n      });\n\n      // IMPORTANT: Always send English data to server for AI processing\n      const formDataToSend = new URLSearchParams();\n      formDataToSend.append(\"user_id\", userId);\n      formDataToSend.append(\"input_id\", nextInputId);\n      formDataToSend.append(\"model_id\", nextBmId);\n      formDataToSend.append(\"Industry\", englishData.Industry); // Always send English\n      formDataToSend.append(\"CompanySize\", englishData.CompanySize); // Always send English\n      formDataToSend.append(\"RevenueSources\", englishData.RevenueSources); // Always send English\n      formDataToSend.append(\"processing_id\", processingId);\n\n      console.log(\"Sending data to server:\", Object.fromEntries(formDataToSend));\n\n      fetch(\"http://127.0.0.1:5000/generate-bm\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: formDataToSend.toString(),\n      });\n\n      showSuccess(t.successMessage, {\n        duration: 8000,\n        action: {\n          label: t.dashboardAction,\n          onClick: () => navigate(\"/dashboard\"),\n          dismissOnClick: true\n        }\n      });\n\n      navigate(\"/dashboard\");\n\n    } catch (error) {\n      console.error(\"Error saving business model input:\", error);\n      showError(error.message || (language === 'ar' ? \"حدث خطأ أثناء الحفظ. حاول مرة أخرى.\" : \"An error occurred during saving. Try again.\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const question = document.querySelector(\".question-box\");\n    if (question) {\n      question.classList.add(\"animate\");\n    }\n  }, [currentQuestion]);\n\n  // Handle language change\n  const handleLanguageChange = (newLanguage) => {\n    setLanguage(newLanguage);\n  };\n\n  return (\n    <div className=\"business-model-page\">\n      {/* Use Header with language toggle */}\n      <Header\n        showNotifications={true}\n        showUserIcon={true}\n        showMobileMenu={false}\n        showLanguageToggle={true}\n        currentLanguage={language}\n        onLanguageChange={handleLanguageChange}\n      />\n\n      <div className=\"background-elements\">\n        <img className=\"SmallSqrs1\" alt={language === 'ar' ? \"زخرفة\" : \"Decoration\"} src={SmallSqrs1} />\n        <img className=\"SmallSqrs2\" alt={language === 'ar' ? \"زخرفة\" : \"Decoration\"} src={SmallSqrs2} />\n      </div>\n\n      <div className=\"page-header\">\n        <img src={BMLOGO} alt={language === 'ar' ? \"شعار نموذج العمل\" : \"Business Model Logo\"} className=\"BM-icon\" />\n        <h1 className=\"page-title\">{t.pageTitle}</h1>\n        <p className=\"page-subtitle\">{t.pageSubtitle}</p>\n      </div>\n\n      <form className=\"form-container\" onSubmit={handleSubmit} dir={language === 'en' ? 'ltr' : 'rtl'}>\n        <div className=\"timeline\">\n          <div\n            className={`circle ${currentQuestion >= 1 ? \"active\" : \"\"}`}\n            data-step=\"1\"\n          />\n          <div className={`line ${currentQuestion >= 2 ? \"active\" : \"\"}`} />\n          <div\n            className={`circle ${currentQuestion >= 2 ? \"active\" : \"\"}`}\n            data-step=\"2\"\n          />\n          <div className={`line ${currentQuestion >= 3 ? \"active\" : \"\"}`} />\n          <div\n            className={`circle ${currentQuestion >= 3 ? \"active\" : \"\"}`}\n            data-step=\"3\"\n          />\n        </div>\n\n        {isLoading ? (\n          <div className=\"loading-indicator\">\n            <div className=\"spinner\"></div>\n            <p className=\"loading-text\">{t.loadingText}</p>\n          </div>\n        ) : (\n          <>\n            <div className={`question-box ${fadeIn ? \"fade-in\" : \"fade-out\"}`} style={{ direction: language === 'en' ? 'ltr' : 'rtl', textAlign: language === 'en' ? 'left' : 'right' }}>\n              {currentQuestion === 1 && (\n                <>\n                  <label>\n                    <span className=\"required\">{t.requiredField}</span> {t.industryLabel}\n                  </label>\n                  <select\n                    name=\"Industry\"\n                    value={formData.Industry}\n                    onChange={handleChange}\n                    aria-required=\"true\"\n                    style={{ textAlign: language === 'en' ? 'left' : 'right' }}\n                  >\n                    <option value=\"\">{t.selectOption}</option>\n                    <option value=\"CyberSecurity\">{t.industryOptions.CyberSecurity}</option>\n                    <option value=\"Fintech\">{t.industryOptions.Fintech}</option>\n                    <option value=\"games\">{t.industryOptions.games}</option>\n                    <option value=\"WebDevelopment\">{t.industryOptions.WebDevelopment}</option>\n                    <option value=\"AI\">{t.industryOptions.AI}</option>\n                    <option value=\"Telecommunications\">{t.industryOptions.Telecommunications}</option>\n                    <option value=\"CloudComputing\">{t.industryOptions.CloudComputing}</option>\n                    <option value=\"DataAnalytics\">{t.industryOptions.DataAnalytics}</option>\n                    <option value=\"MobileApps\">{t.industryOptions.MobileApps}</option>\n                    <option value=\"Ecommerce\">{t.industryOptions.Ecommerce}</option>\n                    <option value=\"Blockchain\">{t.industryOptions.Blockchain}</option>\n                    <option value=\"IoT\">{t.industryOptions.IoT}</option>\n                    <option value=\"VR_AR\">{t.industryOptions.VR_AR}</option>\n                    <option value=\"SoftwareDevelopment\">{t.industryOptions.SoftwareDevelopment}</option>\n                    <option value=\"Hardware\">{t.industryOptions.Hardware}</option>\n                    <option value=\"Biotech\">{t.industryOptions.Biotech}</option>\n                    <option value=\"Robotics\">{t.industryOptions.Robotics}</option>\n                    <option value=\"EdTech\">{t.industryOptions.EdTech}</option>\n                    <option value=\"HealthTech\">{t.industryOptions.HealthTech}</option>\n                  </select>\n                  {fieldErrors.Industry && (\n                    <div className=\"error-message\">{fieldErrors.Industry}</div>\n                  )}\n                </>\n              )}\n\n              {currentQuestion === 2 && (\n                <>\n                  <label>\n                    <span className=\"required\">{t.requiredField}</span> {t.sizeLabel}\n                  </label>\n                  <select\n                    name=\"CompanySize\"\n                    value={formData.CompanySize}\n                    onChange={handleChange}\n                    aria-required=\"true\"\n                    style={{ textAlign: language === 'en' ? 'left' : 'right' }}\n                  >\n                    <option value=\"\">{t.employeeCount}</option>\n                    <option value=\"1-10\">{t.sizeOptions['1-10']}</option>\n                    <option value=\"11-20\">{t.sizeOptions['11-20']}</option>\n                    <option value=\"21-30\">{t.sizeOptions['21-30']}</option>\n                    <option value=\"30+\">{t.sizeOptions['30+']}</option>\n                  </select>\n                  {fieldErrors.CompanySize && (\n                    <div className=\"error-message\">{fieldErrors.CompanySize}</div>\n                  )}\n                </>\n              )}\n\n              {currentQuestion === 3 && (\n                <>\n                  <label>\n                    <span className=\"required\">{t.requiredField}</span> {t.revenueLabel}\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"RevenueSources\"\n                    value={formData.RevenueSources}\n                    onChange={handleChange}\n                    placeholder={t.revenuePlaceholder}\n                    aria-required=\"true\"\n                    style={{ textAlign: language === 'en' ? 'left' : 'right' }}\n                  />\n                  {fieldErrors.RevenueSources && (\n                    <div className=\"error-message\">{fieldErrors.RevenueSources}</div>\n                  )}\n                </>\n              )}\n            </div>\n\n            <div className=\"navigation-buttons\" style={{ direction: language === 'en' ? 'ltr' : 'rtl' }}>\n              {currentQuestion > 1 && (\n                <button\n                  type=\"button\"\n                  className=\"back-btn\"\n                  onClick={handleBack}\n                  aria-label={language === 'ar' ? \"العودة للخطوة السابقة\" : \"Go back to previous step\"}\n                >\n                  {t.back}\n                </button>\n              )}\n\n              {currentQuestion < 3 ? (\n                <button\n                  type=\"button\"\n                  className=\"next-btn\"\n                  onClick={handleNext}\n                  aria-label={language === 'ar' ? \"الانتقال للخطوة التالية\" : \"Go to next step\"}\n                >\n                  {t.next}\n                </button>\n              ) : (\n                <button\n                  type=\"submit\"\n                  className=\"submit-btn\"\n                  aria-label={language === 'ar' ? \"إرسال وتحليل النموذج\" : \"Submit and analyze model\"}\n                >\n                  {t.analyze}\n                </button>\n              )}\n            </div>\n          </>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default BusinessModelPage;","import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./CA.css\";\nimport BlueBox from \"./assets/BlueBox.svg\";\nimport RedBlueBox from \"./assets/RedBlueBox.svg\";\nimport AWJLOGO from \"./assets/AWJLOGO.svg\";\nimport { collection, getDocs, doc, setDoc, query, where } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport { IoArrowBack } from 'react-icons/io5';\nimport { FaBuilding, FaFileAlt, FaCheck, FaExclamationTriangle, FaInfoCircle, FaTimes, FaUsers, FaKeycdn, FaList, FaLightbulb } from 'react-icons/fa';\n\n// Terms And Conditions Modal Component\nconst TermsModal = ({ onClose, onAccept }) => {\n    return (\n        <div className=\"modal terms-modal\" onClick={onClose}>\n            <div className=\"modal-content-terms scale-in\" onClick={(e) => e.stopPropagation()}>\n                <h3>شروط وأحكام تسجيل منشأة</h3>\n                <div className=\"terms-content\">\n                    <p>1. يجب أن تكون المنشأة مسجلة رسمياً ولديها سجل تجاري ساري المفعول.</p>\n                    <p>2. يتعهد مدير الحساب بصحة جميع البيانات المقدمة للتسجيل.</p>\n                    <p>3. يتحمل مدير الحساب مسؤولية إدارة حسابات منسوبي الشركة والإشراف عليها.</p>\n                    <p>4. يمكن للمنصة التحقق من صحة البيانات المقدمة في أي وقت.</p>\n                    <p>5. تلتزم المنشأة بالاستخدام القانوني للمنصة وفقاً للأنظمة واللوائح المحلية.</p>\n                    <p>6. يحق للمنصة إيقاف أو إلغاء حساب المنشأة في حال مخالفة الشروط والأحكام.</p>\n                    <p>7. يتعهد مدير الحساب بالحفاظ على سرية رمز الأمان وعدم مشاركته إلا مع منسوبي الشركة المصرح لهم.</p>\n                    <p>8. تلتزم المنشأة بدفع الرسوم المستحقة (إن وجدت) وفقاً للباقة المختارة.</p>\n                    <p>9. يتم تخزين بيانات المنشأة وفقاً لسياسة الخصوصية الخاصة بالمنصة.</p>\n                    <p>10. يحق للمنصة تعديل هذه الشروط والأحكام مع إشعار المنشآت المسجلة بالتغييرات.</p>\n                </div>\n                <div style={{ display: 'flex', gap: '10px', justifyContent: 'center' }}>\n                    <button onClick={onAccept} className=\"accept-terms-btn\">\n                        موافق على الشروط\n                    </button>\n                    <button onClick={onClose}>\n                        إغلاق\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n// Enhanced Error Message Component\nconst ErrorMessage = ({ message }) => {\n    return (\n        <div className=\"error-message-enhanced\">\n            <div className=\"error-icon\">\n                <FaExclamationTriangle />\n            </div>\n            <div className=\"error-text\">{message}</div>\n        </div>\n    );\n};\n\n// Notification Component\nconst Notification = ({ message, type, onClose }) => {\n    return (\n        <div className={`notification ${type} notification-animate`}>\n            <div className=\"notification-content\">\n                {type === 'error' && <FaExclamationTriangle />}\n                {type === 'success' && <FaCheck />}\n                {type === 'info' && <FaInfoCircle />}\n                <p>{message}</p>\n            </div>\n            <button onClick={onClose} className=\"close-notification\">×</button>\n        </div>\n    );\n};\n\n// Input Field Component\nconst FormField = ({\n    name,\n    label,\n    type = 'text',\n    icon,\n    value,\n    onChange,\n    onFocus,\n    onBlur,\n    placeholder,\n    error,\n    required = false,\n    readOnly = false,\n    showCheckmark = false,\n    options = null, // For select elements\n    minHeight = null, // For textarea\n    description = null, // Optional description text\n    examples = null // Optional examples\n}) => {\n    // If options are provided, render a select element\n    if (options) {\n        return (\n            <div className={`form-group ${error ? 'has-error' : ''}`}>\n                <label>\n                    {icon}\n                    {label}\n                    {required && <span className=\"required\">*</span>}\n                </label>\n                <div className=\"input-container\">\n                    <select\n                        name={name}\n                        value={value}\n                        onChange={onChange}\n                        onFocus={onFocus}\n                        onBlur={onBlur}\n                        required={required}\n                        className=\"styled-select\"\n                    >\n                        {options.map((option, index) => (\n                            <option key={index} value={option.value}>\n                                {option.label}\n                            </option>\n                        ))}\n                    </select>\n                    {error && <ErrorMessage message={error} />}\n                </div>\n                {description && <p className=\"field-description\">{description}</p>}\n                <style jsx>{`\n                    .styled-select {\n                        font-family: \"Tajawal\", sans-serif;\n                        padding: 12px 15px;\n                        border: 1px solid #e0e0e0;\n                        border-radius: 8px;\n                        font-size: 14px;\n                        color: #333;\n                        background-color: #f9f9f9;\n                        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);\n                        width: 100%;\n                        box-sizing: border-box;\n                        appearance: none;\n                        -webkit-appearance: none;\n                        -moz-appearance: none;\n                        background-image: url(\"data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23333' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e\");\n                        background-repeat: no-repeat;\n                        background-position: left 1rem center;\n                        background-size: 1em;\n                        text-align: right;\n                        direction: rtl;\n                    }\n                    \n                    .styled-select:focus {\n                        outline: none;\n                        border-color: #234069;\n                        box-shadow: 0 0 0 3px rgba(35, 64, 105, 0.2);\n                        background-color: #fff;\n                        transition: all 0.2s ease-in-out;\n                    }\n                    \n                    .styled-select:hover:not(:focus) {\n                        border-color: #234069;\n                        transition: all 0.2s ease;\n                    }\n                `}</style>\n            </div>\n        );\n    }\n\n    // If minHeight is provided, render a textarea\n    if (minHeight) {\n        return (\n            <div className={`form-group ${error ? 'has-error' : ''}`}>\n                <label>\n                    {icon}\n                    {label}\n                    {required && <span className=\"required\">*</span>}\n                </label>\n                <div className=\"input-container\">\n                    <textarea\n                        name={name}\n                        placeholder={placeholder || label}\n                        value={value}\n                        onChange={onChange}\n                        onFocus={onFocus}\n                        onBlur={onBlur}\n                        required={required}\n                        className=\"styled-textarea\"\n                        style={{ minHeight: minHeight }}\n                    />\n                    {showCheckmark && !error && <FaCheck className=\"check-icon\" />}\n                    {error && <ErrorMessage message={error} />}\n                </div>\n                {description && <p className=\"field-description\">{description}</p>}\n                {examples && (\n                    <div className=\"field-examples\">\n                        <div className=\"examples-content\">{examples}</div>\n                    </div>\n                )}\n                <style jsx>{`\n                    .styled-textarea {\n                        font-family: \"Tajawal\", sans-serif;\n                        padding: 12px 15px;\n                        border: 1px solid #e0e0e0;\n                        border-radius: 8px;\n                        font-size: 14px;\n                        color: #333;\n                        background-color: #f9f9f9;\n                        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);\n                        width: 100%;\n                        resize: vertical;\n                        box-sizing: border-box;\n                        transition: all 0.2s ease;\n                        direction: rtl;\n                    }\n                    \n                    .styled-textarea:focus {\n                        outline: none;\n                        border-color: #234069;\n                        box-shadow: 0 0 0 3px rgba(35, 64, 105, 0.2);\n                        background-color: #fff;\n                    }\n                    \n                    .styled-textarea:hover:not(:focus) {\n                        border-color: #234069;\n                    }\n                    \n                    .field-description {\n                        font-size: 12px;\n                        color: #666;\n                        margin-top: 8px;\n                        line-height: 1.5;\n                        text-align: right;\n                    }\n                    \n                    .field-examples {\n                        background-color:rgba(244, 244, 244, 0.54);\n                        border-radius: 6px;\n                        padding: 10px 15px;\n                        margin-top: 10px;\n                    }\n                    \n                    .examples-title {\n                        font-weight: 600;\n                        color: #1d3557;\n                        margin: 0 0 8px 0;\n                        font-size: 13px;\n                    }\n                    \n                    .examples-content {\n                        font-size: 12px;\n                        color: #555;\n                        line-height: 1.6;\n                    }\n                `}</style>\n            </div>\n        );\n    }\n\n    // Default: render a regular input field\n    return (\n        <div className={`form-group ${error ? 'has-error' : ''}`}>\n            <label>\n                {icon}\n                {label}\n                {required && <span className=\"required\">*</span>}\n            </label>\n            <div className=\"input-container\">\n                <input\n                    type={type}\n                    name={name}\n                    placeholder={placeholder || label}\n                    value={value}\n                    onChange={onChange}\n                    onFocus={onFocus}\n                    onBlur={onBlur}\n                    required={required}\n                    readOnly={readOnly}\n                    className={readOnly ? 'readonly' : ''}\n                    style={{ width: '100%', boxSizing: 'border-box' }}\n                />\n                {showCheckmark && !error && <FaCheck className=\"check-icon\" />}\n                {error && <ErrorMessage message={error} />}\n            </div>\n            {description && <p className=\"field-description\">{description}</p>}\n        </div>\n    );\n};\n\n// Form validation helper\nconst validateField = (field, value) => {\n    // Skip validation for empty fields (except where explicitly required)\n    if (value === null || value === undefined || value.trim() === '') {\n        return null;\n    }\n\n    switch (field) {\n        case 'companyName':\n            return value.trim().length > 2 ? null : 'يجب أن يتكون اسم الشركة من ثلاثة أحرف على الأقل';\n\n        case 'commercialRegistration':\n            return value.trim() === '' || value.trim().length >= 10 ? null : 'يجب أن يتكون السجل التجاري من 10 أرقام على الأقل';\n\n        case 'Industry':\n            return value ? null : 'يرجى اختيار نشاط الشركة';\n\n        case 'employeeCount':\n            return parseInt(value) > 0 ? null : 'يجب أن يكون عدد الموظفين أكبر من صفر';\n\n        default:\n            return null;\n    }\n};\n\nconst CreateCompanyAccount = () => {\n    // State for examples and security info visibility\n    const [showExamples, setShowExamples] = useState(false);\n    const [showSecurityInfo, setShowSecurityInfo] = useState(false);\n\n    // Translations\n    const translations = {\n        ar: {\n            requiredField: \"*\",\n            industryLabel: \"نشاط الشركة\",\n            selectOption: \"اختر النشاط\",\n            employeeCountLabel: \"عدد الموظفين\",\n            descriptionLabel: \"وصف الشركة\",\n            industryOptions: {\n                CyberSecurity: \"الأمن السيبراني\",\n                Fintech: \"التقنية المالية\",\n                games: \"الألعاب\",\n                WebDevelopment: \"تطوير الويب\",\n                AI: \"الذكاء الاصطناعي\",\n                Telecommunications: \"الاتصالات\",\n                CloudComputing: \"الحوسبة السحابية\",\n                DataAnalytics: \"تحليل البيانات\",\n                MobileApps: \"تطبيقات الجوال\",\n                Ecommerce: \"التجارة الإلكترونية\",\n                Blockchain: \"بلوكتشين\",\n                IoT: \"إنترنت الأشياء\",\n                VR_AR: \"الواقع الافتراضي والمعزز\",\n                SoftwareDevelopment: \"تطوير البرمجيات\",\n                Hardware: \"الأجهزة\",\n                Biotech: \"التقنية الحيوية\",\n                Robotics: \"الروبوتات\",\n                EdTech: \"تقنية التعليم\",\n                HealthTech: \"التقنية الصحية\"\n            }\n        },\n        en: {\n            requiredField: \"*\",\n            industryLabel: \"Company Activity\",\n            selectOption: \"Select Activity\",\n            employeeCountLabel: \"Employee Count\",\n            descriptionLabel: \"Company Description\",\n            industryOptions: {\n                CyberSecurity: \"Cyber Security\",\n                Fintech: \"Financial Technology\",\n                games: \"Games\",\n                WebDevelopment: \"Web Development\",\n                AI: \"Artificial Intelligence\",\n                Telecommunications: \"Telecommunications\",\n                CloudComputing: \"Cloud Computing\",\n                DataAnalytics: \"Data Analytics\",\n                MobileApps: \"Mobile Applications\",\n                Ecommerce: \"E-commerce\",\n                Blockchain: \"Blockchain\",\n                IoT: \"Internet of Things\",\n                VR_AR: \"Virtual/Augmented Reality\",\n                SoftwareDevelopment: \"Software Development\",\n                Hardware: \"Hardware\",\n                Biotech: \"Biotechnology\",\n                Robotics: \"Robotics\",\n                EdTech: \"Educational Technology\",\n                HealthTech: \"Health Technology\"\n            }\n        }\n    };\n\n    const [language, setLanguage] = useState('ar');\n    const t = translations[language];\n\n    const [formData, setFormData] = useState({\n        companyName: \"\",\n        commercialRegistration: \"\",\n        companyDescription: \"\",\n        Industry: \"\",\n        employeeCount: \"\",\n        termsAccepted: false,\n    });\n\n    const [securityKey, setSecurityKey] = useState(\"\");\n    const [showTermsModal, setShowTermsModal] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [activeField, setActiveField] = useState(null);\n    const [notification, setNotification] = useState(null);\n    const [formSubmitted, setFormSubmitted] = useState(false);\n    const [errors, setErrors] = useState({});\n    const firstErrorRef = useRef(null);\n    const navigate = useNavigate();\n    const userId = localStorage.getItem(\"userId\");\n\n    // Generate a unique security key that doesn't exist in any company record\n    const generateUniqueSecurityKey = async () => {\n        const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n\n        while (true) {\n            let key = \"\";\n            for (let i = 0; i < 5; i++) {\n                key += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n\n            // Check Firestore to ensure key is unique\n            const q = query(collection(db, \"Company\"), where(\"SecurityKey\", \"==\", key));\n            const querySnapshot = await getDocs(q);\n\n            if (querySnapshot.empty) {\n                return key; // ✅ Unique key found\n            }\n            // If not unique, generate a new one\n        }\n    };\n\n    // Generate a random 5-digit security key when component mounts\n    useEffect(() => {\n        document.title = \"أوج | إنشاء حساب الشركة\";\n\n        const generateKey = async () => {\n            try {\n                const uniqueKey = await generateUniqueSecurityKey();\n                setSecurityKey(uniqueKey);\n            } catch (error) {\n                console.error(\"Error generating unique security key:\", error);\n                // Fallback to simple random key if firestore query fails\n                const fallbackKey = Math.floor(10000 + Math.random() * 90000).toString();\n                setSecurityKey(fallbackKey);\n            }\n        };\n\n        generateKey();\n\n        // Validate form on data change if user has attempted submission\n        if (formSubmitted) {\n            validateForm();\n        }\n    }, [formData, formSubmitted]);\n\n    // Scroll to first error after validation\n    useEffect(() => {\n        if (Object.keys(errors).length > 0 && firstErrorRef.current) {\n            firstErrorRef.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'center'\n            });\n        }\n    }, [errors]);\n\n    const validateForm = () => {\n        const newErrors = {};\n\n        // Required fields validation\n        if (!formData.companyName) newErrors.companyName = 'حقل مطلوب';\n        if (!formData.Industry) newErrors.Industry = 'حقل مطلوب';\n        if (!formData.employeeCount) newErrors.employeeCount = 'حقل مطلوب';\n\n        // Validate each field with detailed validation\n        Object.keys(formData).forEach(field => {\n            const value = formData[field];\n            if (value && typeof value === 'string') {\n                const validation = validateField(field, value);\n                if (validation) newErrors[field] = validation;\n            }\n        });\n\n        // Terms validation\n        if (!formData.termsAccepted) {\n            newErrors.termsAccepted = 'يجب الموافقة على الشروط والأحكام';\n        }\n\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleChange = (e) => {\n        const { name, value, type, checked } = e.target;\n        setFormData(prevState => ({\n            ...prevState,\n            [name]: type === \"checkbox\" ? checked : value,\n        }));\n\n        // Clear error when field is edited\n        if (errors[name]) {\n            setErrors(prevErrors => {\n                const newErrors = { ...prevErrors };\n                delete newErrors[name];\n                return newErrors;\n            });\n        }\n\n        // Visual feedback for input\n        if (e.target && e.target.parentNode) {\n            e.target.parentNode.classList.add('input-active');\n            setTimeout(() => {\n                e.target.parentNode.classList.remove('input-active');\n            }, 300);\n        }\n    };\n\n    const handleFocus = (fieldName) => {\n        setActiveField(fieldName);\n    };\n\n    const handleBlur = (e) => {\n        const { name, value } = e.target;\n        setActiveField(null);\n\n        // Validate field on blur if it has a value\n        if (value) {\n            const validation = validateField(name, value);\n            if (validation) {\n                setErrors(prevErrors => ({ ...prevErrors, [name]: validation }));\n            }\n        }\n    };\n\n    const showNotification = (message, type) => {\n        setNotification({ message, type });\n\n        // Auto-dismiss after 5 seconds\n        setTimeout(() => {\n            setNotification(null);\n        }, 5000);\n    };\n\n    const handleTermsClick = (e) => {\n        e.preventDefault();\n        setShowTermsModal(true);\n    };\n\n    const handleAcceptTerms = () => {\n        // Use functional state update to ensure we're working with the latest state\n        setFormData(prevState => ({\n            ...prevState,\n            termsAccepted: true\n        }));\n\n        // Clear terms error if it exists\n        if (errors.termsAccepted) {\n            setErrors(prevErrors => {\n                const newErrors = { ...prevErrors };\n                delete newErrors.termsAccepted;\n                return newErrors;\n            });\n        }\n\n        setShowTermsModal(false);\n    };\n\n    const toggleSecurityInfo = () => {\n        setShowSecurityInfo(!showSecurityInfo);\n    };\n\n    const handleSubmit = async () => {\n        setFormSubmitted(true);\n\n        if (!validateForm()) {\n            showNotification(\"يرجى ملء جميع الحقول المطلوبة بشكل صحيح\", \"error\");\n            return;\n        }\n\n        setLoading(true);\n\n        try {\n            // Get all existing company IDs\n            const companiesSnapshot = await getDocs(collection(db, \"Company\"));\n            const ids = companiesSnapshot.docs.map(doc => doc.id);\n\n            const existingNumbers = ids\n                .map(id => {\n                    const match = id.match(/^c(\\d{3})$/);\n                    return match ? parseInt(match[1]) : null;\n                })\n                .filter(n => n !== null)\n                .sort((a, b) => a - b);\n\n            let nextNumber = 1;\n            for (let i = 0; i < existingNumbers.length; i++) {\n                if (existingNumbers[i] !== nextNumber) break;\n                nextNumber++;\n            }\n\n            const nextId = `c${String(nextNumber).padStart(3, \"0\")}`;\n\n            // Save company in Firestore\n            const companyRef = doc(db, \"Company\", nextId);\n            await setDoc(companyRef, {\n                CompanyName: formData.companyName,\n                CommercialRecord: formData.commercialRegistration,\n                CompDescription: formData.companyDescription,\n                Industry: formData.Industry,\n                CompanySize: parseInt(formData.employeeCount),\n                SecurityKey: securityKey,\n                ManagerID: doc(db, \"User\", userId),\n                SecurityKeyCreatedAt: new Date()\n            });\n\n            // Update user record to include company reference\n            const userRef = doc(db, \"User\", userId);\n            await setDoc(userRef, {\n                CompanyID: companyRef,\n                UserType: \"Manager\"\n            }, { merge: true });\n\n            showNotification(\"تم إنشاء حساب الشركة بنجاح!\", \"success\");\n\n            // Navigate to dashboard after successful company creation\n            setTimeout(() => {\n                navigate(\"/dashboard\");\n            }, 1500);\n\n        } catch (error) {\n            console.error(\"Error saving company:\", error);\n            showNotification(\"حدث خطأ أثناء حفظ حساب الشركة. حاول مرة أخرى.\", \"error\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"create-account-page\" style={{ minHeight: '105vh', height: 'auto' }}>\n            <IoArrowBack\n                className=\"back-arrow\"\n                onClick={() => navigate('/signin')}\n                aria-label=\"العودة إلى تسجيل الدخول\"\n            />\n\n            <div className=\"logo-container\">\n                <img\n                    className=\"Logo\"\n                    alt=\"Logo\"\n                    src={AWJLOGO}\n                />\n            </div>\n\n            <div className=\"text-wrapper slide-down\">إنشـاء حساب الشركة</div>\n\n            <img\n                className=\"BlueBox slide-in-left\"\n                alt=\"شكل هندسي أزرق\"\n                src={BlueBox}\n            />\n\n            <img\n                className=\"RedBlueBox slide-in-right\"\n                alt=\"شكل هندسي أحمر وأزرق\"\n                src={RedBlueBox}\n            />\n\n            {/* Form Container with animation */}\n            <form className=\"create-account-form slide-up\" style={{ padding: '30px' }}>\n                {/* Company information section */}\n                <FormField\n                    name=\"companyName\"\n                    label=\"اسم الشركة\"\n                    icon={<FaBuilding style={{ marginLeft: '5px' }} />}\n                    value={formData.companyName}\n                    onChange={handleChange}\n                    onFocus={() => handleFocus('companyName')}\n                    onBlur={handleBlur}\n                    error={errors.companyName}\n                    required={true}\n                />\n\n                <FormField\n                    name=\"commercialRegistration\"\n                    label=\"السجل التجاري\"\n                    icon={<FaFileAlt style={{ marginLeft: '5px' }} />}\n                    value={formData.commercialRegistration}\n                    onChange={handleChange}\n                    onFocus={() => handleFocus('commercialRegistration')}\n                    onBlur={handleBlur}\n                    error={errors.commercialRegistration}\n                    required={false}\n                    placeholder=\"أدخل رقم السجل التجاري\"\n                />\n\n                <FormField\n                    name=\"Industry\"\n                    label={t.industryLabel}\n                    icon={<FaList style={{ marginLeft: '5px' }} />}\n                    value={formData.Industry}\n                    onChange={handleChange}\n                    onFocus={() => handleFocus('Industry')}\n                    onBlur={handleBlur}\n                    error={errors.Industry}\n                    required={true}\n                    options={[\n                        { value: \"\", label: t.selectOption },\n                        { value: \"CyberSecurity\", label: t.industryOptions.CyberSecurity },\n                        { value: \"Fintech\", label: t.industryOptions.Fintech },\n                        { value: \"games\", label: t.industryOptions.games },\n                        { value: \"WebDevelopment\", label: t.industryOptions.WebDevelopment },\n                        { value: \"AI\", label: t.industryOptions.AI },\n                        { value: \"Telecommunications\", label: t.industryOptions.Telecommunications },\n                        { value: \"CloudComputing\", label: t.industryOptions.CloudComputing },\n                        { value: \"DataAnalytics\", label: t.industryOptions.DataAnalytics },\n                        { value: \"MobileApps\", label: t.industryOptions.MobileApps },\n                        { value: \"Ecommerce\", label: t.industryOptions.Ecommerce },\n                        { value: \"Blockchain\", label: t.industryOptions.Blockchain },\n                        { value: \"IoT\", label: t.industryOptions.IoT },\n                        { value: \"VR_AR\", label: t.industryOptions.VR_AR },\n                        { value: \"SoftwareDevelopment\", label: t.industryOptions.SoftwareDevelopment },\n                        { value: \"Hardware\", label: t.industryOptions.Hardware },\n                        { value: \"Biotech\", label: t.industryOptions.Biotech },\n                        { value: \"Robotics\", label: t.industryOptions.Robotics },\n                        { value: \"EdTech\", label: t.industryOptions.EdTech },\n                        { value: \"HealthTech\", label: t.industryOptions.HealthTech }\n                    ]}\n                />\n\n                <FormField\n                    name=\"employeeCount\"\n                    label={t.employeeCountLabel}\n                    type=\"number\"\n                    icon={<FaUsers style={{ marginLeft: '5px' }} />}\n                    value={formData.employeeCount}\n                    onChange={handleChange}\n                    onFocus={() => handleFocus('employeeCount')}\n                    onBlur={handleBlur}\n                    error={errors.employeeCount}\n                    required={true}\n                    placeholder=\"أدخل عدد الموظفين\"\n                />\n\n                {/* Custom Company Description Field with togglable examples */}\n                <div className=\"form-group\">\n                    <label>\n                        <FaInfoCircle style={{ marginLeft: '5px' }} />\n                        {t.descriptionLabel}\n                        <span className=\"required\">*</span>\n                        {showExamples ? (\n                            <FaLightbulb\n                                style={{\n                                    marginRight: '8px',\n                                    cursor: 'pointer',\n                                    color: '#f0a500',\n                                    fontSize: '16px',\n                                    filter: 'drop-shadow(0 0 2px rgba(240, 165, 0, 0.5))',\n                                    transition: 'all 0.3s ease'\n                                }}\n                                onClick={() => setShowExamples(!showExamples)}\n                                title=\"إخفاء الأمثلة\"\n                            />\n                        ) : (\n                            <FaLightbulb\n                                style={{\n                                    marginRight: '8px',\n                                    cursor: 'pointer',\n                                    color: '#a0a0a0',\n                                    fontSize: '16px',\n                                    transition: 'all 0.3s ease'\n                                }}\n                                onClick={() => setShowExamples(!showExamples)}\n                                title=\"عرض الأمثلة\"\n                            />\n                        )}\n                    </label>\n                    <div className=\"input-container\">\n                        <textarea\n                            name=\"companyDescription\"\n                            placeholder=\"وصف مختصر لنشاط الشركة والخدمات التي تقدمها وأهدافها المستقبلية\"\n                            value={formData.companyDescription}\n                            onChange={handleChange}\n                            onFocus={() => handleFocus('companyDescription')}\n                            onBlur={handleBlur}\n                            required={true}\n                            className=\"styled-textarea\"\n                            style={{ minHeight: \"120px\" }}\n                        />\n                        {errors.companyDescription && <ErrorMessage message={errors.companyDescription} />}\n                    </div>\n\n                    {showExamples && (\n                        <div className=\"field-examples\" style={{ animation: 'fadeIn 0.3s ease' }}>\n                            <div className=\"examples-content\">\n                                <p style={{ marginBottom: '8px' }}>\n                                    <strong>مثال جيد:</strong> شركة رائدة في مجال تطوير تطبيقات الهواتف الذكية، متخصصة في حلول التجارة الإلكترونية للشركات الصغيرة والمتوسطة. نهدف إلى تبسيط عمليات التسوق الإلكتروني.\n                                </p>\n                                <p>\n                                    <strong>المكونات الأساسية:</strong> مجال العمل، التخصص، الفئة المستهدفة، القيمة المضافة، الأهداف المستقبلية\n                                </p>\n                            </div>\n                        </div>\n                    )}\n\n                    <style jsx>{`\n                        .styled-textarea {\n                            font-family: \"Tajawal\", sans-serif;\n                            padding: 12px 15px;\n                            border: 1px solid #e0e0e0;\n                            border-radius: 8px;\n                            font-size: 14px;\n                            color: #333;\n                            background-color: #f9f9f9;\n                            box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);\n                            width: 100%;\n                            resize: vertical;\n                            box-sizing: border-box;\n                            transition: all 0.2s ease;\n                            direction: rtl;\n                        }\n                        \n                        .styled-textarea:focus {\n                            outline: none;\n                            border-color: #234069;\n                            box-shadow: 0 0 0 3px rgba(35, 64, 105, 0.2);\n                            background-color: #fff;\n                        }\n                        \n                        .styled-textarea:hover:not(:focus) {\n                            border-color: #234069;\n                        }\n                        \n                        .field-examples {\n                            background-color:rgba(244, 244, 244, 0.54);\n                            border-radius: 6px;\n                            padding: 10px 15px;\n                            margin-top: 10px;\n                        }\n                        \n                        .examples-content {\n                            font-size: 12px;\n                            color: #555;\n                            line-height: 1.6;\n                        }\n                        \n                        @keyframes fadeIn {\n                            from { opacity: 0; transform: translateY(-10px); }\n                            to { opacity: 1; transform: translateY(0); }\n                        }\n                    `}</style>\n                </div>\n\n                {/* Custom Security Key section with togglable info */}\n                <div className=\"form-group security-key-group\">\n                    <label>\n                        <FaKeycdn style={{ marginLeft: '5px' }} />\n                        رمز الأمان لمنسوبي الشركة\n                    </label>\n\n                    <div className=\"security-key-preview\">\n                        <p style={{\n                            fontSize: '13px',\n                            color: '#1d3557',\n                            fontWeight: 'bold',\n                            marginTop: '5px',\n                            textAlign: 'right',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'right'\n                        }}>\n                            ما هو رمز الأمان وكيف يتم استخدامه؟\n                            {showSecurityInfo ? (\n                                <FaLightbulb\n                                    style={{\n                                        marginRight: '8px',\n                                        cursor: 'pointer',\n                                        color: '#f0a500',\n                                        fontSize: '16px',\n                                        filter: 'drop-shadow(0 0 2px rgba(240, 165, 0, 0.5))',\n                                        transition: 'all 0.3s ease'\n                                    }}\n                                    onClick={toggleSecurityInfo}\n                                    title=\"إخفاء المعلومات\"\n                                />\n                            ) : (\n                                <FaLightbulb\n                                    style={{\n                                        marginRight: '8px',\n                                        cursor: 'pointer',\n                                        color: '#a0a0a0',\n                                        fontSize: '16px',\n                                        transition: 'all 0.3s ease'\n                                    }}\n                                    onClick={toggleSecurityInfo}\n                                    title=\"عرض المعلومات\"\n                                />\n                            )}\n                        </p>\n\n                        {showSecurityInfo && (\n                            <ul style={{\n                                paddingRight: '10px',\n                                paddingLeft: '12px',\n                                marginTop: '8px',\n                                color: '#444',\n                                fontSize: '12px',\n                                lineHeight: '1.6',\n                                textAlign: 'right',\n                                listStyleType: 'none',\n                                animation: 'fadeIn 0.3s ease'\n                            }}>\n                                <li style={{\n                                    position: 'relative',\n                                    marginBottom: '8px',\n                                    paddingRight: '20px'\n                                }}>\n                                    <span style={{\n                                        position: 'absolute',\n                                        right: '0',\n                                        top: '2px',\n                                        color: '#e63a46'\n                                    }}>•</span>\n                                    سيتم إنشاء رمز أمان فريد مكون من 5 أحرف/أرقام عند إنشاء حساب شركتك\n                                </li>\n                                <li style={{\n                                    position: 'relative',\n                                    marginBottom: '8px',\n                                    paddingRight: '20px'\n                                }}>\n                                    <span style={{\n                                        position: 'absolute',\n                                        right: '0',\n                                        top: '2px',\n                                        color: '#e63a46'\n                                    }}>•</span>\n                                    يستخدم منسوبو الشركة هذا الرمز للانضمام إلى حساب شركتك عند تسجيلهم\n                                </li>\n                                <li style={{\n                                    position: 'relative',\n                                    marginBottom: '0px',\n                                    paddingRight: '20px'\n                                }}>\n                                    <span style={{\n                                        position: 'absolute',\n                                        right: '0',\n                                        top: '2px',\n                                        color: '#e63a46'\n                                    }}>•</span>\n                                    <strong>مهم:</strong> سيظهر الرمز الخاص بك بعد إنشاء الحساب\n                                </li>\n                            </ul>\n                        )}\n                    </div>\n\n                    <style jsx>{`\n                        @keyframes fadeIn {\n                            from { opacity: 0; transform: translateY(-10px); }\n                            to { opacity: 1; transform: translateY(0); }\n                        }\n                    `}</style>\n                </div>\n            </form>\n\n            {/* Terms Checkbox */}\n            <div style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                width: '90%',\n                maxWidth: '834px',\n                margin: '20px auto 30px',\n                position: 'relative'\n            }}>\n                <div className={`terms ${errors.termsAccepted ? 'has-error' : ''}`}\n                    style={{\n                        animationFillMode: 'forwards',\n                        margin: '0',\n                        position: 'relative',\n                        flex: '1',\n                        minWidth: '300px'\n                    }}\n                >\n                    <label htmlFor=\"terms-checkbox\" style={{ cursor: 'pointer', display: 'flex', alignItems: 'center' }}>\n                        <input\n                            type=\"checkbox\"\n                            name=\"termsAccepted\"\n                            id=\"terms-checkbox\"\n                            checked={formData.termsAccepted}\n                            onChange={handleChange}\n                            required\n                            style={{ marginLeft: '10px', cursor: 'pointer', zIndex: 5 }}\n                        />\n                        <div className=\"terms-container\">\n                            <p>أوافق على </p>\n                            <a\n                                href=\"#\"\n                                className=\"terms-link\"\n                                onClick={handleTermsClick}\n                            >\n                                شروط وأحكام تسجيل منشأة\n                            </a>\n                            <span className=\"required\">*</span>\n                        </div>\n                    </label>\n                    {errors.termsAccepted && <ErrorMessage message={errors.termsAccepted} />}\n                </div>\n            </div>\n\n            {/* Enhanced Create button with better sizing */}\n            <button\n                type=\"button\"\n                className=\"submit-btn slide-up\"\n                onClick={handleSubmit}\n                disabled={loading}\n                style={{ width: 'auto', minWidth: '100px', padding: '15px 30px' }}\n            >\n                {loading ? (\n                    <span className=\"loading-spinner\">جاري المعالجة...</span>\n                ) : (\n                    <span>إنشاء</span>\n                )}\n            </button>\n\n            {/* Terms and Conditions Modal */}\n            {showTermsModal && (\n                <TermsModal\n                    onClose={() => setShowTermsModal(false)}\n                    onAccept={handleAcceptTerms}\n                />\n            )}\n\n            {/* Notification system */}\n            {notification && (\n                <Notification\n                    message={notification.message}\n                    type={notification.type}\n                    onClose={() => setNotification(null)}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default CreateCompanyAccount;","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./GoalDecomposing.css\";\nimport SmallSqrs1 from \"./assets/SmallSqrs1.svg\";\nimport SmallSqrs2 from \"./assets/SmallSqrs2.svg\";\nimport AWJLOGO from \"./assets/AWJLOGO.svg\";\nimport GD_LOGO from \"./assets/GD_LOGO.svg\";\nimport { db } from \"./firebase\";\nimport { collection, getDocs, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { useNotification } from \"./NotificationContext\";\nimport { ProcessingStatus } from \"./ProcessingStatus\";\nimport Header from \"./Header\";\n\n// Translations for fixed UI elements\nconst translationsData = {\n  en: {\n    pageTitle: \"Goal Decomposition\",\n    pageSubtitle: \"Help us know more details by filling out the following:\",\n    projectNameLabel: \"Project Name:\",\n    projectDescriptionLabel: \"Project Description:\",\n    projectNamePlaceholder: \"Enter project name\",\n    projectDescriptionPlaceholder: \"Enter a detailed description of the project\",\n    requiredField: \"Please enter\",\n    nextButton: \"Next\",\n    backButton: \"Back\",\n    submitButton: \"Analyze Project\",\n    loadingProcessing: \"Processing data...\",\n    submissionSuccess: \"Goal decomposition request submitted successfully. You will be notified when the analysis is complete.\",\n    viewProjectsButton: \"View Projects\",\n    submissionError: \"An error occurred while processing your request. Please try again.\",\n    userIdNotFound: \"User ID not found. Please log in again.\",\n    userDataNotFound: \"User data not found. Please log in again.\",\n    userNotLinkedToCompany: \"User is not linked to any company. Please check your account.\"\n  },\n  ar: {\n    pageTitle: \"التخطيط الاستراتيجي\",\n    pageSubtitle: \"ساعدنا بمعرفة تفاصيل أكثر، بتعبئة التالي:\",\n    projectNameLabel: \"اسم المشروع:\",\n    projectDescriptionLabel: \"وصف المشروع:\",\n    projectNamePlaceholder: \"أدخل اسم المشروع\",\n    projectDescriptionPlaceholder: \"أدخل وصفًا مفصلاً للمشروع\",\n    requiredField: \"يرجى إدخال\",\n    nextButton: \"التالي\",\n    backButton: \"العودة\",\n    submitButton: \"تحليل المشروع\",\n    loadingProcessing: \"جاري معالجة البيانات...\",\n    submissionSuccess: \"تم تقديم طلب تقسيم الهدف بنجاح. سيتم إعلامك عند اكتمال التحليل.\",\n    viewProjectsButton: \"عرض المشاريع\",\n    submissionError: \"حدث خطأ أثناء معالجة طلبك. الرجاء المحاولة مرة أخرى.\",\n    userIdNotFound: \"لم يتم العثور على هوية المستخدم. الرجاء تسجيل الدخول مرة أخرى.\",\n    userDataNotFound: \"لم يتم العثور على بيانات المستخدم. الرجاء تسجيل الدخول مرة أخرى.\",\n    userNotLinkedToCompany: \"لم يتم ربط المستخدم بأي شركة. الرجاء التحقق من حسابك.\"\n  }\n};\n\n//Updated\nconst GoalDecompose = () => {\n  const [currentQuestion, setCurrentQuestion] = useState(1);\n  const [formData, setFormData] = useState({\n    projName: \"\",\n    projDescr: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [fieldErrors, setFieldErrors] = useState({});\n  const [fadeIn, setFadeIn] = useState(true);\n  const navigate = useNavigate();\n  const { showSuccess, showError, showInfo } = useNotification();\n\n  // Add language state\n  const [language, setLanguage] = useState(() => {\n    return localStorage.getItem('app-language') || 'en'; // Default to English\n  });\n\n  // Get translations for current language\n  const t = translationsData[language];\n\n  // Update document direction when language changes\n  useEffect(() => {\n    document.documentElement.dir = language === 'ar' ? 'rtl' : 'ltr';\n    localStorage.setItem('app-language', language);\n  }, [language]);\n\n  // Microsoft Translator API for translation needs\n  const subscriptionKey = \"A4niYWmg25SB8gDP5PoBLrzuYe78HRLvSLynhkbzd1A5MbBBDRYZJQQJ99BDACFcvJRXJ3w3AAAbACOGvjNV\";\n  const endpoint = \"https://api.cognitive.microsofttranslator.com/translate?api-version=3.0\";\n  const region = \"qatarcentral\";\n\n  const translateText = async (text, targetLanguage) => {\n    if (!text) return \"\";\n    try {\n      const response = await fetch(endpoint + `&to=${targetLanguage}`, {\n        method: \"POST\",\n        headers: {\n          \"Ocp-Apim-Subscription-Key\": subscriptionKey,\n          \"Ocp-Apim-Subscription-Region\": region,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify([{ text }]),\n      });\n\n      if (!response.ok) {\n        console.error(`Translation API error: ${response.status} - ${await response.text()}`);\n        return text;\n      }\n\n      const data = await response.json();\n      return data[0].translations[0].text;\n    } catch (error) {\n      console.error(\"Error during translation:\", error);\n      return text;\n    }\n  };\n\n  // Update state when inputs change\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n\n    // Clear error for this field when user types\n    if (fieldErrors[name]) {\n      setFieldErrors(prev => ({\n        ...prev,\n        [name]: \"\"\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const errors = {};\n\n    if (currentQuestion === 1 && !formData.projName.trim()) {\n      errors.projName = `${t.requiredField} ${t.projectNameLabel.slice(0, -1)}`; // Remove colon\n    }\n\n    if (currentQuestion === 2 && !formData.projDescr.trim()) {\n      errors.projDescr = `${t.requiredField} ${t.projectDescriptionLabel.slice(0, -1)}`; // Remove colon\n    }\n\n    setFieldErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleNext = () => {\n    if (!validateForm()) return;\n\n    setFadeIn(false);\n    setTimeout(() => {\n      setCurrentQuestion(currentQuestion + 1);\n      setFadeIn(true);\n    }, 300);\n  };\n\n  const handleBack = () => {\n    setFadeIn(false);\n    setTimeout(() => {\n      setCurrentQuestion(currentQuestion - 1);\n      setFadeIn(true);\n    }, 300);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!validateForm()) return;\n\n    setIsLoading(true);\n\n    try {\n      // Retrieve the user ID from localStorage\n      const userId = localStorage.getItem(\"userId\");\n      if (!userId) {\n        throw new Error(t.userIdNotFound);\n      }\n\n      // Retrieve the user document from Firestore\n      const userDocRef = doc(db, \"User\", userId);\n      const userDocSnap = await getDoc(userDocRef);\n\n      if (!userDocSnap.exists()) {\n        throw new Error(t.userDataNotFound);\n      }\n\n      // Retrieve the user data\n      const userData = userDocSnap.data();\n\n      // Check if the user is linked to a company\n      const companyRef = userData.CompanyID;\n      if (!companyRef) {\n        throw new Error(t.userNotLinkedToCompany);\n      }\n\n      // Generate next available Project ID like p001\n      const projectSnapshot = await getDocs(collection(db, \"Project\"));\n      const ids = projectSnapshot.docs.map((doc) => doc.id);\n      const existingNumbers = ids\n        .map((id) => {\n          const match = id.match(/^p(\\d{3})$/);\n          return match ? parseInt(match[1]) : null;\n        })\n        .filter((n) => n !== null)\n        .sort((a, b) => a - b);\n\n      let nextNumber = 1;\n      for (let i = 0; i < existingNumbers.length; i++) {\n        if (existingNumbers[i] !== nextNumber) break;\n        nextNumber++;\n      }\n      const nextProjectId = `p${String(nextNumber).padStart(3, \"0\")}`;\n      const originalProjName = formData.projName;\n\n      // Handle form data based on current language\n      let englishData = {};\n\n      if (language === 'ar') {\n        // User is inputting in Arabic, need to translate to English for server\n        englishData = {\n          projName: await translateText(formData.projName, \"en\"),\n          projDescr: await translateText(formData.projDescr, \"en\")\n        };\n      } else {\n        // User is inputting in English - no translation needed\n        englishData = {\n          projName: formData.projName,\n          projDescr: formData.projDescr\n        };\n      }\n\n      // Save the project to Firestore - store original input without translation\n      await setDoc(doc(db, \"Project\", nextProjectId), {\n        ProjectID: nextProjectId,\n        ProjectName: formData.projName, // Store original input\n        ProjectDetails: formData.projDescr, // Store original input\n        CompanyID: companyRef,\n        CreatedAt: new Date(),\n        Status: \"Not Started\",\n        Pprogress: \"0\"\n      });\n\n      // Create a processing record for tracking\n      const processingId = await ProcessingStatus.createProcessingRecord({\n        type: 'goal-decomposition',\n        userId: userId,\n        projectId: nextProjectId,\n        projectName: originalProjName, // Use Arabic for processing record\n        companyId: typeof companyRef === \"string\" ? companyRef : companyRef.id\n      });\n\n      // Prepare form data to send to Flask server - ALWAYS send English data\n      const formDataToSend = new URLSearchParams();\n      formDataToSend.append(\"project_name\", originalProjName); // Send English to server\n      formDataToSend.append(\"project_description\", englishData.projDescr); // Send English to server\n      formDataToSend.append(\"user_id\", userId);\n      formDataToSend.append(\"company_id\", typeof companyRef === \"string\" ? companyRef : companyRef.id);\n      formDataToSend.append(\"project_id\", nextProjectId);\n      formDataToSend.append(\"processing_id\", processingId);\n\n      console.log(\"Sending data to server:\", Object.fromEntries(formDataToSend));\n\n      // Send to Flask server asynchronously (don't wait for response)\n      fetch(\"http://127.0.0.1:5000/generate-milestones\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: formDataToSend.toString(),\n      });\n\n      // Show success notification and redirect\n      showSuccess(t.submissionSuccess, {\n        duration: 8000,\n        action: {\n          label: t.viewProjectsButton,\n          onClick: () => navigate(\"/dashboard\", { state: { selectedSection: \"projects\" } }),\n          dismissOnClick: true\n        }\n      });\n\n      // Navigate to dashboard instead of waiting for result\n      navigate(\"/dashboard\", { state: { selectedSection: \"projects\" } });\n\n    } catch (error) {\n      console.error(\"Error during form submission:\", error);\n      showError(error.message || t.submissionError);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle language change\n  const handleLanguageChange = (newLanguage) => {\n    setLanguage(newLanguage);\n  };\n\n  // Add animation class when question changes\n  useEffect(() => {\n    const question = document.querySelector(\".question-box\");\n    if (question) {\n      question.classList.add(\"animate\");\n    }\n  }, [currentQuestion]);\n\n  return (\n    <div className=\"goal-decomposing-page\">\n      {/* Header component with language toggle */}\n      <Header\n        useLogo={false}\n        showLanguageToggle={true}\n        currentLanguage={language}\n        onLanguageChange={handleLanguageChange}\n      />\n\n      <div className=\"background-elements\">\n        <img className=\"SmallSqrs1\" alt={language === 'ar' ? \"عنصر خلفية 1\" : \"Background Element 1\"} src={SmallSqrs1} />\n        <img className=\"SmallSqrs2\" alt={language === 'ar' ? \"عنصر خلفية 2\" : \"Background Element 2\"} src={SmallSqrs2} />\n      </div>\n\n      <div className=\"page-header\">\n        <img src={GD_LOGO} alt={language === 'ar' ? \"شعار تقسيم الأهداف\" : \"Goal Decomposition Logo\"} className=\"GD-icon\" />\n        <h1 className=\"page-title\">{t.pageTitle}</h1>\n        <p className=\"page-subtitle\">{t.pageSubtitle}</p>\n      </div>\n\n      <form className=\"form-container\" onSubmit={handleSubmit} dir={language === 'en' ? 'ltr' : 'rtl'}>\n        <div className=\"timeline\">\n          <div\n            className={`circle ${currentQuestion >= 1 ? \"active\" : \"\"}`}\n            data-step=\"1\"\n          />\n          <div className={`line ${currentQuestion >= 2 ? \"active\" : \"\"}`} />\n          <div\n            className={`circle ${currentQuestion >= 2 ? \"active\" : \"\"}`}\n            data-step=\"2\"\n          />\n        </div>\n\n        {isLoading ? (\n          <div className=\"loading-indicator\">\n            <div className=\"spinner\"></div>\n            <p className=\"loading-text\">{t.loadingProcessing}</p>\n          </div>\n        ) : (\n          <>\n            <div className={`question-box ${fadeIn ? \"fade-in\" : \"fade-out\"}`} style={{ direction: language === 'en' ? 'ltr' : 'rtl', textAlign: language === 'en' ? 'left' : 'right' }}>\n              {currentQuestion === 1 && (\n                <>\n                  <label>\n                    <span className=\"required\">*</span> {t.projectNameLabel}\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"projName\"\n                    value={formData.projName}\n                    onChange={handleChange}\n                    placeholder={t.projectNamePlaceholder}\n                    aria-required=\"true\"\n                    style={{ textAlign: language === 'en' ? 'left' : 'right' }}\n                  />\n                  {fieldErrors.projName && (\n                    <div className=\"error-message\">{fieldErrors.projName}</div>\n                  )}\n                </>\n              )}\n\n              {currentQuestion === 2 && (\n                <>\n                  <label>\n                    <span className=\"required\">*</span> {t.projectDescriptionLabel}\n                  </label>\n                  <textarea\n                    name=\"projDescr\"\n                    value={formData.projDescr}\n                    onChange={handleChange}\n                    placeholder={t.projectDescriptionPlaceholder}\n                    aria-required=\"true\"\n                    style={{ textAlign: language === 'en' ? 'left' : 'right' }}\n                  />\n                  {fieldErrors.projDescr && (\n                    <div className=\"error-message\">{fieldErrors.projDescr}</div>\n                  )}\n                </>\n              )}\n            </div>\n\n            <div className=\"navigation-buttons\" style={{ direction: language === 'en' ? 'ltr' : 'rtl' }}>\n              {currentQuestion > 1 && (\n                <button\n                  type=\"button\"\n                  className=\"back-btn\"\n                  onClick={handleBack}\n                  aria-label={language === 'ar' ? \"العودة للخطوة السابقة\" : \"Go back to previous step\"}\n                >\n                  {t.backButton}\n                </button>\n              )}\n\n              {currentQuestion < 2 ? (\n                <button\n                  type=\"button\"\n                  className=\"next-btn\"\n                  onClick={handleNext}\n                  aria-label={language === 'ar' ? \"الانتقال للخطوة التالية\" : \"Go to next step\"}\n                >\n                  {t.nextButton}\n                </button>\n              ) : (\n                <button\n                  type=\"submit\"\n                  className=\"submit-btn\"\n                  aria-label={language === 'ar' ? \"إرسال وتحليل المشروع\" : \"Submit and analyze project\"}\n                >\n                  {t.submitButton}\n                </button>\n              )}\n            </div>\n          </>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default GoalDecompose;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './signin.css';\nimport AWJLOGO from \"./assets/AWJLOGO.svg\";\nimport SideSqrs from \"./assets/SideSqrs.svg\";\nimport { db } from \"./firebase\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { IoArrowBack } from 'react-icons/io5';\nimport { FiPhone, FiLock, FiCheckCircle } from 'react-icons/fi';\nimport { TbLanguage } from \"react-icons/tb\";\n\n// Define translations for the sign-in page\nconst signinTranslations = {\n    ar: {\n        backToHome: \"العودة إلى الصفحة الرئيسية\",\n        signInTitle: \"تسجيل الدخول\",\n        phoneNumber: \"رقم الجوال\",\n        sendOtp: \"إرسال رمز التحقق\",\n        sending: \"جاري الإرسال...\",\n        verificationCode: \"رمز التحقق\",\n        confirmLogin: \"تأكيد الدخول\",\n        verifying: \"جاري التحقق...\",\n        loginSuccess: \"تم تسجيل الدخول بنجاح\",\n        goToDashboard: \"الإنتقال إلى لوحة التحكم\",\n        didntReceiveCode: \"لم تستلم الرمز؟\",\n        resend: \"إعادة إرسال\",\n        noAccount: \"ليس لديك حساب؟\",\n        registerNow: \"سجل الآن\",\n        languageEnglish: \"English\",\n        languageArabic: \"العربية\"\n    },\n    en: {\n        backToHome: \"Back to Home\",\n        signInTitle: \"Sign In\",\n        phoneNumber: \"Phone Number\",\n        sendOtp: \"Send Verification Code\",\n        sending: \"Sending...\",\n        verificationCode: \"Verification Code\",\n        confirmLogin: \"Confirm Login\",\n        verifying: \"Verifying...\",\n        loginSuccess: \"Login Successful\",\n        goToDashboard: \"Go to Dashboard\",\n        didntReceiveCode: \"Didn't receive the code?\",\n        resend: \"Resend\",\n        noAccount: \"Don't have an account?\",\n        registerNow: \"Register Now\",\n        languageEnglish: \"English\",\n        languageArabic: \"العربية\"\n    }\n};\n\nconst SignIn = ({ setIsAuthenticated }) => {\n    const [phoneNumber, setPhoneNumber] = useState('+966');\n    const [otp, setOtp] = useState('');\n    const [isOtpSent, setIsOtpSent] = useState(false);\n    const [isVerified, setIsVerified] = useState(false);\n    const [error, setError] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n    const [signInLanguage, setSignInLanguage] = useState('ar'); // Default language is Arabic\n    const navigate = useNavigate();\n\n    // Get translations based on current language\n    const t = signinTranslations[signInLanguage];\n\n    const handleNavigationDash = () => {\n        navigate('/dashboard', { replace: true });\n    };\n\n    const handlePhoneInput = (e) => {\n        const value = e.target.value;\n        // Only allow numbers after +966\n        if (value === '+966' || (value.startsWith('+966') && value.length <= 13)) {\n            setPhoneNumber(value);\n        }\n    };\n\n    const handleOtpInput = (e) => {\n        const value = e.target.value;\n        // Only allow numbers and limit to 6 characters\n        if (/^\\d*$/.test(value) && value.length <= 6) {\n            setOtp(value);\n        }\n    };\n\n    // Handle language change\n    const handleSignInLanguageChange = (lang) => {\n        setSignInLanguage(lang);\n        // Update document direction based on language\n        document.body.dir = lang === 'ar' ? 'rtl' : 'ltr';\n    };\n\n    const handleSendOtp = async (e) => {\n        e.preventDefault();\n        setError('');\n        setIsLoading(true);\n        setIsVerified(false);\n\n        if (!/^\\+9665\\d{8}$/.test(phoneNumber)) {\n            setError(signInLanguage === 'ar'\n                ? \"يرجى إدخال الرقم بصيغة +9665XXXXXXXX\"\n                : \"Please enter the number in the format +9665XXXXXXXX\");\n            setIsLoading(false);\n            return;\n        }\n\n        try {\n            const localPhone = \"0\" + phoneNumber.slice(4);\n            const q = query(collection(db, \"User\"), where(\"PhoneNumber\", \"==\", localPhone));\n            const querySnapshot = await getDocs(q);\n\n            if (querySnapshot.empty) {\n                setError(signInLanguage === 'ar'\n                    ? \"لم يتم العثور على المستخدم. يُرجى التحقق من رقم هاتفك أو إنشاء حساب.\"\n                    : \"User not found. Please check your phone number or create an account.\");\n                setIsLoading(false);\n                return;\n            }\n\n            const userDoc = querySnapshot.docs[0];\n            localStorage.setItem(\"userId\", userDoc.id);\n\n            const response = await axios.post(\n                \"https://api.authentica.sa/api/v1/send-otp\",\n                { phone: phoneNumber, method: \"whatsapp\" },\n                {\n                    headers: {\n                        \"X-Authorization\": \"$2y$10$fsNNFy7nluAD0ODvdp2t/u91Z6kypZ8PT6mKQO3Pi5/Dl/W9Ek/Me\",\n                        \"Content-Type\": \"application/json\"\n                    }\n                }\n            );\n\n            if (response.data?.success) {\n                // Use a non-blocking notification instead of alert\n                setIsOtpSent(true);\n                // Display notification through state\n                setShowSuccessMessage(false);\n                setError(signInLanguage === 'ar'\n                    ? `تم إرسال رمز التحقق إلى ${phoneNumber}`\n                    : `Verification code sent to ${phoneNumber}`);\n                // Clear error after 3 seconds\n                setTimeout(() => setError(''), 3000);\n            } else {\n                setError(response.data?.message || (signInLanguage === 'ar'\n                    ? \"فشل إرسال رمز التحقق. حاول مرة أخرى.\"\n                    : \"Failed to send verification code. Please try again.\"));\n            }\n        } catch (err) {\n            console.error(\"OTP Send Error:\", err);\n            setError(signInLanguage === 'ar'\n                ? `حدث خطأ: ${err.response?.data?.message || \"تحقق من صيغة الرقم أو مفتاح API\"}`\n                : `Error: ${err.response?.data?.message || \"Check number format or API key\"}`);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleVerifyOtp = async (e) => {\n        e.preventDefault();\n        setError('');\n        setIsLoading(true);\n\n        try {\n            const response = await axios.post(\n                'https://api.authentica.sa/api/v1/verify-otp',\n                { phone: phoneNumber, otp: otp },\n                {\n                    headers: {\n                        'X-Authorization': '$2y$10$fsNNFy7nluAD0ODvdp2t/u91Z6kypZ8PT6mKQO3Pi5/Dl/W9Ek/Me',\n                        'Content-Type': 'application/json'\n                    }\n                }\n            );\n\n            console.log(\"Axios response:\", response);\n\n            // FORCE showSuccessMessage to true for testing\n            setShowSuccessMessage(true);\n\n            if (response.data?.success) {\n                console.log(\"response.data.success is true\");\n                console.log(\"response.data:\", response.data);\n                console.log(\"isVerified before:\", isVerified);\n                console.log(\"showSuccessMessage before:\", showSuccessMessage);\n                localStorage.setItem('authToken', response.data.token || 'verified');\n                setIsAuthenticated(true);\n                setIsVerified(true);\n                console.log(\"isVerified after:\", isVerified);\n                console.log(\"showSuccessMessage after:\", showSuccessMessage);\n                setError('');\n                console.log(\"SignIn.js: setIsAuthenticated called\");\n\n                // Add automatic navigation with a delay\n                console.log(\"Setting up automatic navigation to dashboard...\");\n                setTimeout(() => {\n                    console.log(\"Navigating to dashboard now...\");\n                    navigate('/dashboard', { replace: true });\n                }, 1500); // 1.5 seconds delay\n            } else {\n                setError(response.data?.message || (signInLanguage === 'ar'\n                    ? 'رمز التحقق غير صحيح. حاول مرة أخرى.'\n                    : 'Invalid verification code. Please try again.'));\n            }\n        } catch (error) {\n            console.error('Verification Error:', error);\n            setError(signInLanguage === 'ar'\n                ? 'حدث خطأ أثناء التحقق من الرمز. تأكد من صحة الرمز أو حاول لاحقاً.'\n                : 'Error verifying code. Check the code or try again later.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // Set initial direction on mount\n    useEffect(() => {\n        document.body.dir = signInLanguage === 'ar' ? 'rtl' : 'ltr';\n    }, []);\n\n    return (\n        <div className=\"sign-in-page\">\n            <button\n                className=\"back-arrow-nn\"\n                onClick={() => navigate('/')}\n                aria-label={t.backToHome}\n            >\n                <IoArrowBack />\n            </button>\n\n            {/* Add language toggle button */}\n            <button\n                className=\"signin-language-toggle\"\n                aria-label=\"Language selector\"\n            >\n                <TbLanguage className=\"signin-language-icon\" />\n                <div className=\"signin-language-selector\">\n                    <div\n                        className={`signin-language-option ${signInLanguage === \"en\" ? \"active\" : \"\"}`}\n                        onClick={() => handleSignInLanguageChange(\"en\")}\n                    >\n                        {t.languageEnglish}\n                    </div>\n                    <div\n                        className={`signin-language-option ${signInLanguage === \"ar\" ? \"active\" : \"\"}`}\n                        onClick={() => handleSignInLanguageChange(\"ar\")}\n                    >\n                        {t.languageArabic}\n                    </div>\n                </div>\n            </button>\n\n            <img className=\"logo-image\" alt=\"AWJ Logo\" src={AWJLOGO} />\n            <img className=\"side-squares\" alt=\"Background Design\" src={SideSqrs} />\n\n            <div className=\"sign-in-container\">\n                <div className=\"sign-in-box\">\n                    <h1 className=\"sign-in-title\">{t.signInTitle}</h1>\n\n                    {error && !error.includes('OTP verified successfully') && (\n                        <div className={`notification ${error.includes('تم إرسال رمز التحقق') || error.includes('Verification code sent') ? 'success' : 'error'}`}>\n                            {error}\n                        </div>\n                    )}\n\n                    {!isOtpSent ? (\n                        <form onSubmit={handleSendOtp} className=\"sign-in-form\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"phoneNumber\">{t.phoneNumber}</label>\n                                <div className=\"input-with-icon\">\n                                    <FiPhone className=\"input-icon\" />\n                                    <input\n                                        id=\"phoneNumber\"\n                                        type=\"tel\"\n                                        value={phoneNumber}\n                                        onChange={handlePhoneInput}\n                                        placeholder=\"+9665XXXXXXXX\"\n                                        required\n                                        dir=\"ltr\"\n                                    />\n                                </div>\n                            </div>\n                            <button\n                                type=\"submit\"\n                                className={`submit-button ${isLoading ? 'loading' : ''}`}\n                                disabled={isLoading}\n                            >\n                                {isLoading ? t.sending : t.sendOtp}\n                            </button>\n                        </form>\n                    ) : (\n                        <div className=\"otp-section\">\n                            {!showSuccessMessage ? (\n                                <form onSubmit={handleVerifyOtp} className=\"sign-in-form\">\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"otpInput\">{t.verificationCode}</label>\n                                        <div className=\"input-with-icon\">\n                                            <FiLock className=\"input-icon\" />\n                                            <input\n                                                id=\"otpInput\"\n                                                type=\"text\"\n                                                value={otp}\n                                                onChange={handleOtpInput}\n                                                placeholder={signInLanguage === 'ar' ? \"أدخل رمز التحقق\" : \"Enter verification code\"}\n                                                required\n                                                dir=\"ltr\"\n                                                disabled={isVerified}\n                                                maxLength={6}\n                                            />\n                                        </div>\n                                    </div>\n\n                                    {!isVerified && (\n                                        <button\n                                            type=\"submit\"\n                                            className={`submit-button ${isLoading ? 'loading' : ''}`}\n                                            disabled={isLoading}\n                                        >\n                                            {isLoading ? t.verifying : t.confirmLogin}\n                                        </button>\n                                    )}\n                                </form>\n                            ) : (\n                                <div className=\"success-container\">\n                                    <div className=\"success-icon\">\n                                        <FiCheckCircle />\n                                        <p className=\"success-message\">{t.loginSuccess}</p>\n                                    </div>\n                                    <button\n                                        onClick={handleNavigationDash}\n                                        className=\"dashboard-btn\"\n                                    >\n                                        {t.goToDashboard}\n                                    </button>\n                                </div>\n                            )}\n\n                            {!isVerified && !showSuccessMessage && (\n                                <div className=\"resend-otp\">\n                                    <p>{t.didntReceiveCode}</p>\n                                    <button\n                                        type=\"button\"\n                                        onClick={handleSendOtp}\n                                        disabled={isLoading}\n                                        className=\"resend-link\"\n                                    >\n                                        {t.resend}\n                                    </button>\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n\n                {!showSuccessMessage && (\n                    <div className=\"login-link\">\n                        <p>{t.noAccount} <a href=\"/create-account\">{t.registerNow}</a></p>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default SignIn;","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./services.css\";\nimport BlueBox from \"./assets/BlueBox.svg\";\nimport RedBlueBox from \"./assets/RedBlueBox.svg\";\nimport AWJLOGO from \"./assets/AWJLOGO.svg\";\nimport { IoArrowBack, IoCheckmarkCircle } from 'react-icons/io5';\nimport { RiBuilding4Line, RiLightbulbLine } from 'react-icons/ri';\n\nconst Services = () => {\n    const navigate = useNavigate();\n    const [hoveredOption, setHoveredOption] = useState(null);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [isAnimating, setIsAnimating] = useState(false);\n\n    // Initialize animations\n    useEffect(() => {\n        const contentElements = document.querySelectorAll('.fade-in');\n\n        contentElements.forEach((element, index) => {\n            setTimeout(() => {\n                element.style.opacity = '1';\n                element.style.transform = 'translateY(0)';\n            }, 100 * index);\n        });\n\n        // Show the subtext with slight delay\n        setTimeout(() => {\n            const subtext = document.querySelector('.text-wrapper-subtext');\n            if (subtext) {\n                subtext.style.opacity = '1';\n                subtext.style.transform = 'translateY(0)';\n            }\n        }, 800);\n    }, []);\n\n    const handleService1Click = () => {\n        if (isAnimating) return;\n\n        setIsAnimating(true);\n        setSelectedOption('existing');\n\n        // Add a slight delay for the animation before navigation\n        setTimeout(() => {\n            navigate(\"/service-1\");\n            setIsAnimating(false);\n        }, 600);\n    };\n\n    const handleService2Click = () => {\n        if (isAnimating) return;\n\n        setIsAnimating(true);\n        setSelectedOption('new');\n\n        // Add a slight delay for the animation before navigation\n        setTimeout(() => {\n            navigate(\"/service-2\");\n            setIsAnimating(false);\n        }, 600);\n    };\n\n    return (\n        <div className=\"services-page\">\n            <div\n                className=\"back-arrow-container fade-in\"\n                onClick={() => navigate('/')}\n                title=\"العودة إلى الصفحة الرئيسية\"\n            >\n                <IoArrowBack className=\"back-arrow-n\" />\n                <span className=\"back-arrow-text\">الرئيسية</span>\n            </div>\n\n            <img\n                className=\"Logo fade-in\"\n                alt=\"شعار أوج\"\n                src={AWJLOGO}\n                title=\"أوج\"\n                onClick={() => navigate('/')}\n                style={{ cursor: 'pointer' }}\n            />\n\n            {/* Decorative elements */}\n            <img className=\"BlueBox\" alt=\"\" src={BlueBox} aria-hidden=\"true\" />\n            <img className=\"RedBlueBox\" alt=\"\" src={RedBlueBox} aria-hidden=\"true\" />\n\n            <div className=\"text-wrapper fade-in\">مرحبـــًا بـــك!</div>\n            <div className=\"text-wrapper-1 fade-in\">هل لديك شركة قائمة أم أنك رائد أعمال ترغب في بدء فكرة جديدة؟</div>\n            <div className=\"text-wrapper-subtext fade-in\">ستتمكن من الوصول إلى جميع خدماتنا بعد إنشاء حسابك</div>\n            <div className=\"content-container\">\n                <div className=\"services-options-container\">\n                    <div className=\"services-cards-container\">\n                        <div\n                            className={`service-card fade-in ${hoveredOption === 'existing' ? 'service-card-hovered' : ''} ${selectedOption === 'existing' ? 'service-card-selected' : ''}`}\n                            onMouseEnter={() => setHoveredOption('existing')}\n                            onMouseLeave={() => setHoveredOption(null)}\n                            onClick={handleService1Click}\n                        >\n                            <div className=\"service-card-icon\">\n                                <RiBuilding4Line className=\"icon\" />\n                            </div>\n                            <h3 className=\"service-card-title\">لدي شركة ناشئة قائمة</h3>\n                            <p className=\"service-card-description\">\n                                تحسين استراتيجيتك واستمرارية نمو شركتك من خلال أداة التخطيط الاستراتيجي\n                            </p>\n                            {selectedOption === 'existing' && (\n                                <div className=\"selected-indicator\">\n                                    <IoCheckmarkCircle style={{ color: 'white', fontSize: '20px' }} />\n                                </div>\n                            )}\n                        </div>\n\n                        <div\n                            className={`service-card fade-in ${hoveredOption === 'new' ? 'service-card-hovered' : ''} ${selectedOption === 'new' ? 'service-card-selected' : ''}`}\n                            onMouseEnter={() => setHoveredOption('new')}\n                            onMouseLeave={() => setHoveredOption(null)}\n                            onClick={handleService2Click}\n                        >\n                            <div className=\"service-card-icon\">\n                                <RiLightbulbLine className=\"icon\" />\n                            </div>\n                            <h3 className=\"service-card-title\">أرغب ببدء فكرة جديدة</h3>\n                            <p className=\"service-card-description\">\n                                تحويل فكرتك إلى خطة عمل مفصلة وخارطة موضحة لبدء مشروعك الناشئ بثقة\n                            </p>\n                            {selectedOption === 'new' && (\n                                <div className=\"selected-indicator\">\n                                    <IoCheckmarkCircle style={{ color: 'white', fontSize: '20px' }} />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Services;","import React, { useState, useEffect } from \"react\";\nimport logo from \"./assets/logo.png\";\nimport LeftArrow from \"./assets/LeftArrow.svg\";\nimport \"./navigation-styles.css\";\nimport { TbLanguage } from \"react-icons/tb\";\n\n// Define your translations here (this can later be moved to a separate file or localization framework)\nconst translations = {\n    ar: {\n        about: \"عن أوج\",\n        partners: \"شركاؤنا\",\n        faq: \"الأسئلة الشائعة\",\n        signOut: \"تسجيل الخروج\",\n        signIn: \"تسجيل دخول\",\n        languageEnglish: \"English\",\n        languageArabic: \"العربية\"\n    },\n    en: {\n        about: \"About AWJ\", // Adjust the branding as needed\n        partners: \"Our Partners\",\n        faq: \"FAQ\",\n        signOut: \"Sign Out\",\n        signIn: \"Sign In\",\n        languageEnglish: \"English\",\n        languageArabic: \"العربية\"\n    }\n};\n\nconst NavigationHeader = ({\n    isAuthenticated,\n    handleSignInClick,\n    handleSignOutClick,\n    scrollToSection,\n    showLanguageToggle = true,\n    currentLanguage = \"ar\",\n    onLanguageChange\n}) => {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const [scrolled, setScrolled] = useState(false);\n    const [activeLink, setActiveLink] = useState(null);\n\n    useEffect(() => {\n        const handleScroll = () => {\n            const offset = window.scrollY;\n            setScrolled(offset > 50);\n\n            // Determine active section based on scroll position\n            const sections = ['aboutSection', 'partnersSection', 'faqSection'];\n            for (const sectionId of sections) {\n                const section = document.getElementById(sectionId);\n                if (section) {\n                    const sectionTop = section.offsetTop - 100;\n                    const sectionBottom = sectionTop + section.offsetHeight;\n\n                    if (offset >= sectionTop && offset < sectionBottom) {\n                        setActiveLink(sectionId);\n                        break;\n                    } else if (offset < document.getElementById('aboutSection').offsetTop - 100) {\n                        setActiveLink(null); // At the top, before any section\n                    }\n                }\n            }\n        };\n\n        window.addEventListener('scroll', handleScroll);\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, []);\n\n    const handleNavClick = (sectionId) => {\n        scrollToSection(sectionId);\n        setActiveLink(sectionId);\n    };\n\n    // Close menu when clicking outside\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (isMenuOpen && !event.target.closest('.mobile-menu-container') &&\n                !event.target.closest('.mobile-menu-button')) {\n                setIsMenuOpen(false);\n            }\n        };\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, [isMenuOpen]);\n\n    // Prevent scrolling when mobile menu is open\n    useEffect(() => {\n        document.body.style.overflow = isMenuOpen ? 'hidden' : 'auto';\n        return () => { document.body.style.overflow = 'auto'; };\n    }, [isMenuOpen]);\n\n    // Language selection handler\n    const handleLanguageSelect = (lang) => {\n        if (onLanguageChange && lang !== currentLanguage) {\n            onLanguageChange(lang);\n        }\n    };\n\n    return (\n        <>\n            <header className={`nav-header ${scrolled ? 'scrolled' : ''}`}>\n                <div className=\"header-wrapper\">\n\n                    {/* Logo at right */}\n                    <div className=\"right-section\">\n                        <div className=\"logo-container\">\n                            <img className=\"logo\" alt=\"logo\" src={logo} />\n                        </div>\n                    </div>\n\n                    {/* Center Nav */}\n                    <nav className=\"main-nav\">\n                        <ul className=\"nav-links\">\n                            <li className=\"nav-item\">\n                                <button\n                                    className={`nav-link ${activeLink === 'aboutSection' ? 'active' : ''}`}\n                                    onClick={() => handleNavClick('aboutSection')}\n                                >\n                                    <span>{translations[currentLanguage].about}</span>\n                                </button>\n                            </li>\n                            <li className=\"nav-item\">\n                                <button\n                                    className={`nav-link ${activeLink === 'partnersSection' ? 'active' : ''}`}\n                                    onClick={() => handleNavClick('partnersSection')}\n                                >\n                                    <span>{translations[currentLanguage].partners}</span>\n                                </button>\n                            </li>\n                            <li className=\"nav-item\">\n                                <button\n                                    className={`nav-link ${activeLink === 'faqSection' ? 'active' : ''}`}\n                                    onClick={() => handleNavClick('faqSection')}\n                                >\n                                    <span>{translations[currentLanguage].faq}</span>\n                                </button>\n                            </li>\n                        </ul>\n                    </nav>\n\n                    {/* Auth button at left */}\n                    <div className=\"left-section\">\n                        {/* Language toggle button */}\n                        {showLanguageToggle && (\n                            <button\n                                className=\"btn-secondary language-toggle\"\n                                aria-label=\"Language selector\"\n                            >\n                                <TbLanguage className=\"language-icon\" />\n                                <div className=\"language-selector\">\n                                    <div\n                                        className={`language-option ${currentLanguage === \"en\" ? \"active\" : \"\"}`}\n                                        onClick={() => handleLanguageSelect(\"en\")}\n                                    >\n                                        {translations[currentLanguage].languageEnglish}\n                                    </div>\n                                    <div\n                                        className={`language-option ${currentLanguage === \"ar\" ? \"active\" : \"\"}`}\n                                        onClick={() => handleLanguageSelect(\"ar\")}\n                                    >\n                                        {translations[currentLanguage].languageArabic}\n                                    </div>\n                                </div>\n                            </button>\n                        )}\n\n                        <button\n                            className=\"auth-button\"\n                            onClick={isAuthenticated ? handleSignOutClick : handleSignInClick}\n                        >\n                            <span>\n                                {isAuthenticated\n                                    ? translations[currentLanguage].signOut\n                                    : translations[currentLanguage].signIn}\n                            </span>\n                            <div className=\"auth-button-icon\">\n                                <img className=\"arrow-icon\" alt=\"LeftArrow\" src={LeftArrow} />\n                            </div>\n                        </button>\n\n                        {/* Mobile menu button */}\n                        <button\n                            className={`mobile-menu-button ${isMenuOpen ? 'active' : ''}`}\n                            onClick={() => setIsMenuOpen(!isMenuOpen)}\n                            aria-label=\"Toggle menu\"\n                            aria-expanded={isMenuOpen}\n                        >\n                            <span className=\"menu-bar\"></span>\n                            <span className=\"menu-bar\"></span>\n                            <span className=\"menu-bar\"></span>\n                        </button>\n                    </div>\n                </div>\n            </header>\n\n            {/* Mobile menu overlay */}\n            <div\n                className={`mobile-menu-overlay ${isMenuOpen ? 'open' : ''}`}\n                onClick={() => setIsMenuOpen(false)}\n            ></div>\n\n            {/* Mobile menu */}\n            <div className={`mobile-menu-container ${isMenuOpen ? 'open' : ''}`}>\n                <div className=\"mobile-menu-header\">\n                    <img className=\"mobile-menu-logo\" alt=\"logo\" src={logo} />\n                    <button\n                        className=\"mobile-menu-close\"\n                        onClick={() => setIsMenuOpen(false)}\n                        aria-label=\"Close menu\"\n                    >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\"\n                            stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                        </svg>\n                    </button>\n                </div>\n                <nav className=\"mobile-menu-nav\">\n                    <ul className=\"mobile-menu-links\">\n                        <li className=\"mobile-menu-item\">\n                            <button onClick={() => {\n                                handleNavClick('aboutSection');\n                                setIsMenuOpen(false);\n                            }}>\n                                {translations[currentLanguage].about}\n                            </button>\n                        </li>\n                        <li className=\"mobile-menu-item\">\n                            <button onClick={() => {\n                                handleNavClick('partnersSection');\n                                setIsMenuOpen(false);\n                            }}>\n                                {translations[currentLanguage].partners}\n                            </button>\n                        </li>\n                        <li className=\"mobile-menu-item\">\n                            <button onClick={() => {\n                                handleNavClick('faqSection');\n                                setIsMenuOpen(false);\n                            }}>\n                                {translations[currentLanguage].faq}\n                            </button>\n                        </li>\n                    </ul>\n                </nav>\n                <div className=\"mobile-menu-footer\">\n                    <button\n                        className=\"mobile-auth-button\"\n                        onClick={() => {\n                            isAuthenticated ? handleSignOutClick() : handleSignInClick();\n                            setIsMenuOpen(false);\n                        }}\n                    >\n                        {isAuthenticated\n                            ? translations[currentLanguage].signOut\n                            : translations[currentLanguage].signIn}\n                    </button>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default NavigationHeader;","import React, { useState, useRef } from \"react\";\nimport \"./faq.css\";\n\nconst FAQ = ({ faq, language = \"ar\" }) => {\n  // Store only the currently open item ID (or null if none open)\n  const [activeItem, setActiveItem] = useState(null);\n\n  // Create refs object to store references to answer elements\n  const answerRefs = useRef({});\n\n  const toggleItem = (id) => {\n    // If the clicked item is already open, close it\n    // Otherwise, set it as the active item (and close any previously open item)\n    setActiveItem(activeItem === id ? null : id);\n  };\n\n  // Add language-specific classes\n  const isRTL = language === \"ar\";\n  const directionClass = isRTL ? \"rtl-text\" : \"ltr-text\";\n\n  return (\n    <div className={`faq-container ${directionClass}`}>\n      <div className=\"faq-list\">\n        {faq.map((item) => {\n          // Calculate dynamic styles for smooth height animation\n          const isActive = activeItem === item.f_id;\n          const answerStyle = isActive\n            ? { maxHeight: answerRefs.current[item.f_id]?.scrollHeight + 'px' || '1000px' }\n            : { maxHeight: '0px' };\n\n          return (\n            <div\n              key={item.f_id}\n              className={`faq-item ${isActive ? 'open' : ''}`}\n            >\n              <div\n                className=\"faq-question-container\"\n                onClick={() => toggleItem(item.f_id)}\n              >\n                <div className=\"faq-question\">{item.f_question}</div>\n                <div className=\"faq-toggle\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    style={{ transform: `rotate(${isActive ? 180 : 0}deg)` }}\n                    className=\"chevron-icon\"\n                  >\n                    <polyline points=\"6 9 12 15 18 9\"></polyline>\n                  </svg>\n                </div>\n              </div>\n\n              <div\n                className={`faq-answer ${isActive ? 'expanded' : ''}`}\n                style={answerStyle}\n                ref={el => answerRefs.current[item.f_id] = el}\n              >\n                <div className=\"faq-answer-content\">\n                  {item.f_answer}\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default FAQ;","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport NavigationHeader from \"./NavigationHeader\";\nimport FAQ from \"./faq\";\nimport x57 from \"./assets/2030.svg\";\nimport x58 from \"./assets/sqrs.svg\";\nimport x59 from \"./assets/Rectangle102.svg\";\nimport x60 from \"./assets/Rectangle103.svg\";\nimport logo from \"./assets/logo.png\";\nimport intersect from \"./assets/Intersect.png\";\nimport MONSHAAT from \"./assets/MONSHAAT.png\";\nimport AWS from \"./assets/Aws.png\";\nimport LeftArrow from \"./assets/LeftArrow.svg\";\nimport \"./style.css\";\nimport \"./navigation-styles.css\";\nimport {\n    Expand,\n    LayoutDashboard,\n    TrendingUp\n} from \"lucide-react\";\n\nconst FlexibilityIcon = () => <Expand size={60} color=\"#fff\" strokeWidth={1.5} />;\nconst EaseOfUseIcon = () => <LayoutDashboard size={60} color=\"#fff\" strokeWidth={1.5} />;\nconst ImprovementIcon = () => <TrendingUp size={60} color=\"#fff\" strokeWidth={1.5} />;\n\n// Define translations for the entire page\nconst translations = {\n    en: {\n        // Navigation items\n        nav: {\n            about: \"About AWJ\",\n            partners: \"Our Partners\",\n            faq: \"FAQ\",\n            signIn: \"Sign In\",\n            signOut: \"Sign Out\",\n        },\n        // Hero section\n        hero: {\n            title: \"Smart Plans, Clear Goals, Sustainable Success\",\n            description: \"We design innovative AI-powered solutions to help startups achieve their strategic goals, through a creative and passionate team that keeps up with the latest technological developments.\",\n            cta: \"Start Your Journey with AWJ\"\n        },\n        // Features section\n        features: {\n            title: \"Our Features\",\n            flexibility: {\n                title: \"Diversity & Flexibility\",\n                description: \"Multiple services provided to meet your diverse needs\",\n                learnMore: \"Read More\",\n                modal: {\n                    description: \"AWJ allows you to easily design business models or set short-term goals, making it ideal for meeting your diverse needs.\",\n                    items: [\"Customizable Business Models\", \"Diverse Tools\", \"Custom Solutions\"]\n                }\n            },\n            ease: {\n                title: \"Ease of Use\",\n                description: \"Simple interface that facilitates user interaction without technical expertise\",\n                learnMore: \"Read More\",\n                modal: {\n                    description: \"AWJ's interface is designed to be simple and smooth, making it easy for users to interact without needing advanced technical expertise, with the use of the power of AI.\",\n                    items: [\"Intuitive Interface\", \"Responsive Design\", \"Simplified Steps\", \"Excellent Technical Support\"]\n                }\n            },\n            improve: {\n                title: \"Continuous Improvement\",\n                description: \"Make decisions that reduce risks and enhance success to develop your business\",\n                learnMore: \"Read More\",\n                modal: {\n                    description: \"AWJ helps you leverage AI to make well-considered strategic decisions that enhance your chances of success, continuously improve your company’s performance, and avoid potential risks before they occur.\",\n                    items: [\"Advanced Analytics\", \"Smart Recommendations\", \"Identifying Strengths\", \"Performance Indicators\"]\n                }\n            }\n        },\n        // Vision section\n        vision: {\n            title: \"Our Vision 2030\",\n            description: \"We support Vision 2030 by empowering startups through AI solutions that support growth and economic diversification\"\n        },\n        // Partners section\n        partners: {\n            title: \"Our Partners\",\n            monshaat: {\n                name: \"Monshaat\",\n                description: \"The General Authority for Small and Medium Enterprises, supporting and developing the enterprise sector\"\n            },\n            aws: {\n                name: \"AWS Advanced Business Services\",\n                description: \"A company specialized in strategic plans for companies and entrepreneurs, supporting project market entry and sustainability\"\n            },\n            cta: {\n                question: \"Would you like to become one of our partners?\",\n                button: \"Contact Us\"\n            }\n        },\n        // FAQ section\n        faq: {\n            title: \"Frequently Asked Questions\",\n            items: [\n                {\n                    f_id: 1,\n                    f_question: \"What is AWJ?\",\n                    f_answer: \"AWJ is an innovative platform powered by artificial intelligence that helps startups and organizations with strategic planning and making informed decisions to achieve sustainable growth.\"\n                },\n                {\n                    f_id: 2,\n                    f_question: \"What benefits does AWJ provide?\",\n                    f_answer: \"AWJ is an AI platform that supports startups with building custom business models, goal segmentation, performance tracking, and collaboration enhancement, helping them reduce risks and achieve sustainable growth.\"\n                },\n                {\n                    f_id: 3,\n                    f_question: \"Is AWJ only suitable for small startups?\",\n                    f_answer: \"No, AWJ serves micro and small startups, as well as entrepreneurs who have not yet begun implementing their ideas, making it the ideal solution for supporting innovation and growth at all stages.\"\n                },\n                {\n                    f_id: 4,\n                    f_question: \"Is my data safe with AWJ?\",\n                    f_answer: \"Yes, we give top priority to your data security. Information is stored securely with a guarantee that it will not be shared with any third parties.\"\n                },\n                {\n                    f_id: 5,\n                    f_question: \"Can I work with my team members on AWJ?\",\n                    f_answer: \"Absolutely! AWJ allows you to invite your team members to collaborate on the same company page.\"\n                }\n            ]\n        },\n        // Footer\n        footer: {\n            copyright: \"AWJ 2025 © All Rights Reserved\"\n        }\n    },\n    ar: {\n        // Navigation items\n        nav: {\n            about: \"عن أوج\",\n            partners: \"شركاؤنا\",\n            faq: \"الأسئلة الشائعة\",\n            signIn: \"تسجيل دخول\",\n            signOut: \"تسجيل الخروج\",\n        },\n        // Hero section\n        hero: {\n            title: \"خطط ذكية، أهداف واضحة، نجاح مستدام\",\n            description: \"نصمم حلولاً مبتكرة مدعومة بالذكاء الاصطناعي لمساعدة الشركات الناشئة على تحقيق أهدافها الاستراتيجية، من خلال فريق مبدع وشغوف يواكب أحدث التطورات التقنية.\",\n            cta: \"ابدأ رحلتك مع أوج\"\n        },\n        // Features section\n        features: {\n            title: \"مميزاتنا\",\n            flexibility: {\n                title: \"تنـوع و مرونـة\",\n                description: \"عدة خدمات مقدمة لتلبية احتياجاتك المتنوعة\",\n                learnMore: \"اقرأ المزيد\",\n                modal: {\n                    description: \"يتيح لك أوج إمكانية تصميم نماذج عمل أو التخطيط الاستراتيجي بسهولة، مما يجعله مثالياً لتلبية احتياجاتك المتنوعة.\",\n                    items: [\"نماذج عمل قابلة للتخصيص\", \"أدوات متنوعة\", \"حلول مخصصة\"]\n                }\n            },\n            ease: {\n                title: \"سهولة الاستخدام\",\n                description: \"واجهة بسيطة تسهل تفاعل المستخدمين دون خبرة تقنية\",\n                learnMore: \"اقرأ المزيد\",\n                modal: {\n                    description: \"واجهة أوج مصممة بشكل بسيط وسلس، مما يسهل على المستخدمين التفاعل مع المنصة دون الحاجة لخبرات تقنية متقدمة، مع الاستفادة من قوة الذكاء الاصطناعي لتطوير الأعمال.\",\n                    items: [\"واجهة بديهية\", \"تصميم متجاوب\", \"خطوات مبسطة\", \"دعم فني متميز\"]\n                }\n            },\n            improve: {\n                title: \"تحسـين مستمـر\",\n                description: \"اتخاذ قرارات تقلل المخاطر وتعزز النجاح لتطوير أعمالك\",\n                learnMore: \"اقرأ المزيد\",\n                modal: {\n                    description: \"يساعدك أوج من خلال الذكاء الاصطناعي في اتخاذ قرارات استراتيجية مدروسة تعزز فرص النجاح، لتحسين أداء شركتك بشكل مستمر، وتجنب المخاطر المحتملة قبل وقوعها.\",\n                    items: [\"تحليلات متقدمة\", \"توصيات ذكية\", \"تحديد نقاط القوة\", \"مؤشرات أداء\"]\n                }\n            }\n        },\n        // Vision section\n        vision: {\n            title: \"رؤيتنا 2030\",\n            description: \"نواكب رؤية 2030 بتمكين الشركات الناشئة عبر حلول ذكاء اصطناعي تدعم النمو وتنوع الاقتصاد\"\n        },\n        // Partners section\n        partners: {\n            title: \"شركاؤنا\",\n            monshaat: {\n                name: \"منشآت\",\n                description: \"الهيئة العامة للمنشآت الصغيرة والمتوسطة، تدعم وتنمي وتحفز قطاع المنشآت\"\n            },\n            aws: {\n                name: \"أوس المتطورة لخدمات الأعمال\",\n                description: \"شركة مختصة في الخطط الاستراتيجية للشركات و رواد الأعمال، تدعم دخول المشاريع للسوق و إستدامتها\"\n            },\n            cta: {\n                question: \"هل ترغب في أن تصبح أحد شركائنا؟\",\n                button: \"تواصل معنا\"\n            }\n        },\n        // FAQ section\n        faq: {\n            title: \"الأسئلة الشائعة\",\n            items: [\n                {\n                    f_id: 1,\n                    f_question: \"ما هو أوج؟\",\n                    f_answer: \"أوج هو منصة مبتكرة مدعومة بالذكاء الاصطناعي تساعد الشركات الناشئة والمؤسسات على التخطيط الاستراتيجي واتخاذ قرارات مدروسة لتحقيق النمو المستدام.\"\n                },\n                {\n                    f_id: 2,\n                    f_question: \"ما هي المزايا التي يوفرها أوج؟\",\n                    f_answer: \"أوج منصة ذكاء اصطناعي تدعم الشركات الناشئة ببناء نماذج أعمال مخصصة، تقسيم الأهداف، تتبع الأداء، وتعزيز التعاون، مما يساعدها على تقليل المخاطر وتحقيق النمو المستدام.\"\n                },\n                {\n                    f_id: 3,\n                    f_question: \"هل أوج مناسب فقط للشركات الناشئة الصغيرة؟\",\n                    f_answer: \"لا، أوج يخدم الشركات الناشئة المتناهية الصغر والصغيرة، بالإضافة إلى رواد الأعمال الذين لم يبدأوا بتنفيذ أفكارهم بعد، مما يجعله الحل المثالي لدعم الابتكار والنمو في جميع المراحل.\"\n                },\n                {\n                    f_id: 4,\n                    f_question: \"هل بياناتي آمنة في أوج؟\",\n                    f_answer: \"نعم، نولي أولوية قصوى لأمان بياناتك. يتم تخزين المعلومات بأمان مع ضمان عدم مشاركتها لأي أطراف خارجية.\"\n                },\n                {\n                    f_id: 5,\n                    f_question: \"هل يمكنني العمل مع أعضاء فريقي على أوج؟\",\n                    f_answer: \"بالتأكيد! يتيح لك أوج دعوة أعضاء فريقك للتعاون على نفس صفحة الشركة.\"\n                }\n            ]\n        },\n        // Footer\n        footer: {\n            copyright: \"أوج ٢٠٢٥ © جميع الحقوق محفوظة\"\n        }\n    }\n};\n\n// Add CSS for language direction support\nconst directionStyles = `\n/* Add specific direction styles */\n.ltr-content {\n  direction: ltr;\n  text-align: left;\n}\n\n.rtl-content {\n  direction: rtl;\n  text-align: right;\n}\n\n/* Adjust flexbox direction for language */\n.ltr-layout .header-wrapper,\n.ltr-layout .feature-modal-title-wrapper,\n.ltr-layout .partner-card-inner {\n  flex-direction: row;\n}\n\n.rtl-layout .header-wrapper,\n.rtl-layout .feature-modal-title-wrapper,\n.rtl-layout .partner-card-inner {\n  flex-direction: row-reverse;\n}\n\n/* Adjust icons and buttons for language */\n.ltr-layout .auth-button-icon {\n  transform: scaleX(1);\n}\n\n.rtl-layout .auth-button-icon {\n  transform: scaleX(-1);\n}\n\n/* Adjust margins for language */\n.ltr-layout .feature-modal-icon {\n  margin-right: 1.5rem;\n  margin-left: 0;\n}\n\n.rtl-layout .feature-modal-icon {\n  margin-left: 1.5rem;\n  margin-right: 0;\n}\n`;\n\nconst HomePage = ({ isAuthenticated, setIsAuthenticated }) => {\n    const [activeFeature, setActiveFeature] = useState(null);\n    const [featureModalOpen, setFeatureModalOpen] = useState(false);\n    const [currentLanguage, setCurrentLanguage] = useState(\"ar\"); // Default to Arabic\n    const navigate = useNavigate();\n\n    // Set the document's direction based on language\n    useEffect(() => {\n        document.documentElement.dir = currentLanguage === \"ar\" ? \"rtl\" : \"ltr\";\n    }, [currentLanguage]);\n\n    // Prevent body scrolling when modal is open\n    useEffect(() => {\n        if (featureModalOpen) {\n            document.body.style.overflow = 'hidden';\n        } else {\n            document.body.style.overflow = 'auto';\n        }\n        return () => {\n            document.body.style.overflow = 'auto';\n        };\n    }, [featureModalOpen]);\n\n    // Function to handle language change\n    const handleLanguageChange = (language) => {\n        setCurrentLanguage(language);\n    };\n\n    // Get translation based on current language\n    const t = translations[currentLanguage];\n\n    // Translation function for FAQ\n    const getTranslatedFAQ = () => {\n        return t.faq.items;\n    };\n\n    const handleSignInClick = () => {\n        navigate(\"/signin\");\n    };\n\n    const handleSignOutClick = () => {\n        localStorage.removeItem(\"authToken\");\n        localStorage.removeItem(\"userId\");\n        setIsAuthenticated(false);\n        navigate(\"/\");\n    };\n\n    const handleServicesClick = () => {\n        navigate(\"/services\");\n    };\n\n    const scrollToSection = (sectionId) => {\n        const section = document.getElementById(sectionId);\n        if (section) {\n            section.scrollIntoView({ behavior: \"smooth\" });\n        }\n    };\n\n    const handleFeatureClick = (feature) => {\n        setActiveFeature(feature);\n        setFeatureModalOpen(true);\n    };\n\n    const closeFeatureModal = () => {\n        setFeatureModalOpen(false);\n        setTimeout(() => setActiveFeature(null), 300); // Clear after animation\n    };\n\n    const handleContactClick = (e) => {\n        e.preventDefault();\n        window.location.href = \"mailto:awjplatform@gmail.com\";\n    };\n\n    return (\n        <>\n            {/* Inject direction-specific styles */}\n            <style>{directionStyles}</style>\n            {/* Enhanced Navigation Header with language toggle */}\n            <NavigationHeader\n                isAuthenticated={isAuthenticated}\n                handleSignInClick={handleSignInClick}\n                handleSignOutClick={handleSignOutClick}\n                scrollToSection={scrollToSection}\n                showLanguageToggle={true}\n                currentLanguage={currentLanguage}\n                onLanguageChange={handleLanguageChange}\n            />\n            <div className={`home-page ${currentLanguage === \"ar\" ? \"rtl-content\" : \"ltr-content\"}`}>\n\n                {/* Hero Section */}\n                <section className=\"hero-section\">\n                    <div className=\"hero-content\">\n                        <h1 className=\"hero-title\">{t.hero.title}</h1>\n                        <p className=\"hero-description\">\n                            {t.hero.description}\n                        </p>\n\n                        <button className=\"cta-button\" onClick={handleServicesClick}>\n                            <span>{t.hero.cta}</span>\n                        </button>\n                    </div>\n                    <img className=\"hero-background\" alt=\"Intersect\" src={intersect} />\n                </section>\n\n                {/* Features Section */}\n                <section className=\"features-section\">\n                    <div className=\"container mx-auto px-4\">\n                        <h2 className=\"section-title\">{t.features.title}</h2>\n\n                        <div className=\"features-grid\">\n                            <div\n                                className=\"feature-card\"\n                                onClick={() => handleFeatureClick('flexibility')}\n                            >\n                                <div className=\"feature-icon-wrapper\">\n                                    <div className=\"feature-icon\">\n                                        <i className=\"feature-icon-flexibility\"></i>\n                                    </div>\n                                </div>\n                                <h3 className=\"feature-title\">{t.features.flexibility.title}</h3>\n                                <p className=\"feature-description\">\n                                    {t.features.flexibility.description}\n                                </p>\n                                <div className=\"feature-cta\">\n                                    <span className=\"feature-learn-more\">{t.features.flexibility.learnMore}</span>\n                                </div>\n                            </div>\n\n                            <div\n                                className=\"feature-card\"\n                                onClick={() => handleFeatureClick('ease')}\n                            >\n                                <div className=\"feature-icon-wrapper\">\n                                    <div className=\"feature-icon\">\n                                        <i className=\"feature-icon-ease\"></i>\n                                    </div>\n                                </div>\n                                <h3 className=\"feature-title\">{t.features.ease.title}</h3>\n                                <p className=\"feature-description\">\n                                    {t.features.ease.description}\n                                </p>\n                                <div className=\"feature-cta\">\n                                    <span className=\"feature-learn-more\">{t.features.ease.learnMore}</span>\n                                </div>\n                            </div>\n\n                            <div\n                                className=\"feature-card\"\n                                onClick={() => handleFeatureClick('improve')}\n                            >\n                                <div className=\"feature-icon-wrapper\">\n                                    <div className=\"feature-icon\">\n                                        <i className=\"feature-icon-improve\"></i>\n                                    </div>\n                                </div>\n                                <h3 className=\"feature-title\">{t.features.improve.title}</h3>\n                                <p className=\"feature-description\">\n                                    {t.features.improve.description}\n                                </p>\n                                <div className=\"feature-cta\">\n                                    <span className=\"feature-learn-more\">{t.features.improve.learnMore}</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n                {/* Vision 2030 Section */}\n                <section className=\"vision-section\" id=\"aboutSection\">\n                    <div className=\"vision-content\">\n                        <h2 className=\"vision-title\">{t.vision.title}</h2>\n                        <p className=\"vision-description\">\n                            {t.vision.description}\n                        </p>\n                    </div>\n                    <div className=\"vision-background\">\n                        <img className=\"vision-bg-image\" alt=\"2030\" src={x57} />\n                        <img className=\"vision-gradient\" alt=\"recGradient\" src={x59} />\n                    </div>\n                </section>\n\n                {/* Partners Section */}\n                <section className=\"partners-section\" id=\"partnersSection\">\n                    <div className=\"container mx-auto px-4 py-16 relative z-10\">\n                        <div className=\"text-center mb-12\">\n                            <h2 className=\"section-title text-3xl font-bold mb-4\">{t.partners.title}</h2>\n                            <div className=\"section-divider mx-auto\"></div>\n                        </div>\n\n                        <div className=\"partners-slider\">\n                            <div className=\"partners-grid grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-8 justify-items-center\">\n                                <div className=\"partner-card\">\n                                    <div className=\"partner-card-inner\">\n                                        <div className=\"partner-logo-container\">\n                                            <img className=\"partner-logo\" alt=\"Monshaat logo\" src={MONSHAAT} />\n                                        </div>\n                                        <div className=\"partner-info\">\n                                            <h3 className=\"partner-name\">{t.partners.monshaat.name}</h3>\n                                            <p className=\"partner-description\">{t.partners.monshaat.description}</p>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"partner-card\">\n                                    <div className=\"partner-card-inner\">\n                                        <div className=\"partner-logo-container\">\n                                            <img className=\"partner-logo\" alt=\"AWS logo\" src={AWS} />\n                                        </div>\n                                        <div className=\"partner-info\">\n                                            <h3 className=\"partner-name\">{t.partners.aws.name}</h3>\n                                            <p className=\"partner-description\">{t.partners.aws.description}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"partner-cta text-center mt-16\">\n                            <p className=\"mb-4 text-lg\">{t.partners.cta.question}</p>\n                            <button className=\"partner-cta-button\" onClick={handleContactClick}>\n                                {t.partners.cta.button}\n                            </button>\n                        </div>\n                    </div>\n\n                    {/* Background elements */}\n                    <img className=\"partners-bg absolute top-0 left-0 w-full h-full object-cover opacity-10 z-0\" alt=\"Background\" src={x60} />\n                    <div className=\"partners-bg-gradient absolute top-0 left-0 w-full h-full z-1\"></div>\n                </section>\n\n                {/* FAQ Section */}\n                <section className=\"faq-section\" id=\"faqSection\">\n                    <div className=\"container mx-auto px-4\">\n                        <h2 className=\"section-title\">{t.faq.title}</h2>\n                        <div className=\"section-divider mx-auto\"></div>\n                        <div className=\"faq-wrapper\">\n                            <FAQ faq={getTranslatedFAQ()} language={currentLanguage} />\n                        </div>\n                    </div>\n                </section>\n\n                {/* Footer */}\n                <footer className=\"footer\">\n                    <div className=\"container mx-auto px-4\">\n                        <p className=\"copyright\">{t.footer.copyright}</p>\n                    </div>\n                </footer>\n\n                {/* Feature Modal */}\n                <div className={`feature-modal ${featureModalOpen ? 'open' : ''}`}>\n                    <div className=\"feature-modal-content\">\n                        <button\n                            className=\"feature-modal-close\"\n                            onClick={closeFeatureModal}\n                            aria-label=\"Close modal\"\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                                <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                            </svg>\n                        </button>\n\n                        {activeFeature === 'flexibility' && (\n                            <>\n                                <div className=\"feature-modal-title-wrapper\">\n                                    <div className=\"feature-icon\">\n                                        <i className=\"feature-icon-flexibility\"></i>\n                                    </div>\n                                    <h3 className=\"feature-modal-title\">{t.features.flexibility.title}</h3>\n                                </div>\n                                <div className=\"feature-modal-body\">\n                                    <p>{t.features.flexibility.modal.description}</p>\n\n                                    <div className=\"feature-icons-row\">\n                                        <div className=\"feature-item-icon\">\n                                            <div className=\"icon-circle\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                                    <path d=\"M14 3v4a1 1 0 0 0 1 1h4\"></path>\n                                                    <path d=\"M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z\"></path>\n                                                    <path d=\"M12 17v-6\"></path>\n                                                    <path d=\"M9 14l3 3 3-3\"></path>\n                                                </svg>\n                                            </div>\n                                            <div className=\"icon-text\">{t.features.flexibility.modal.items[0]}</div>\n                                        </div>\n\n                                        <div className=\"feature-item-icon\">\n                                            <div className=\"icon-circle\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                                    <path d=\"M12 2L2 7l10 5 10-5-10-5z\"></path>\n                                                    <path d=\"M2 17l10 5 10-5\"></path>\n                                                    <path d=\"M2 12l10 5 10-5\"></path>\n                                                </svg>\n                                            </div>\n                                            <div className=\"icon-text\">{t.features.flexibility.modal.items[1]}</div>\n                                        </div>\n\n                                        <div className=\"feature-item-icon\">\n                                            <div className=\"icon-circle\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                                    <path d=\"M12 2v4\"></path>\n                                                    <path d=\"M12 18v4\"></path>\n                                                    <path d=\"M4.93 4.93l2.83 2.83\"></path>\n                                                    <path d=\"M16.24 16.24l2.83 2.83\"></path>\n                                                    <path d=\"M2 12h4\"></path>\n                                                    <path d=\"M18 12h4\"></path>\n                                                    <path d=\"M4.93 19.07l2.83-2.83\"></path>\n                                                    <path d=\"M16.24 7.76l2.83-2.83\"></path>\n                                                </svg>\n                                            </div>\n                                            <div className=\"icon-text\">{t.features.flexibility.modal.items[2]}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </>\n                        )}\n\n                        {activeFeature === 'ease' && (\n                            <>\n                                <div className=\"feature-modal-title-wrapper\">\n                                    <div className=\"feature-icon\">\n                                        <i className=\"feature-icon-ease\"></i>\n                                    </div>\n                                    <h3 className=\"feature-modal-title\">{t.features.ease.title}</h3>\n                                </div>\n                                <div className=\"feature-modal-body\">\n                                    <p>{t.features.ease.modal.description}</p>\n\n                                    <div className=\"feature-icons-row\">\n                                        <div className=\"feature-item-icon\">\n                                            <div className=\"icon-circle\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                                                    <path d=\"M9 12l2 2 4-4\"></path>\n                                                </svg>\n                                            </div>\n                                            <div className=\"icon-text\">{t.features.ease.modal.items[0]}</div>\n                                        </div>\n\n                                        <div className=\"feature-item-icon\">\n                                            <div className=\"icon-circle\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                                    <rect x=\"2\" y=\"3\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\"></rect>\n                                                    <line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\"></line>\n                                                    <line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\"></line>\n                                                </svg>\n                                            </div>\n                                            <div className=\"icon-text\">{t.features.ease.modal.items[1]}</div>\n                                        </div>\n\n                                        <div className=\"feature-item-icon\">\n                                            <div className=\"icon-circle\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                                    <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n                                                    <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n                                                </svg>\n                                            </div>\n                                            <div className=\"icon-text\">{t.features.ease.modal.items[2]}</div>\n                                        </div>\n\n                                        <div className=\"feature-item-icon\">\n                                            <div className=\"icon-circle\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                                    <circle cx=\"12\" cy=\"12\" r=\"4\"></circle>\n                                                    <path d=\"M12 2v2\"></path>\n                                                    <path d=\"M12 20v2\"></path>\n                                                    <path d=\"M4.93 4.93l1.41 1.41\"></path>\n                                                    <path d=\"M17.66 17.66l1.41 1.41\"></path>\n                                                    <path d=\"M2 12h2\"></path>\n                                                    <path d=\"M20 12h2\"></path>\n                                                    <path d=\"M6.34 17.66l-1.41 1.41\"></path>\n                                                    <path d=\"M19.07 4.93l-1.41 1.41\"></path>\n                                                </svg>\n                                            </div>\n                                            <div className=\"icon-text\">{t.features.ease.modal.items[3]}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </>\n                        )}\n\n                        {activeFeature === 'improve' && (\n                            <>\n                                <div className=\"feature-modal-title-wrapper\">\n                                    <div className=\"feature-icon\">\n                                        <i className=\"feature-icon-improve\"></i>\n                                    </div>\n                                    <h3 className=\"feature-modal-title\">{t.features.improve.title}</h3>\n                                </div>\n                                <div className=\"feature-modal-body\">\n                                    <p>{t.features.improve.modal.description}</p>\n\n                                    <div className=\"feature-icons-row\">\n                                        <div className=\"feature-item-icon\">\n                                            <div className=\"icon-circle\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                                    <path d=\"M3 3v18h18\"></path>\n                                                    <path d=\"M18.7 8l-5.1 5.2-2.8-2.7L7 14.3\"></path>\n                                                </svg>\n                                            </div>\n                                            <div className=\"icon-text\">{t.features.improve.modal.items[0]}</div>\n                                        </div>\n\n                                        <div className=\"feature-item-icon\">\n                                            <div className=\"icon-circle\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                                    <path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path>\n                                                    <polyline points=\"3.27 6.96 12 12.01 20.73 6.96\"></polyline>\n                                                    <line x1=\"12\" y1=\"22.08\" x2=\"12\" y2=\"12\"></line>\n                                                </svg>\n                                            </div>\n                                            <div className=\"icon-text\">{t.features.improve.modal.items[1]}</div>\n                                        </div>\n\n                                        <div className=\"feature-item-icon\">\n                                            <div className=\"icon-circle\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                                    <polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"></polygon>\n                                                </svg>\n                                            </div>\n                                            <div className=\"icon-text\">{t.features.improve.modal.items[2]}</div>\n                                        </div>\n\n                                        <div className=\"feature-item-icon\">\n                                            <div className=\"icon-circle\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                                                    <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line>\n                                                    <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>\n                                                </svg>\n                                            </div>\n                                            <div className=\"icon-text\">{t.features.improve.modal.items[3]}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div >\n        </>\n    );\n};\n\nexport default HomePage;","import React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { doc, getDoc, collection, query, where, getDocs, updateDoc } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport \"./GoalDecomposeResult.css\";\nimport SmallSqrs1 from \"./assets/SmallSqrs1.svg\";\nimport SmallSqrs2 from \"./assets/SmallSqrs2.svg\";\nimport LeftArrow from \"./assets/LeftArrow.svg\";\nimport Header from \"./Header\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faHourglassHalf, faClock, faTasks, faCalendarAlt, faChartLine, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\n\n// Translation data object\nconst translationsData = {\n  en: {\n    unknownProject: \"Unknown Project\",\n    noProjectId: \"No project ID was provided.\",\n    errorFetchingProject: \"Error fetching project details.\",\n    projectNotFound: \"Project not found.\",\n    totalMilestones: \"Total Milestones\",\n    tasksLabel: \"Tasks\",\n    timeEstimate: \"Time Estimate\",\n    completionRate: \"Completion Rate\",\n    projectStatusLabel: \"Project Status:\",\n    timelineTab: \"Timeline\",\n    risksTab: \"Risks\",\n    loadingProjectData: \"Loading project data...\",\n    backToProjects: \"Back to Projects\",\n    progressLabel: \"Progress\",\n    daysLabel: \"days\",\n    kpiLabel: \"KPI\",\n    riskIndicatorLabel: \"Risk Indicator\",\n    riskFactorsLabel: \"Risk Factors\",\n    notStartedStatus: \"Not Started\",\n    inProgressStatus: \"In Progress\",\n    completedStatus: \"Completed\",\n    riskHigh: \"High\",\n    riskMedium: \"Medium\",\n    riskLow: \"Low\",\n    riskUnknown: \"Unknown\",\n    statusNotStarted: \"Not Started\",\n    statusInProgress: \"In Progress\",\n    statusCompleted: \"Completed\",\n    tasksHeading: \"Tasks\",\n    progress: \"Progress\"\n  },\n  ar: {\n    unknownProject: \"مشروع غير معروف\",\n    noProjectId: \"لم يتم توفير معرف المشروع.\",\n    errorFetchingProject: \"خطأ في جلب تفاصيل المشروع.\",\n    projectNotFound: \"لم يتم العثور على المشروع.\",\n    totalMilestones: \"إجمالي المراحل\",\n    tasksLabel: \"المهام\",\n    timeEstimate: \"الوقت المتوقع\",\n    completionRate: \"نسبة الإنجاز\",\n    projectStatusLabel: \"حالة المشروع:\",\n    timelineTab: \"الجدول الزمني\",\n    risksTab: \"المخاطر\",\n    loadingProjectData: \"جاري تحميل بيانات المشروع...\",\n    backToProjects: \"المشاريع القائمة\",\n    progressLabel: \"التقدم\",\n    daysLabel: \"يوم\",\n    kpiLabel: \"مؤشر الأداء الرئيسي\",\n    riskIndicatorLabel: \"مؤشر الخطر\",\n    riskFactorsLabel: \"عوامل الخطر\",\n    notStartedStatus: \"لم يبدأ\",\n    inProgressStatus: \"قيد التنفيذ\",\n    completedStatus: \"مكتمل\",\n    riskHigh: \"عالي\",\n    riskMedium: \"متوسط\",\n    riskLow: \"منخفض\",\n    riskUnknown: \"غير معروف\",\n    statusNotStarted: \"لم يبدأ\",\n    statusInProgress: \"قيد التنفيذ\",\n    statusCompleted: \"مكتمل\",\n    tasksHeading: \"المهام\",\n    progress: \"التقدم\"\n  }\n};\n\n// Loading spinner component\nconst LoadingSpinner = ({ translations }) => (\n  <div className=\"loading-spinner\">\n    <div className=\"spinner\"></div>\n    <p>{translations.loadingProjectData}</p>\n  </div>\n);\n\n// Error message component\nconst ErrorMessage = ({ message }) => (\n  <div className=\"error-message\">\n    <FontAwesomeIcon icon={faExclamationTriangle} />\n    <p>{message}</p>\n  </div>\n);\n\nconst GoalDecomposeResult = () => {\n  // Router hooks\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { project_id } = location.state || {};\n\n  // Component state\n  const [projectData, setProjectData] = useState({\n    project_name: \"Unknown Project\",\n    project_id: \"\",\n    milestones: []\n  });\n  const [projectStatus, setProjectStatus] = useState(\"Not Started\");\n  const [tasks, setTasks] = useState([]);\n  const [activeTab, setActiveTab] = useState(\"timeline\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [updateTrigger, setUpdateTrigger] = useState(0); // Add this to force re-renders\n\n  // Add language state\n  const [language, setLanguage] = useState(() => {\n    return localStorage.getItem('app-language') || 'en'; // Default to English\n  });\n\n  // Get translations for current language\n  const t = translationsData[language];\n\n  // Apply language change effects\n  useEffect(() => {\n    document.documentElement.dir = language === 'ar' ? 'rtl' : 'ltr';\n    localStorage.setItem('app-language', language);\n  }, [language]);\n\n  // Microsoft Translator API implementation\n  const subscriptionKey = \"6sI4sDyz7hl0lTJ8LKFISSftatGeBshi2FKqiRKWua0YMft2B4ZKJQQJ99BDACFcvJRXJ3w3AAAbACOGlUjA\";\n  const endpoint = \"https://api.cognitive.microsofttranslator.com/translate?api-version=3.0\";\n  const region = \"qatarcentral\";\n\n  const translateText = async (text, targetLanguage) => {\n    if (!text) return \"\";\n    try {\n      const response = await fetch(endpoint + `&to=${targetLanguage}`, {\n        method: \"POST\",\n        headers: {\n          \"Ocp-Apim-Subscription-Key\": subscriptionKey,\n          \"Ocp-Apim-Subscription-Region\": region,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify([{ text }]),\n      });\n\n      if (!response.ok) {\n        console.error(`Translation API error: ${response.status} - ${await response.text()}`);\n        return text;\n      }\n\n      const data = await response.json();\n      return data[0].translations[0].text;\n    } catch (error) {\n      console.error(\"Error during translation:\", error);\n      return text;\n    }\n  };\n\n  useEffect(() => {\n    if (!project_id) {\n      setError(t.noProjectId);\n      setLoading(false);\n      return;\n    }\n\n    const fetchProjectData = async () => {\n      try {\n        await fetchProjectDetails();\n      } catch (err) {\n        console.error(\"Error fetching project data:\", err);\n        setError(t.errorFetchingProject);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProjectData();\n  }, [project_id, language]); // Re-fetch when language changes\n\n  // Debug logging for tasks and progress changes\n  useEffect(() => {\n    if (tasks.length > 0) {\n      console.log(\"Tasks updated:\", tasks);\n\n      // Log milestone progress for debugging\n      projectData.milestones.forEach(milestone => {\n        const progress = getMilestoneProgress(milestone.id);\n        console.log(`Milestone ${milestone.Milestone} progress: ${progress}%`);\n      });\n\n      // Update project status based on progress\n      const progress = getProjectProgress();\n      let status;\n      if (progress === 100) {\n        status = t.completedStatus;\n      } else if (progress === 0) {\n        status = t.notStartedStatus;\n      } else {\n        status = t.inProgressStatus;\n      }\n      setProjectStatus(status);\n\n      // Update project status in Firestore\n      updateProjectStatus(status);\n    }\n  }, [tasks, updateTrigger, projectData.milestones, t]);\n\n  // Update the fetchProjectDetails function to translate milestone names\n  const fetchProjectDetails = async () => {\n    // 1. Fetch the project document\n    const projectRef = doc(db, \"Project\", project_id);\n    const projectSnap = await getDoc(projectRef);\n\n    if (!projectSnap.exists()) {\n      setError(t.projectNotFound);\n      return;\n    }\n\n    const projectInfo = projectSnap.data();\n\n    // 2. Fetch milestones for this project\n    const milestonesQuery = query(\n      collection(db, \"Milestones\"),\n      where(\"ProjectID\", \"==\", project_id)\n    );\n    const milestonesSnapshot = await getDocs(milestonesQuery);\n\n    // Get raw milestones data\n    const rawMilestones = milestonesSnapshot.docs.map(doc => ({\n      ...doc.data(),\n      id: doc.id\n    }));\n\n    // Translate milestone names and risk factors if needed\n    let displayMilestones;\n    if (language === 'ar') {\n      // Translate to Arabic\n      displayMilestones = await Promise.all(\n        rawMilestones.map(async (milestone) => ({\n          ...milestone,\n          Milestone: await translateText(milestone.Milestone || \"\", \"ar\"),\n          KPI: await translateText(milestone.KPI || \"\", \"ar\"),\n          RiskFactors: await translateText(milestone.RiskFactors || \"\", \"ar\"),\n          RiskIndicator: await translateText(milestone.RiskIndicator || \"\", \"ar\")\n        }))\n      );\n    } else {\n      // Use English data as is\n      displayMilestones = rawMilestones;\n    }\n\n    // Get project name in selected language\n    const displayProjectName = language === 'ar'\n      ? await translateText(projectInfo.ProjectName || t.unknownProject, \"ar\")\n      : projectInfo.ProjectName || t.unknownProject;\n\n    // Update project data state\n    setProjectData({\n      project_name: displayProjectName,\n      project_id,\n      milestones: displayMilestones\n    });\n\n    // 3. Fetch all tasks for each milestone\n    await fetchTasksForMilestones(displayMilestones);\n  };\n\n  // Update the fetchTasksForMilestones function to translate task descriptions\n  const fetchTasksForMilestones = async (milestones) => {\n    const allTasks = [];\n\n    for (const milestone of milestones) {\n      const tasksQuery = query(\n        collection(db, \"Task\"),\n        where(\"MilestoneID\", \"==\", milestone.id)\n      );\n\n      const tasksSnapshot = await getDocs(tasksQuery);\n      const milestoneTasks = tasksSnapshot.docs.map(doc => ({\n        ...doc.data(),\n        id: doc.id,\n        milestoneId: milestone.id\n      }));\n\n      // Translate each task description if needed\n      for (const task of milestoneTasks) {\n        if (language === 'ar') {\n          task.Task = await translateText(task.Task || \"\", \"ar\");\n        }\n        allTasks.push(task);\n      }\n    }\n\n    setTasks(allTasks);\n  };\n\n  // Update project status in Firestore\n  const updateProjectStatus = async (status) => {\n    try {\n      // Get current project progress\n      const progress = getProjectProgress();\n\n      // Update in Firestore with both status and progress\n      const projectRef = doc(db, \"Project\", project_id);\n      await updateDoc(projectRef, {\n        Status: status,\n      });\n\n      console.log(`Project status updated to: ${status}`);\n    } catch (error) {\n      console.error(\"Error updating project status and progress:\", error);\n    }\n  };\n\n  // Update task status in Firestore and local state\n  const updateTaskStatus = async (taskId, newStatus) => {\n    try {\n      // Update in Firestore\n      const taskRef = doc(db, \"Task\", taskId);\n      await updateDoc(taskRef, { status: newStatus });\n\n      // Update in local state\n      setTasks(prevTasks =>\n        prevTasks.map(task =>\n          task.id === taskId ? { ...task, status: newStatus } : task\n        )\n      );\n\n      // Force component to re-render\n      setUpdateTrigger(prev => prev + 1);\n\n      console.log(`Task ${taskId} updated to ${newStatus}`);\n    } catch (error) {\n      console.error(\"Error updating task status:\", error);\n    }\n  };\n\n  // Handle language change\n  const handleLanguageChange = (newLanguage) => {\n    setLanguage(newLanguage);\n  };\n\n  // Modified getRiskClass function to handle translated risk indicators\n  const getRiskClass = (riskIndicator) => {\n    if (!riskIndicator) return \"risk-unknown\";\n\n    const risk = riskIndicator.toLowerCase();\n\n    // Check for English risk words\n    if (risk.includes(\"high\") || risk.includes(\"عالي\")) return \"risk-high\";\n    if (risk.includes(\"medium\") || risk.includes(\"متوسط\")) return \"risk-medium\";\n    if (risk.includes(\"low\") || risk.includes(\"منخفض\")) return \"risk-low\";\n\n    return \"risk-unknown\";\n  };\n\n  // Calculate total days for the project\n  const getTotalDays = () => {\n    return projectData.milestones.reduce((total, milestone) => {\n      return total + (parseInt(milestone.TimeEstimate) || 0);\n    }, 0);\n  };\n\n  // Calculate overall project progress\n  const getProjectProgress = () => {\n    if (tasks.length === 0) return 0;\n\n    const completedTasks = tasks.filter(task => task.status === \"Completed\").length;\n    const inProgressTasks = tasks.filter(task => task.status === \"In Progress\").length;\n\n    // Weight completed tasks as 100% and in-progress tasks as 50%\n    const progress = ((completedTasks * 100) + (inProgressTasks * 50)) / tasks.length;\n    const roundedProgress = Math.round(progress);\n\n    // NEW CODE: Here we need to update the project progress in Firestore directly\n    // This ensures the function is called whenever progress is calculated\n    if (project_id) {\n      const projectRef = doc(db, \"Project\", project_id);\n      updateDoc(projectRef, { Pprogress: roundedProgress })\n        .then(() => console.log(`Project progress updated to ${roundedProgress}%`))\n        .catch(err => console.error(\"Error updating project progress:\", err));\n    }\n\n    return roundedProgress;\n  };\n\n  // Calculate progress for a specific milestone\n  const getMilestoneProgress = (milestoneId) => {\n    const milestoneTasks = tasks.filter(task => task.milestoneId === milestoneId);\n\n    if (milestoneTasks.length === 0) return 0;\n\n    const completedTasks = milestoneTasks.filter(task => task.status === \"Completed\").length;\n    const inProgressTasks = milestoneTasks.filter(task => task.status === \"In Progress\").length;\n\n    const progress = ((completedTasks * 100) + (inProgressTasks * 50)) / milestoneTasks.length;\n    const roundedProgress = Math.round(progress);\n\n    // NEW CODE: Here we update the milestone progress in Firestore whenever it's calculated\n    const milestoneRef = doc(db, \"Milestones\", milestoneId);\n    updateDoc(milestoneRef, { Mprogress: roundedProgress })\n      .then(() => console.log(`Milestone ${milestoneId} progress updated to ${roundedProgress}%`))\n      .catch(err => console.error(\"Error updating milestone progress:\", err));\n\n    return roundedProgress;\n  };\n\n  const ProjectHeader = ({ projectName, onBackClick, translations }) => (\n    <div className=\"breadcrumb\">\n      <div className=\"breadcrumb-content\">\n        <button className=\"back-btn-small\" onClick={onBackClick}>\n          <img src={LeftArrow} alt=\"Back\" />\n          <span>{translations.backToProjects}</span>\n        </button>\n        <h1 className=\"project-title-centered\">{projectName}</h1>\n        <div className=\"spacer\"></div> {/* Empty div to help with flexbox centering */}\n      </div>\n    </div>\n  );\n  // Timeline view component with guaranteed working progress bar\n  const TimelineView = ({ milestones, tasks, getRiskClass, updateTaskStatus, refreshKey, translations }) => {\n    // We'll track state locally in this component\n    const [localTasks, setLocalTasks] = useState(tasks);\n\n    // Keep local tasks in sync with parent tasks\n    useEffect(() => {\n      setLocalTasks(tasks);\n    }, [tasks]);\n\n    // Wrapper for updateTaskStatus that ensures local updates\n    const handleTaskStatusChange = async (taskId, newStatus) => {\n      // Update task in local state immediately (optimistic update)\n      setLocalTasks(prevTasks =>\n        prevTasks.map(task =>\n          task.id === taskId ? { ...task, status: newStatus } : task\n        )\n      );\n\n      // Call the parent update function\n      await updateTaskStatus(taskId, newStatus);\n    };\n\n    const getTranslatedStatus = (status) => {\n      switch (status) {\n        case \"Not Started\":\n          return translations.statusNotStarted;\n        case \"In Progress\":\n          return translations.statusInProgress;\n        case \"Completed\":\n          return translations.statusCompleted;\n        default:\n          return status;\n      }\n    };\n\n    // Also update the getTranslatedRisk function in TimelineView component\n    const getTranslatedRisk = (risk) => {\n      if (!risk) return translations.riskUnknown;\n\n      const lowerRisk = risk.toLowerCase();\n      if (lowerRisk.includes(\"high\") || lowerRisk.includes(\"عالي\")) return translations.riskHigh;\n      if (lowerRisk.includes(\"medium\") || lowerRisk.includes(\"متوسط\")) return translations.riskMedium;\n      if (lowerRisk.includes(\"low\") || lowerRisk.includes(\"منخفض\")) return translations.riskLow;\n      return translations.riskUnknown;\n    };\n\n    return (\n      <div className=\"timeline-view\">\n        <div className=\"timeline-container\">\n          {milestones.map((milestone, index) => {\n            // Calculate progress based on localTasks for immediate feedback\n            const milestoneTasks = localTasks.filter(task => task.milestoneId === milestone.id);\n\n            let milestoneProgress = 0;\n            if (milestoneTasks.length > 0) {\n              const completedCount = milestoneTasks.filter(task => task.status === \"Completed\").length;\n              const inProgressCount = milestoneTasks.filter(task => task.status === \"In Progress\").length;\n              milestoneProgress = Math.round(((completedCount * 100) + (inProgressCount * 50)) / milestoneTasks.length);\n            }\n\n            return (\n              <div className=\"timeline-item\" key={`${index}-${refreshKey}`}>\n                <div className={`timeline-node ${milestoneProgress === 100 ? 'completed' : milestoneProgress > 0 ? 'in-progress' : ''}`}>\n                  {milestoneProgress === 100 ? (\n                    <FontAwesomeIcon icon={faCheck} />\n                  ) : milestoneProgress > 0 ? (\n                    <FontAwesomeIcon icon={faHourglassHalf} />\n                  ) : (\n                    <FontAwesomeIcon icon={faClock} />\n                  )}\n                </div>\n                <div className=\"timeline-content\">\n                  <div className=\"timeline-header\">\n                    <h3>{milestone.Milestone}</h3>\n                    <span className={`milestone-status ${milestoneProgress === 100 ? 'completed' : milestoneProgress > 0 ? 'in-progress' : 'not-started'}`}>\n                      {milestoneProgress === 100 ? translations.completedStatus :\n                        milestoneProgress > 0 ? translations.inProgressStatus :\n                          translations.notStartedStatus}\n                    </span>\n                  </div>\n\n                  {/* Tasks First */}\n                  <div className=\"timeline-tasks\">\n                    <h4 className=\"tasks-heading\">{translations.tasksHeading} ({milestoneTasks.length})</h4>\n                    {milestoneTasks.map((task, taskIndex) => (\n                      <div className=\"timeline-task-item\" key={`task-${taskIndex}-${refreshKey}`}>\n                        <div className=\"task-content\">\n                          <FontAwesomeIcon icon={faTasks} className=\"task-icon\" />\n                          <span className=\"task-text\">{task.Task}</span>\n                        </div>\n                        <div className=\"task-status-indicator\">\n                          <div className={`task-status-badge ${task.status.toLowerCase().replace(' ', '-')}`}>\n                            <span className=\"status-dot\"></span>\n                            <select\n                              value={task.status}\n                              onChange={(e) => handleTaskStatusChange(task.id, e.target.value)}\n                              className={`task-status-select ${task.status.toLowerCase().replace(' ', '-')}`}\n                            >\n                              <option value=\"Not Started\">{translations.statusNotStarted}</option>\n                              <option value=\"In Progress\">{translations.statusInProgress}</option>\n                              <option value=\"Completed\">{translations.statusCompleted}</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  {/* Progress Bar - Completely Rewritten Implementation */}\n                  <div className=\"timeline-progress\">\n                    <div className=\"progress-label\">\n                      <span>{translations.progress}</span>\n                      <span className=\"progress-percentage\">{milestoneProgress}%</span>\n                    </div>\n\n                    {/* Custom-styled progress bar to avoid CSS conflicts */}\n                    <div\n                      style={{\n                        height: '10px',\n                        backgroundColor: '#e0e0e0',\n                        borderRadius: '5px',\n                        overflow: 'hidden',\n                        position: 'relative',\n                        marginTop: '8px'\n                      }}\n                    >\n                      <div\n                        style={{\n                          width: `${milestoneProgress}%`,\n                          backgroundColor: '#e63a46',\n                          height: '100%',\n                          borderRadius: '5px',\n                          transition: 'width 0.3s ease-in-out'\n                        }}\n                      ></div>\n                    </div>\n                  </div>\n\n                  {/* Meta Info Last */}\n                  <div className=\"timeline-meta-top\">\n                    <div className=\"meta-item\">\n                      <FontAwesomeIcon icon={faCalendarAlt} />\n                      <span>{milestone.TimeEstimate} {translations.daysLabel}</span>\n                    </div>\n                    <div className=\"meta-item\">\n                      <FontAwesomeIcon icon={faChartLine} />\n                      <span>{milestone.KPI}</span>\n                    </div>\n                    <div className={`meta-item risk ${getRiskClass(milestone.RiskIndicator)}`}>\n                      <FontAwesomeIcon icon={faExclamationTriangle} />\n                      <span>{getTranslatedRisk(milestone.RiskIndicator)}</span>\n                    </div>\n                  </div>\n                </div>\n                {index < milestones.length - 1 && <div className=\"timeline-connector\"></div>}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  };\n  // Risks View Component\n  const RisksView = ({ milestones, getRiskClass, translations }) => {\n    const getTranslatedRisk = (risk) => {\n      if (!risk) return translations.riskUnknown;\n\n      const lowerRisk = risk.toLowerCase();\n      if (lowerRisk.includes(\"high\") || lowerRisk.includes(\"عالي\")) return translations.riskHigh;\n      if (lowerRisk.includes(\"medium\") || lowerRisk.includes(\"متوسط\")) return translations.riskMedium;\n      if (lowerRisk.includes(\"low\") || lowerRisk.includes(\"منخفض\")) return translations.riskLow;\n      return translations.riskUnknown;\n    };\n\n    return (\n      <div className=\"risks-view\">\n        <div className=\"risks-container\">\n          {milestones.map((milestone, index) => (\n            <div className={`risk-card ${getRiskClass(milestone.RiskIndicator)}`} key={index}>\n              <div className=\"risk-header\">\n                <h3>{milestone.Milestone}</h3>\n                <span className={`risk-level ${getRiskClass(milestone.RiskIndicator)}`}>\n                  {getTranslatedRisk(milestone.RiskIndicator)}\n                </span>\n              </div>\n              <div className=\"risk-body\">\n                <div className=\"risk-factors-list\">\n                  <h4>{translations.riskFactorsLabel}</h4>\n                  {milestone.RiskFactors.split(',').map((risk, riskIndex) => (\n                    <div className=\"risk-factor\" key={riskIndex}>\n                      <FontAwesomeIcon icon={faExclamationTriangle} />\n                      <span>{risk.trim()}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n  return (\n    <div className=\"goal-decompose-page\">\n      {/* Header with language toggle */}\n      <Header\n        showNotifications={true}\n        showUserIcon={true}\n        showMobileMenu={false}\n        showLanguageToggle={true}\n        currentLanguage={language}\n        onLanguageChange={handleLanguageChange}\n      />\n\n      {/* Decorative elements */}\n      <img className=\"decoration decoration-top-left\" src={SmallSqrs1} alt=\"\" aria-hidden=\"true\" />\n      <img className=\"decoration decoration-bottom-right\" src={SmallSqrs2} alt=\"\" aria-hidden=\"true\" />\n\n      {/* Main content */}\n      <main className=\"main-content\">\n        {/* Project title and back button */}\n        <ProjectHeader\n          projectName={projectData.project_name}\n          onBackClick={() => navigate(\"/dashboard\", { state: { selectedSection: \"projects\" } })}\n          translations={t}\n        />\n\n        {/* Project stats overview */}\n        <div className=\"project-overview-card\">\n          <div className=\"card-content\">\n            <div className=\"stat-box\">\n              <h3>{t.totalMilestones}</h3>\n              <p className=\"stat-value\">{projectData.milestones.length}</p>\n            </div>\n            <div className=\"stat-box\">\n              <h3>{t.tasksLabel}</h3>\n              <p className=\"stat-value\">{tasks.length}</p>\n            </div>\n            <div className=\"stat-box\">\n              <h3>{t.timeEstimate}</h3>\n              <p className=\"stat-value\">{getTotalDays()} {t.daysLabel}</p>\n            </div>\n            <div className=\"stat-box\">\n              <h3>{t.completionRate}</h3>\n              <p className=\"stat-value\">{getProjectProgress()}%</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Tab navigation */}\n        <div className=\"tabs\">\n          <button\n            className={`tab-btn ${activeTab === 'timeline' ? 'active' : ''}`}\n            onClick={() => setActiveTab('timeline')}\n          >\n            {t.timelineTab}\n          </button>\n          <button\n            className={`tab-btn ${activeTab === 'risks' ? 'active' : ''}`}\n            onClick={() => setActiveTab('risks')}\n          >\n            {t.risksTab}\n          </button>\n        </div>\n\n        {/* Tab content */}\n        <div className=\"tab-content\">\n          {loading ? (\n            <LoadingSpinner translations={t} />\n          ) : error ? (\n            <ErrorMessage message={error} />\n          ) : (\n            <>\n              {activeTab === 'timeline' && (\n                <TimelineView\n                  milestones={projectData.milestones}\n                  tasks={tasks}\n                  getMilestoneProgress={getMilestoneProgress}\n                  getRiskClass={getRiskClass}\n                  updateTaskStatus={updateTaskStatus}\n                  refreshKey={updateTrigger} // Pass refresh key to force re-renders\n                  translations={t}\n                />\n              )}\n\n              {activeTab === 'risks' && (\n                <RisksView\n                  milestones={projectData.milestones}\n                  getRiskClass={getRiskClass}\n                  translations={t}\n                />\n              )}\n            </>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default GoalDecomposeResult;","// App.js\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport Service1Page from \"./Service1Page\";\nimport Service2Page from \"./Service2Page\";\nimport CreateAccountPage from \"./CreateAccountPage\";\nimport Dashboard from \"./Dashboard\";\nimport BusinessModelResult from \"./BusinessModelResult\";\nimport BusinessModelPage from \"./BusinessModelPage\";\nimport CreateCompanyAccount from \"./CreateCompanyAccount\";\nimport GoalDecompose from \"./GoalDecompose\";\nimport SignIn from \"./SignIn\";\nimport Services from \"./Services\";\nimport \"./style.css\";\nimport HomePage from \"./HomePage\";\nimport GoalDecomposeResult from \"./GoalDecomposingResult\";\nimport { NotificationProvider } from './NotificationContext';\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    const checkAuth = () => {\n      const token = localStorage.getItem(\"authToken\");\n      const userId = localStorage.getItem(\"userId\");\n      const authStatus = !!(token && userId);\n      setIsAuthenticated(authStatus);\n      console.log(\"Auth status check:\", authStatus, \"Token:\", token, \"UserId:\", userId, \"isAuthenticated:\", authStatus);\n    };\n\n    checkAuth();\n\n    const handleStorageChange = () => {\n      checkAuth();\n    };\n\n    window.addEventListener(\"storage\", handleStorageChange);\n\n    return () => {\n      window.removeEventListener(\"storage\", handleStorageChange);\n    };\n  }, []);\n\n  const handleSignInSuccess = () => {\n    setIsAuthenticated(true);\n    console.log(\"Sign-in success, auth set to true.\");\n  };\n\n  return (\n    <NotificationProvider>\n      <Router>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<HomePage isAuthenticated={isAuthenticated} setIsAuthenticated={setIsAuthenticated} />}\n          />\n          <Route\n            path=\"/signin\"\n            element={<SignIn setIsAuthenticated={handleSignInSuccess} />}\n          />\n          <Route path=\"/services\" element={<Services />} />\n          <Route path=\"/service-1\" element={<Service1Page />} />\n          <Route path=\"/service-2\" element={<Service2Page />} />\n          <Route path=\"/create-account\" element={<CreateAccountPage />} />\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          {/* <Route\n            path=\"/dashboard\"\n            element={\n              isAuthenticated ? (\n                <Dashboard />\n              ) : (\n                <Navigate to=\"/signin\" state={{ from: \"/dashboard\" }} replace />\n              )\n            }\n          /> */}\n          <Route\n            path=\"/create-company-account\"\n            element={<CreateCompanyAccount />}\n          />\n          <Route path=\"/business-model\" element={<BusinessModelPage />} />\n          <Route path=\"/business-model-result\" element={<BusinessModelResult />} />\n          <Route path=\"/goal-decomposing\" element={<GoalDecompose />} />\n          <Route\n            path=\"/goal-decomposing-result\"\n            element={<GoalDecomposeResult />}\n          />\n        </Routes>\n      </Router>\n    </NotificationProvider>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}